   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"proyecto.c"
  21              	.Ltext0:
  22              		.file 1 "../proyecto.c"
 1894              		.align	2
 1895              	.LC0:
 1896 0000 53652075 		.ascii	"Se usaran miniaturas para\000"
 1896      73617261 
 1896      6E206D69 
 1896      6E696174 
 1896      75726173 
 1897 001a 0000     		.align	2
 1898              	.LC1:
 1899 001c 636F6E66 		.ascii	"configurar la transicion de fotos\000"
 1899      69677572 
 1899      6172206C 
 1899      61207472 
 1899      616E7369 
 1900 003e 0000     		.align	2
 1901              	.LC2:
 1902 0040 456C6967 		.ascii	"Elige el modo de transici\363n: \000"
 1902      6520656C 
 1902      206D6F64 
 1902      6F206465 
 1902      20747261 
 1903 005e 0000     		.align	2
 1904              	.LC3:
 1905 0060 302D436F 		.ascii	"0-Con pausa, 1- Sin pausa \000"
 1905      6E207061 
 1905      7573612C 
 1905      20312D20 
 1905      53696E20 
 1906 007b 00       		.align	2
 1907              	.LC4:
 1908 007c 48617320 		.ascii	"Has seleccionado modo 0\000"
 1908      73656C65 
 1908      6363696F 
 1908      6E61646F 
 1908      206D6F64 
 1909              		.align	2
 1910              	.LC5:
 1911 0094 48617320 		.ascii	"Has seleccionado modo 1\000"
 1911      73656C65 
 1911      6363696F 
 1911      6E61646F 
 1911      206D6F64 
 1912              		.align	2
 1913              	.LC6:
 1914 00ac 50726573 		.ascii	"Presione 0 para comenzar: \000"
 1914      696F6E65 
 1914      20302070 
 1914      61726120 
 1914      636F6D65 
 1915 00c7 00       		.text
 1916              		.align	2
 1917              		.global	main
 1919              	main:
 1920              	.LFB0:
   1:../proyecto.c **** /*cd C:\Users\DOSTATIC\Documents\PSyD-proyecto(2022-23)\bmp320x240
   2:../proyecto.c **** source load_bmp.txt*/
   3:../proyecto.c **** #include <s3c44b0x.h>
   4:../proyecto.c **** #include <common_types.h>
   5:../proyecto.c **** #include <system.h>
   6:../proyecto.c **** #include <segs.h>
   7:../proyecto.c **** #include <timers.h>
   8:../proyecto.c **** #include <lcd.h>
   9:../proyecto.c **** #include <keypad.h>
  10:../proyecto.c **** 
  11:../proyecto.c **** /* Número máximo de fotos distintas visualizables en el marco */
  12:../proyecto.c **** 
  13:../proyecto.c **** #define MAX_PHOTOS (40)
  14:../proyecto.c **** 
  15:../proyecto.c **** /* Direcciones en donde se encuentran cargados los BMPs tras la ejecución del comando "script load_
  16:../proyecto.c **** 
  17:../proyecto.c **** #define ARBOL       ((uint8 *)0x0c210000)
  18:../proyecto.c **** #define PICACHU     ((uint8 *)0x0c220000)
  19:../proyecto.c **** #define MINIARBOL   ((uint8 *)0x0c280000)
  20:../proyecto.c **** #define MINIPICACHU ((uint8 *)0x0c288000)
  21:../proyecto.c **** 
  22:../proyecto.c **** /* Dimensiones de la pantalla para la realización de efectos */
  23:../proyecto.c **** 
  24:../proyecto.c **** #define LCD_COLS   (LCD_WIDTH/2)        // Para simplificar el procesamiento consideraremos una col
  25:../proyecto.c **** #define LCD_ROWS   (LCD_HEIGHT)
  26:../proyecto.c **** 
  27:../proyecto.c **** /* Sentidos de realización del efecto */
  28:../proyecto.c **** 
  29:../proyecto.c **** #define LEFT       (0)
  30:../proyecto.c **** #define RIGHT      (1)
  31:../proyecto.c **** #define UP         (2)
  32:../proyecto.c **** #define DOWN       (3)
  33:../proyecto.c **** #define NO_APPLY   (4)
  34:../proyecto.c **** #define HORIZONTAL (5)
  35:../proyecto.c **** #define VERTICAL   (6)
  36:../proyecto.c **** 
  37:../proyecto.c **** /* Declaración de funciones auxiliares */
  38:../proyecto.c **** 
  39:../proyecto.c **** void lcd_putBmp( uint8 *bmp, uint16 x, uint16 y, uint16 xsize, uint16 ysize );
  40:../proyecto.c **** void lcd_bmp2photo( uint8 *bmp, uint8 *photo );
  41:../proyecto.c **** 
  42:../proyecto.c **** void lcd_putColumn( uint16 xLcd, uint8 *photo, uint16 xPhoto );
  43:../proyecto.c **** void lcd_putRow( uint16 yLcd, uint8 *photo, uint16 yPhoto );    							// Deberá recodificarse en e
  44:../proyecto.c **** void lcd_putPhoto( uint8 *photo );                              							// Deberá recodificarse en e
  45:../proyecto.c **** 
  46:../proyecto.c **** void lcd_shift(uint8 sense, uint32 origen, uint32 destino, uint16 size);                    // Debe
  47:../proyecto.c **** 
  48:../proyecto.c **** /*Declaración de funciones añadidas por mi*/
  49:../proyecto.c **** void lcd_putPixelColumn( uint16 xLcd, uint8 *photo, uint16 xPhoto, uint16 init, uint16 fin);
  50:../proyecto.c **** 
  51:../proyecto.c **** /* Declaración de efectos de transición entre fotos */
  52:../proyecto.c **** 
  53:../proyecto.c **** void efectoNulo( uint8 *photo, uint8 sense );
  54:../proyecto.c **** void efectoEmpuje( uint8 *photo, uint8 sense );                 // Deberá completarse en el proyect
  55:../proyecto.c **** void efectoBarrido( uint8 *photo, uint8 sense );                // Deberá implementarse en el proye
  56:../proyecto.c **** void efectoRevelado( uint8 *photo, uint8 sense );               // Deberá implementarse en el proye
  57:../proyecto.c **** void efectoCobertura( uint8 *photo, uint8 sense );              // Deberá implementarse en el proye
  58:../proyecto.c **** 
  59:../proyecto.c **** // Otros posibles efectos a implementar
  60:../proyecto.c **** 
  61:../proyecto.c **** void efectoDivisionEntrante( uint8 *photo, uint8 sense );		// [Hecho]
  62:../proyecto.c **** void efectoDivisionSaliente( uint8 *photo, uint8 sense );		// [Hecho]
  63:../proyecto.c **** void efectoCuadradoEntrante( uint8 *photo, uint8 sense );		// [Sin terminar]
  64:../proyecto.c **** void efectoCuadradoSaliente( uint8 *photo, uint8 sense );		// [Sin terminar]
  65:../proyecto.c **** void efectoBarras( uint8 *photo, uint8 sense );					// [Hecho]
  66:../proyecto.c **** void efectoPeine( uint8 *photo, uint8 sense );					// [Sin terminar]
  67:../proyecto.c **** void efectoDisolver( uint8 *photo, uint8 sense );
  68:../proyecto.c **** void efectoFlash( uint8 *photo, uint8 sense );					// [Hecho]
  69:../proyecto.c **** void efectoAleatorio( uint8 *photo, uint8 sense );
  70:../proyecto.c **** 
  71:../proyecto.c **** // Efectos del power point
  72:../proyecto.c **** void efectoDesvanecer( uint8 *photo, uint8 sense );				// [Hecho]
  73:../proyecto.c **** 
  74:../proyecto.c **** /* Declaración de tipos */
  75:../proyecto.c **** 
  76:../proyecto.c **** typedef void (*pf_t)( uint8 *, uint8 );    // Tipo puntero a una función efecto con 2 argumentos (f
  77:../proyecto.c **** 
  78:../proyecto.c **** typedef struct                             // Estructura con toda la información (pack) relativa a 
  79:../proyecto.c **** {  
  80:../proyecto.c **** 	uint8 photo[LCD_BUFFER_SIZE];          // Foto
  81:../proyecto.c **** 	pf_t  effect;                          // Efecto de transición a aplicar para visualizarla
  82:../proyecto.c **** 	uint8 sense;                           // Sentido del efecto a aplicar
  83:../proyecto.c **** 	uint8 secs;                            // Segundos que debe estar visualizada
  84:../proyecto.c **** } pack_t;
  85:../proyecto.c **** 
  86:../proyecto.c **** typedef struct                             // Estructura conteniendo las fotos a visualizar, podrá 
  87:../proyecto.c **** {
  88:../proyecto.c **** 	uint8  numPacks;                       // Número de packs que contiene el album
  89:../proyecto.c **** 	pack_t pack[MAX_PHOTOS];               // Array de fotos
  90:../proyecto.c **** } album_t;
  91:../proyecto.c **** 
  92:../proyecto.c **** /* Declaración del buffer de vídeo */
  93:../proyecto.c **** 
  94:../proyecto.c **** extern uint8 lcd_buffer[LCD_BUFFER_SIZE];
  95:../proyecto.c **** 
  96:../proyecto.c **** /*******************************************************************/
  97:../proyecto.c **** 
  98:../proyecto.c **** void main( void ){
 1921              		.loc 1 98 0
 1922              		.cfi_startproc
 1923              		@ Function supports interworking.
 1924              		@ args = 0, pretend = 0, frame = 1536336
 1925              		@ frame_needed = 1, uses_anonymous_args = 0
 1926 0000 0DC0A0E1 		mov	ip, sp
 1927              	.LCFI0:
 1928              		.cfi_def_cfa_register 12
 1929 0004 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 1930 0008 04B04CE2 		sub	fp, ip, #4
 1931              		.cfi_offset 14, -8
 1932              		.cfi_offset 13, -12
 1933              		.cfi_offset 11, -16
 1934              		.cfi_offset 4, -20
 1935              	.LCFI1:
 1936              		.cfi_def_cfa 11, 4
 1937 000c 5DD94DE2 		sub	sp, sp, #1523712
 1938 0010 C5DD4DE2 		sub	sp, sp, #12608
 1939 0014 1CD04DE2 		sub	sp, sp, #28
  99:../proyecto.c **** 	album_t album;
 100:../proyecto.c **** 	uint16 i;
 101:../proyecto.c **** 	uint16 modo;
 102:../proyecto.c **** 	uint16 ticks;
 103:../proyecto.c **** 	uint8 scancode;
 104:../proyecto.c **** 
 105:../proyecto.c **** 	sys_init();
 1940              		.loc 1 105 0
 1941 0018 FEFFFFEB 		bl	sys_init
 106:../proyecto.c **** 	segs_init();
 1942              		.loc 1 106 0
 1943 001c FEFFFFEB 		bl	segs_init
 107:../proyecto.c **** 	timers_init();
 1944              		.loc 1 107 0
 1945 0020 FEFFFFEB 		bl	timers_init
 108:../proyecto.c ****     keypad_init();
 1946              		.loc 1 108 0
 1947 0024 FEFFFFEB 		bl	keypad_init
 109:../proyecto.c **** 	lcd_init();
 1948              		.loc 1 109 0
 1949 0028 FEFFFFEB 		bl	lcd_init
 110:../proyecto.c **** 
 111:../proyecto.c **** 	lcd_clear();
 1950              		.loc 1 111 0
 1951 002c FEFFFFEB 		bl	lcd_clear
 112:../proyecto.c **** 	lcd_on();
 1952              		.loc 1 112 0
 1953 0030 FEFFFFEB 		bl	lcd_on
 113:../proyecto.c **** 
 114:../proyecto.c **** 	// Ejemplo de uso de las miniaturas (de este o distinto tamaño)
 115:../proyecto.c **** 
 116:../proyecto.c **** 	lcd_putBmp( MINIARBOL, 20, 20, 128, 96 );       // ARBOL al 40% editada con Paint de Windows
 1954              		.loc 1 116 0
 1955 0034 6030A0E3 		mov	r3, #96
 1956 0038 00308DE5 		str	r3, [sp, #0]
 1957 003c 14019FE5 		ldr	r0, .L19
 1958 0040 1410A0E3 		mov	r1, #20
 1959 0044 1420A0E3 		mov	r2, #20
 1960 0048 8030A0E3 		mov	r3, #128
 1961 004c FEFFFFEB 		bl	lcd_putBmp
 117:../proyecto.c **** 	lcd_putBmp( MINIPICACHU, 168, 20, 128, 96 );    // PICACHU al 40% editada con Paint de Windows
 1962              		.loc 1 117 0
 1963 0050 6030A0E3 		mov	r3, #96
 1964 0054 00308DE5 		str	r3, [sp, #0]
 1965 0058 FC009FE5 		ldr	r0, .L19+4
 1966 005c A810A0E3 		mov	r1, #168
 1967 0060 1420A0E3 		mov	r2, #20
 1968 0064 8030A0E3 		mov	r3, #128
 1969 0068 FEFFFFEB 		bl	lcd_putBmp
 118:../proyecto.c **** 
 119:../proyecto.c **** 	lcd_puts( 20, 130, BLACK, "Se usaran miniaturas para" );
 1970              		.loc 1 119 0
 1971 006c 1400A0E3 		mov	r0, #20
 1972 0070 8210A0E3 		mov	r1, #130
 1973 0074 0F20A0E3 		mov	r2, #15
 1974 0078 E0309FE5 		ldr	r3, .L19+8
 1975 007c FEFFFFEB 		bl	lcd_puts
 120:../proyecto.c **** 	lcd_puts( 20, 146, BLACK, "configurar la transicion de fotos" );
 1976              		.loc 1 120 0
 1977 0080 1400A0E3 		mov	r0, #20
 1978 0084 9210A0E3 		mov	r1, #146
 1979 0088 0F20A0E3 		mov	r2, #15
 1980 008c D0309FE5 		ldr	r3, .L19+12
 1981 0090 FEFFFFEB 		bl	lcd_puts
 121:../proyecto.c **** 	lcd_puts( 20, 162, BLACK, "Elige el modo de transición: " );
 1982              		.loc 1 121 0
 1983 0094 1400A0E3 		mov	r0, #20
 1984 0098 A210A0E3 		mov	r1, #162
 1985 009c 0F20A0E3 		mov	r2, #15
 1986 00a0 C0309FE5 		ldr	r3, .L19+16
 1987 00a4 FEFFFFEB 		bl	lcd_puts
 122:../proyecto.c **** 	lcd_puts( 20, 178, BLACK, "0-Con pausa, 1- Sin pausa " );
 1988              		.loc 1 122 0
 1989 00a8 1400A0E3 		mov	r0, #20
 1990 00ac B210A0E3 		mov	r1, #178
 1991 00b0 0F20A0E3 		mov	r2, #15
 1992 00b4 B0309FE5 		ldr	r3, .L19+20
 1993 00b8 FEFFFFEB 		bl	lcd_puts
 123:../proyecto.c ****     ticks = 0;
 1994              		.loc 1 123 0
 1995 00bc 0030A0E3 		mov	r3, #0
 1996 00c0 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 124:../proyecto.c **** 
 125:../proyecto.c ****     /* Se me ocurrió al principio hacerlo con el touchscreen, pero la pantalla tiene un rebote
 126:../proyecto.c ****      * y cuesta bastante que vaya bien, haciendolo más ineficiente que usando el keypad
 127:../proyecto.c ****      */
 128:../proyecto.c ****     while( ticks < 1)
 1997              		.loc 1 128 0
 1998 00c4 330000EA 		b	.L2
 1999              	.L17:
 129:../proyecto.c ****     {
 130:../proyecto.c ****     	while (!keypad_pressed());
 2000              		.loc 1 130 0
 2001 00c8 0000A0E1 		mov	r0, r0	@ nop
 2002              	.L3:
 2003              		.loc 1 130 0 is_stmt 0 discriminator 1
 2004 00cc FEFFFFEB 		bl	keypad_pressed
 2005 00d0 0030A0E1 		mov	r3, r0
 2006 00d4 000053E3 		cmp	r3, #0
 2007 00d8 FBFFFF0A 		beq	.L3
 131:../proyecto.c ****         switch( scancode = keypad_getchar() )
 2008              		.loc 1 131 0 is_stmt 1
 2009 00dc FEFFFFEB 		bl	keypad_getchar
 2010 00e0 0030A0E1 		mov	r3, r0
 2011 00e4 1B304BE5 		strb	r3, [fp, #-27]
 132:../proyecto.c ****         {
 133:../proyecto.c ****             default:
 134:../proyecto.c ****             	if (scancode == KEYPAD_KEY0){
 2012              		.loc 1 134 0
 2013 00e8 1B305BE5 		ldrb	r3, [fp, #-27]	@ zero_extendqisi2
 2014 00ec 000053E3 		cmp	r3, #0
 2015 00f0 0A00001A 		bne	.L4
 135:../proyecto.c ****             		lcd_puts( 20, 194, BLACK, "Has seleccionado modo 0" );
 2016              		.loc 1 135 0
 2017 00f4 1400A0E3 		mov	r0, #20
 2018 00f8 C210A0E3 		mov	r1, #194
 2019 00fc 0F20A0E3 		mov	r2, #15
 2020 0100 68309FE5 		ldr	r3, .L19+24
 2021 0104 FEFFFFEB 		bl	lcd_puts
 136:../proyecto.c ****             		modo = 0;
 2022              		.loc 1 136 0
 2023 0108 0030A0E3 		mov	r3, #0
 2024 010c B8314BE1 		strh	r3, [fp, #-24]	@ movhi
 137:../proyecto.c ****             		ticks++;
 2025              		.loc 1 137 0
 2026 0110 BA315BE1 		ldrh	r3, [fp, #-26]	@ movhi
 2027 0114 013083E2 		add	r3, r3, #1
 2028 0118 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 138:../proyecto.c ****             	}
 139:../proyecto.c ****             	else if (scancode == KEYPAD_KEY1){
 140:../proyecto.c ****             		lcd_puts( 20, 194, BLACK, "Has seleccionado modo 1" );
 141:../proyecto.c ****             		modo = 1;
 142:../proyecto.c ****             	    ticks++;
 143:../proyecto.c ****             	}
 144:../proyecto.c ****                 break;
 2029              		.loc 1 144 0
 2030 011c 1D0000EA 		b	.L2
 2031              	.L4:
 139:../proyecto.c ****             	else if (scancode == KEYPAD_KEY1){
 2032              		.loc 1 139 0
 2033 0120 1B305BE5 		ldrb	r3, [fp, #-27]	@ zero_extendqisi2
 2034 0124 010053E3 		cmp	r3, #1
 2035 0128 1900001A 		bne	.L16
 140:../proyecto.c ****             		lcd_puts( 20, 194, BLACK, "Has seleccionado modo 1" );
 2036              		.loc 1 140 0
 2037 012c 1400A0E3 		mov	r0, #20
 2038 0130 C210A0E3 		mov	r1, #194
 2039 0134 0F20A0E3 		mov	r2, #15
 2040 0138 34309FE5 		ldr	r3, .L19+28
 2041 013c FEFFFFEB 		bl	lcd_puts
 141:../proyecto.c ****             		modo = 1;
 2042              		.loc 1 141 0
 2043 0140 0130A0E3 		mov	r3, #1
 2044 0144 B8314BE1 		strh	r3, [fp, #-24]	@ movhi
 142:../proyecto.c ****             	    ticks++;
 2045              		.loc 1 142 0
 2046 0148 BA315BE1 		ldrh	r3, [fp, #-26]	@ movhi
 2047 014c 013083E2 		add	r3, r3, #1
 2048 0150 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 2049              		.loc 1 144 0
 2050 0154 0F0000EA 		b	.L2
 2051              	.L20:
 2052              		.align	2
 2053              	.L19:
 2054 0158 0000280C 		.word	203948032
 2055 015c 0080280C 		.word	203980800
 2056 0160 00000000 		.word	.LC0
 2057 0164 1C000000 		.word	.LC1
 2058 0168 40000000 		.word	.LC2
 2059 016c 60000000 		.word	.LC3
 2060 0170 7C000000 		.word	.LC4
 2061 0174 94000000 		.word	.LC5
 2062 0178 00000000 		.word	efectoEmpuje
 2063 017c 00000000 		.word	efectoBarrido
 2064 0180 0000220C 		.word	203554816
 2065 0184 00000000 		.word	efectoRevelado
 2066 0188 0000210C 		.word	203489280
 2067 018c 00000000 		.word	efectoNulo
 2068 0190 B48EE8FF 		.word	-1536332
 2069              	.L16:
 2070 0194 0000A0E1 		mov	r0, r0	@ nop
 2071              	.L2:
 128:../proyecto.c ****     while( ticks < 1)
 2072              		.loc 1 128 0 discriminator 1
 2073 0198 BA315BE1 		ldrh	r3, [fp, #-26]
 2074 019c 000053E3 		cmp	r3, #0
 2075 01a0 C8FFFF0A 		beq	.L17
 145:../proyecto.c ****         }
 146:../proyecto.c ****     }
 147:../proyecto.c **** 	//sw_delay_s( 10 );
 148:../proyecto.c **** 
 149:../proyecto.c **** 	// Creación del album de fotos
 150:../proyecto.c **** 
 151:../proyecto.c **** 	i = 0;
 2076              		.loc 1 151 0
 2077 01a4 0030A0E3 		mov	r3, #0
 2078 01a8 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 152:../proyecto.c **** 
 153:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 2079              		.loc 1 153 0
 2080 01ac B6015BE1 		ldrh	r0, [fp, #-22]
 2081 01b0 28101FE5 		ldr	r1, .L19+56
 2082 01b4 5D194BE2 		sub	r1, fp, #1523712
 2083 01b8 C51D41E2 		sub	r1, r1, #12608
 2084 01bc 201041E2 		sub	r1, r1, #32
 2085 01c0 0020A0E1 		mov	r2, r0
 2086 01c4 0221A0E1 		mov	r2, r2, asl #2
 2087 01c8 002082E0 		add	r2, r2, r0
 2088 01cc 0232A0E1 		mov	r3, r2, asl #4
 2089 01d0 033062E0 		rsb	r3, r2, r3
 2090 01d4 0333A0E1 		mov	r3, r3, asl #6
 2091 01d8 003083E0 		add	r3, r3, r0
 2092 01dc 8331A0E1 		mov	r3, r3, asl #3
 2093 01e0 033081E0 		add	r3, r1, r3
 2094 01e4 043083E2 		add	r3, r3, #4
 2095 01e8 68001FE5 		ldr	r0, .L19+48
 2096 01ec 0310A0E1 		mov	r1, r3
 2097 01f0 FEFFFFEB 		bl	lcd_bmp2photo
 154:../proyecto.c **** 	album.pack[i].secs = 0;
 2098              		.loc 1 154 0
 2099 01f4 B6115BE1 		ldrh	r1, [fp, #-22]
 2100 01f8 70C01FE5 		ldr	ip, .L19+56
 2101 01fc 960CA0E3 		mov	r0, #38400
 2102 0200 0120A0E1 		mov	r2, r1
 2103 0204 0221A0E1 		mov	r2, r2, asl #2
 2104 0208 012082E0 		add	r2, r2, r1
 2105 020c 0232A0E1 		mov	r3, r2, asl #4
 2106 0210 033062E0 		rsb	r3, r2, r3
 2107 0214 0333A0E1 		mov	r3, r3, asl #6
 2108 0218 013083E0 		add	r3, r3, r1
 2109 021c 8331A0E1 		mov	r3, r3, asl #3
 2110 0220 14104BE2 		sub	r1, fp, #20
 2111 0224 033081E0 		add	r3, r1, r3
 2112 0228 0C3083E0 		add	r3, r3, ip
 2113 022c 003083E0 		add	r3, r3, r0
 2114 0230 0020A0E3 		mov	r2, #0
 2115 0234 0920C3E5 		strb	r2, [r3, #9]
 155:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 2116              		.loc 1 155 0
 2117 0238 B6115BE1 		ldrh	r1, [fp, #-22]
 2118 023c B4201FE5 		ldr	r2, .L19+56
 2119 0240 0430A0E3 		mov	r3, #4
 2120 0244 14004BE2 		sub	r0, fp, #20
 2121 0248 022080E0 		add	r2, r0, r2
 2122 024c 03C082E0 		add	ip, r2, r3
 2123 0250 960CA0E3 		mov	r0, #38400
 2124 0254 0120A0E1 		mov	r2, r1
 2125 0258 0221A0E1 		mov	r2, r2, asl #2
 2126 025c 012082E0 		add	r2, r2, r1
 2127 0260 0232A0E1 		mov	r3, r2, asl #4
 2128 0264 033062E0 		rsb	r3, r2, r3
 2129 0268 0333A0E1 		mov	r3, r3, asl #6
 2130 026c 013083E0 		add	r3, r3, r1
 2131 0270 8331A0E1 		mov	r3, r3, asl #3
 2132 0274 03308CE0 		add	r3, ip, r3
 2133 0278 003083E0 		add	r3, r3, r0
 2134 027c F8201FE5 		ldr	r2, .L19+52
 2135 0280 002083E5 		str	r2, [r3, #0]
 156:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 2136              		.loc 1 156 0
 2137 0284 B6115BE1 		ldrh	r1, [fp, #-22]
 2138 0288 00C11FE5 		ldr	ip, .L19+56
 2139 028c 960CA0E3 		mov	r0, #38400
 2140 0290 0120A0E1 		mov	r2, r1
 2141 0294 0221A0E1 		mov	r2, r2, asl #2
 2142 0298 012082E0 		add	r2, r2, r1
 2143 029c 0232A0E1 		mov	r3, r2, asl #4
 2144 02a0 033062E0 		rsb	r3, r2, r3
 2145 02a4 0333A0E1 		mov	r3, r3, asl #6
 2146 02a8 013083E0 		add	r3, r3, r1
 2147 02ac 8331A0E1 		mov	r3, r3, asl #3
 2148 02b0 14104BE2 		sub	r1, fp, #20
 2149 02b4 033081E0 		add	r3, r1, r3
 2150 02b8 0C3083E0 		add	r3, r3, ip
 2151 02bc 003083E0 		add	r3, r3, r0
 2152 02c0 0420A0E3 		mov	r2, #4
 2153 02c4 0820C3E5 		strb	r2, [r3, #8]
 157:../proyecto.c **** 	i++;
 2154              		.loc 1 157 0
 2155 02c8 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2156 02cc 013083E2 		add	r3, r3, #1
 2157 02d0 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 158:../proyecto.c **** 
 159:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 2158              		.loc 1 159 0
 2159 02d4 B6015BE1 		ldrh	r0, [fp, #-22]
 2160 02d8 50111FE5 		ldr	r1, .L19+56
 2161 02dc 5D194BE2 		sub	r1, fp, #1523712
 2162 02e0 C51D41E2 		sub	r1, r1, #12608
 2163 02e4 201041E2 		sub	r1, r1, #32
 2164 02e8 0020A0E1 		mov	r2, r0
 2165 02ec 0221A0E1 		mov	r2, r2, asl #2
 2166 02f0 002082E0 		add	r2, r2, r0
 2167 02f4 0232A0E1 		mov	r3, r2, asl #4
 2168 02f8 033062E0 		rsb	r3, r2, r3
 2169 02fc 0333A0E1 		mov	r3, r3, asl #6
 2170 0300 003083E0 		add	r3, r3, r0
 2171 0304 8331A0E1 		mov	r3, r3, asl #3
 2172 0308 033081E0 		add	r3, r1, r3
 2173 030c 043083E2 		add	r3, r3, #4
 2174 0310 98011FE5 		ldr	r0, .L19+40
 2175 0314 0310A0E1 		mov	r1, r3
 2176 0318 FEFFFFEB 		bl	lcd_bmp2photo
 160:../proyecto.c **** 	album.pack[i].secs = 3;
 2177              		.loc 1 160 0
 2178 031c B6115BE1 		ldrh	r1, [fp, #-22]
 2179 0320 98C11FE5 		ldr	ip, .L19+56
 2180 0324 960CA0E3 		mov	r0, #38400
 2181 0328 0120A0E1 		mov	r2, r1
 2182 032c 0221A0E1 		mov	r2, r2, asl #2
 2183 0330 012082E0 		add	r2, r2, r1
 2184 0334 0232A0E1 		mov	r3, r2, asl #4
 2185 0338 033062E0 		rsb	r3, r2, r3
 2186 033c 0333A0E1 		mov	r3, r3, asl #6
 2187 0340 013083E0 		add	r3, r3, r1
 2188 0344 8331A0E1 		mov	r3, r3, asl #3
 2189 0348 14204BE2 		sub	r2, fp, #20
 2190 034c 033082E0 		add	r3, r2, r3
 2191 0350 0C3083E0 		add	r3, r3, ip
 2192 0354 003083E0 		add	r3, r3, r0
 2193 0358 0320A0E3 		mov	r2, #3
 2194 035c 0920C3E5 		strb	r2, [r3, #9]
 161:../proyecto.c **** 	album.pack[i].effect = efectoEmpuje;
 2195              		.loc 1 161 0
 2196 0360 B6115BE1 		ldrh	r1, [fp, #-22]
 2197 0364 DC211FE5 		ldr	r2, .L19+56
 2198 0368 0430A0E3 		mov	r3, #4
 2199 036c 14004BE2 		sub	r0, fp, #20
 2200 0370 022080E0 		add	r2, r0, r2
 2201 0374 03C082E0 		add	ip, r2, r3
 2202 0378 960CA0E3 		mov	r0, #38400
 2203 037c 0120A0E1 		mov	r2, r1
 2204 0380 0221A0E1 		mov	r2, r2, asl #2
 2205 0384 012082E0 		add	r2, r2, r1
 2206 0388 0232A0E1 		mov	r3, r2, asl #4
 2207 038c 033062E0 		rsb	r3, r2, r3
 2208 0390 0333A0E1 		mov	r3, r3, asl #6
 2209 0394 013083E0 		add	r3, r3, r1
 2210 0398 8331A0E1 		mov	r3, r3, asl #3
 2211 039c 03308CE0 		add	r3, ip, r3
 2212 03a0 003083E0 		add	r3, r3, r0
 2213 03a4 34221FE5 		ldr	r2, .L19+32
 2214 03a8 002083E5 		str	r2, [r3, #0]
 162:../proyecto.c **** 	album.pack[i].sense = DOWN;
 2215              		.loc 1 162 0
 2216 03ac B6115BE1 		ldrh	r1, [fp, #-22]
 2217 03b0 28C21FE5 		ldr	ip, .L19+56
 2218 03b4 960CA0E3 		mov	r0, #38400
 2219 03b8 0120A0E1 		mov	r2, r1
 2220 03bc 0221A0E1 		mov	r2, r2, asl #2
 2221 03c0 012082E0 		add	r2, r2, r1
 2222 03c4 0232A0E1 		mov	r3, r2, asl #4
 2223 03c8 033062E0 		rsb	r3, r2, r3
 2224 03cc 0333A0E1 		mov	r3, r3, asl #6
 2225 03d0 013083E0 		add	r3, r3, r1
 2226 03d4 8331A0E1 		mov	r3, r3, asl #3
 2227 03d8 14104BE2 		sub	r1, fp, #20
 2228 03dc 033081E0 		add	r3, r1, r3
 2229 03e0 0C3083E0 		add	r3, r3, ip
 2230 03e4 003083E0 		add	r3, r3, r0
 2231 03e8 0320A0E3 		mov	r2, #3
 2232 03ec 0820C3E5 		strb	r2, [r3, #8]
 163:../proyecto.c **** 	i++;
 2233              		.loc 1 163 0
 2234 03f0 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2235 03f4 013083E2 		add	r3, r3, #1
 2236 03f8 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 164:../proyecto.c **** 
 165:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 2237              		.loc 1 165 0
 2238 03fc B6015BE1 		ldrh	r0, [fp, #-22]
 2239 0400 78121FE5 		ldr	r1, .L19+56
 2240 0404 5D194BE2 		sub	r1, fp, #1523712
 2241 0408 C51D41E2 		sub	r1, r1, #12608
 2242 040c 201041E2 		sub	r1, r1, #32
 2243 0410 0020A0E1 		mov	r2, r0
 2244 0414 0221A0E1 		mov	r2, r2, asl #2
 2245 0418 002082E0 		add	r2, r2, r0
 2246 041c 0232A0E1 		mov	r3, r2, asl #4
 2247 0420 033062E0 		rsb	r3, r2, r3
 2248 0424 0333A0E1 		mov	r3, r3, asl #6
 2249 0428 003083E0 		add	r3, r3, r0
 2250 042c 8331A0E1 		mov	r3, r3, asl #3
 2251 0430 033081E0 		add	r3, r1, r3
 2252 0434 043083E2 		add	r3, r3, #4
 2253 0438 B8021FE5 		ldr	r0, .L19+48
 2254 043c 0310A0E1 		mov	r1, r3
 2255 0440 FEFFFFEB 		bl	lcd_bmp2photo
 166:../proyecto.c **** 	album.pack[i].secs = 0;
 2256              		.loc 1 166 0
 2257 0444 B6115BE1 		ldrh	r1, [fp, #-22]
 2258 0448 C0C21FE5 		ldr	ip, .L19+56
 2259 044c 960CA0E3 		mov	r0, #38400
 2260 0450 0120A0E1 		mov	r2, r1
 2261 0454 0221A0E1 		mov	r2, r2, asl #2
 2262 0458 012082E0 		add	r2, r2, r1
 2263 045c 0232A0E1 		mov	r3, r2, asl #4
 2264 0460 033062E0 		rsb	r3, r2, r3
 2265 0464 0333A0E1 		mov	r3, r3, asl #6
 2266 0468 013083E0 		add	r3, r3, r1
 2267 046c 8331A0E1 		mov	r3, r3, asl #3
 2268 0470 14204BE2 		sub	r2, fp, #20
 2269 0474 033082E0 		add	r3, r2, r3
 2270 0478 0C3083E0 		add	r3, r3, ip
 2271 047c 003083E0 		add	r3, r3, r0
 2272 0480 0020A0E3 		mov	r2, #0
 2273 0484 0920C3E5 		strb	r2, [r3, #9]
 167:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 2274              		.loc 1 167 0
 2275 0488 B6115BE1 		ldrh	r1, [fp, #-22]
 2276 048c 04231FE5 		ldr	r2, .L19+56
 2277 0490 0430A0E3 		mov	r3, #4
 2278 0494 14004BE2 		sub	r0, fp, #20
 2279 0498 022080E0 		add	r2, r0, r2
 2280 049c 03C082E0 		add	ip, r2, r3
 2281 04a0 960CA0E3 		mov	r0, #38400
 2282 04a4 0120A0E1 		mov	r2, r1
 2283 04a8 0221A0E1 		mov	r2, r2, asl #2
 2284 04ac 012082E0 		add	r2, r2, r1
 2285 04b0 0232A0E1 		mov	r3, r2, asl #4
 2286 04b4 033062E0 		rsb	r3, r2, r3
 2287 04b8 0333A0E1 		mov	r3, r3, asl #6
 2288 04bc 013083E0 		add	r3, r3, r1
 2289 04c0 8331A0E1 		mov	r3, r3, asl #3
 2290 04c4 03308CE0 		add	r3, ip, r3
 2291 04c8 003083E0 		add	r3, r3, r0
 2292 04cc 48231FE5 		ldr	r2, .L19+52
 2293 04d0 002083E5 		str	r2, [r3, #0]
 168:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 2294              		.loc 1 168 0
 2295 04d4 B6115BE1 		ldrh	r1, [fp, #-22]
 2296 04d8 50C31FE5 		ldr	ip, .L19+56
 2297 04dc 960CA0E3 		mov	r0, #38400
 2298 04e0 0120A0E1 		mov	r2, r1
 2299 04e4 0221A0E1 		mov	r2, r2, asl #2
 2300 04e8 012082E0 		add	r2, r2, r1
 2301 04ec 0232A0E1 		mov	r3, r2, asl #4
 2302 04f0 033062E0 		rsb	r3, r2, r3
 2303 04f4 0333A0E1 		mov	r3, r3, asl #6
 2304 04f8 013083E0 		add	r3, r3, r1
 2305 04fc 8331A0E1 		mov	r3, r3, asl #3
 2306 0500 14104BE2 		sub	r1, fp, #20
 2307 0504 033081E0 		add	r3, r1, r3
 2308 0508 0C3083E0 		add	r3, r3, ip
 2309 050c 003083E0 		add	r3, r3, r0
 2310 0510 0420A0E3 		mov	r2, #4
 2311 0514 0820C3E5 		strb	r2, [r3, #8]
 169:../proyecto.c **** 	i++;
 2312              		.loc 1 169 0
 2313 0518 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2314 051c 013083E2 		add	r3, r3, #1
 2315 0520 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 170:../proyecto.c **** 
 171:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 2316              		.loc 1 171 0
 2317 0524 B6015BE1 		ldrh	r0, [fp, #-22]
 2318 0528 A0131FE5 		ldr	r1, .L19+56
 2319 052c 5D194BE2 		sub	r1, fp, #1523712
 2320 0530 C51D41E2 		sub	r1, r1, #12608
 2321 0534 201041E2 		sub	r1, r1, #32
 2322 0538 0020A0E1 		mov	r2, r0
 2323 053c 0221A0E1 		mov	r2, r2, asl #2
 2324 0540 002082E0 		add	r2, r2, r0
 2325 0544 0232A0E1 		mov	r3, r2, asl #4
 2326 0548 033062E0 		rsb	r3, r2, r3
 2327 054c 0333A0E1 		mov	r3, r3, asl #6
 2328 0550 003083E0 		add	r3, r3, r0
 2329 0554 8331A0E1 		mov	r3, r3, asl #3
 2330 0558 033081E0 		add	r3, r1, r3
 2331 055c 043083E2 		add	r3, r3, #4
 2332 0560 E8031FE5 		ldr	r0, .L19+40
 2333 0564 0310A0E1 		mov	r1, r3
 2334 0568 FEFFFFEB 		bl	lcd_bmp2photo
 172:../proyecto.c **** 	album.pack[i].secs = 3;
 2335              		.loc 1 172 0
 2336 056c B6115BE1 		ldrh	r1, [fp, #-22]
 2337 0570 E8C31FE5 		ldr	ip, .L19+56
 2338 0574 960CA0E3 		mov	r0, #38400
 2339 0578 0120A0E1 		mov	r2, r1
 2340 057c 0221A0E1 		mov	r2, r2, asl #2
 2341 0580 012082E0 		add	r2, r2, r1
 2342 0584 0232A0E1 		mov	r3, r2, asl #4
 2343 0588 033062E0 		rsb	r3, r2, r3
 2344 058c 0333A0E1 		mov	r3, r3, asl #6
 2345 0590 013083E0 		add	r3, r3, r1
 2346 0594 8331A0E1 		mov	r3, r3, asl #3
 2347 0598 14204BE2 		sub	r2, fp, #20
 2348 059c 033082E0 		add	r3, r2, r3
 2349 05a0 0C3083E0 		add	r3, r3, ip
 2350 05a4 003083E0 		add	r3, r3, r0
 2351 05a8 0320A0E3 		mov	r2, #3
 2352 05ac 0920C3E5 		strb	r2, [r3, #9]
 173:../proyecto.c **** 	album.pack[i].effect = efectoEmpuje;
 2353              		.loc 1 173 0
 2354 05b0 B6115BE1 		ldrh	r1, [fp, #-22]
 2355 05b4 2C241FE5 		ldr	r2, .L19+56
 2356 05b8 0430A0E3 		mov	r3, #4
 2357 05bc 14004BE2 		sub	r0, fp, #20
 2358 05c0 022080E0 		add	r2, r0, r2
 2359 05c4 03C082E0 		add	ip, r2, r3
 2360 05c8 960CA0E3 		mov	r0, #38400
 2361 05cc 0120A0E1 		mov	r2, r1
 2362 05d0 0221A0E1 		mov	r2, r2, asl #2
 2363 05d4 012082E0 		add	r2, r2, r1
 2364 05d8 0232A0E1 		mov	r3, r2, asl #4
 2365 05dc 033062E0 		rsb	r3, r2, r3
 2366 05e0 0333A0E1 		mov	r3, r3, asl #6
 2367 05e4 013083E0 		add	r3, r3, r1
 2368 05e8 8331A0E1 		mov	r3, r3, asl #3
 2369 05ec 03308CE0 		add	r3, ip, r3
 2370 05f0 003083E0 		add	r3, r3, r0
 2371 05f4 84241FE5 		ldr	r2, .L19+32
 2372 05f8 002083E5 		str	r2, [r3, #0]
 174:../proyecto.c **** 	album.pack[i].sense = LEFT;
 2373              		.loc 1 174 0
 2374 05fc B6115BE1 		ldrh	r1, [fp, #-22]
 2375 0600 78C41FE5 		ldr	ip, .L19+56
 2376 0604 960CA0E3 		mov	r0, #38400
 2377 0608 0120A0E1 		mov	r2, r1
 2378 060c 0221A0E1 		mov	r2, r2, asl #2
 2379 0610 012082E0 		add	r2, r2, r1
 2380 0614 0232A0E1 		mov	r3, r2, asl #4
 2381 0618 033062E0 		rsb	r3, r2, r3
 2382 061c 0333A0E1 		mov	r3, r3, asl #6
 2383 0620 013083E0 		add	r3, r3, r1
 2384 0624 8331A0E1 		mov	r3, r3, asl #3
 2385 0628 14104BE2 		sub	r1, fp, #20
 2386 062c 033081E0 		add	r3, r1, r3
 2387 0630 0C3083E0 		add	r3, r3, ip
 2388 0634 003083E0 		add	r3, r3, r0
 2389 0638 0020A0E3 		mov	r2, #0
 2390 063c 0820C3E5 		strb	r2, [r3, #8]
 175:../proyecto.c **** 	i++;
 2391              		.loc 1 175 0
 2392 0640 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2393 0644 013083E2 		add	r3, r3, #1
 2394 0648 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 176:../proyecto.c **** 
 177:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 2395              		.loc 1 177 0
 2396 064c B6015BE1 		ldrh	r0, [fp, #-22]
 2397 0650 C8141FE5 		ldr	r1, .L19+56
 2398 0654 5D194BE2 		sub	r1, fp, #1523712
 2399 0658 C51D41E2 		sub	r1, r1, #12608
 2400 065c 201041E2 		sub	r1, r1, #32
 2401 0660 0020A0E1 		mov	r2, r0
 2402 0664 0221A0E1 		mov	r2, r2, asl #2
 2403 0668 002082E0 		add	r2, r2, r0
 2404 066c 0232A0E1 		mov	r3, r2, asl #4
 2405 0670 033062E0 		rsb	r3, r2, r3
 2406 0674 0333A0E1 		mov	r3, r3, asl #6
 2407 0678 003083E0 		add	r3, r3, r0
 2408 067c 8331A0E1 		mov	r3, r3, asl #3
 2409 0680 033081E0 		add	r3, r1, r3
 2410 0684 043083E2 		add	r3, r3, #4
 2411 0688 08051FE5 		ldr	r0, .L19+48
 2412 068c 0310A0E1 		mov	r1, r3
 2413 0690 FEFFFFEB 		bl	lcd_bmp2photo
 178:../proyecto.c **** 	album.pack[i].secs = 0;
 2414              		.loc 1 178 0
 2415 0694 B6115BE1 		ldrh	r1, [fp, #-22]
 2416 0698 10C51FE5 		ldr	ip, .L19+56
 2417 069c 960CA0E3 		mov	r0, #38400
 2418 06a0 0120A0E1 		mov	r2, r1
 2419 06a4 0221A0E1 		mov	r2, r2, asl #2
 2420 06a8 012082E0 		add	r2, r2, r1
 2421 06ac 0232A0E1 		mov	r3, r2, asl #4
 2422 06b0 033062E0 		rsb	r3, r2, r3
 2423 06b4 0333A0E1 		mov	r3, r3, asl #6
 2424 06b8 013083E0 		add	r3, r3, r1
 2425 06bc 8331A0E1 		mov	r3, r3, asl #3
 2426 06c0 14204BE2 		sub	r2, fp, #20
 2427 06c4 033082E0 		add	r3, r2, r3
 2428 06c8 0C3083E0 		add	r3, r3, ip
 2429 06cc 003083E0 		add	r3, r3, r0
 2430 06d0 0020A0E3 		mov	r2, #0
 2431 06d4 0920C3E5 		strb	r2, [r3, #9]
 179:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 2432              		.loc 1 179 0
 2433 06d8 B6115BE1 		ldrh	r1, [fp, #-22]
 2434 06dc 54251FE5 		ldr	r2, .L19+56
 2435 06e0 0430A0E3 		mov	r3, #4
 2436 06e4 14004BE2 		sub	r0, fp, #20
 2437 06e8 022080E0 		add	r2, r0, r2
 2438 06ec 03C082E0 		add	ip, r2, r3
 2439 06f0 960CA0E3 		mov	r0, #38400
 2440 06f4 0120A0E1 		mov	r2, r1
 2441 06f8 0221A0E1 		mov	r2, r2, asl #2
 2442 06fc 012082E0 		add	r2, r2, r1
 2443 0700 0232A0E1 		mov	r3, r2, asl #4
 2444 0704 033062E0 		rsb	r3, r2, r3
 2445 0708 0333A0E1 		mov	r3, r3, asl #6
 2446 070c 013083E0 		add	r3, r3, r1
 2447 0710 8331A0E1 		mov	r3, r3, asl #3
 2448 0714 03308CE0 		add	r3, ip, r3
 2449 0718 003083E0 		add	r3, r3, r0
 2450 071c 98251FE5 		ldr	r2, .L19+52
 2451 0720 002083E5 		str	r2, [r3, #0]
 180:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 2452              		.loc 1 180 0
 2453 0724 B6115BE1 		ldrh	r1, [fp, #-22]
 2454 0728 A0C51FE5 		ldr	ip, .L19+56
 2455 072c 960CA0E3 		mov	r0, #38400
 2456 0730 0120A0E1 		mov	r2, r1
 2457 0734 0221A0E1 		mov	r2, r2, asl #2
 2458 0738 012082E0 		add	r2, r2, r1
 2459 073c 0232A0E1 		mov	r3, r2, asl #4
 2460 0740 033062E0 		rsb	r3, r2, r3
 2461 0744 0333A0E1 		mov	r3, r3, asl #6
 2462 0748 013083E0 		add	r3, r3, r1
 2463 074c 8331A0E1 		mov	r3, r3, asl #3
 2464 0750 14104BE2 		sub	r1, fp, #20
 2465 0754 033081E0 		add	r3, r1, r3
 2466 0758 0C3083E0 		add	r3, r3, ip
 2467 075c 003083E0 		add	r3, r3, r0
 2468 0760 0420A0E3 		mov	r2, #4
 2469 0764 0820C3E5 		strb	r2, [r3, #8]
 181:../proyecto.c **** 	i++;
 2470              		.loc 1 181 0
 2471 0768 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2472 076c 013083E2 		add	r3, r3, #1
 2473 0770 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 182:../proyecto.c **** 
 183:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 2474              		.loc 1 183 0
 2475 0774 B6015BE1 		ldrh	r0, [fp, #-22]
 2476 0778 F0151FE5 		ldr	r1, .L19+56
 2477 077c 5D194BE2 		sub	r1, fp, #1523712
 2478 0780 C51D41E2 		sub	r1, r1, #12608
 2479 0784 201041E2 		sub	r1, r1, #32
 2480 0788 0020A0E1 		mov	r2, r0
 2481 078c 0221A0E1 		mov	r2, r2, asl #2
 2482 0790 002082E0 		add	r2, r2, r0
 2483 0794 0232A0E1 		mov	r3, r2, asl #4
 2484 0798 033062E0 		rsb	r3, r2, r3
 2485 079c 0333A0E1 		mov	r3, r3, asl #6
 2486 07a0 003083E0 		add	r3, r3, r0
 2487 07a4 8331A0E1 		mov	r3, r3, asl #3
 2488 07a8 033081E0 		add	r3, r1, r3
 2489 07ac 043083E2 		add	r3, r3, #4
 2490 07b0 38061FE5 		ldr	r0, .L19+40
 2491 07b4 0310A0E1 		mov	r1, r3
 2492 07b8 FEFFFFEB 		bl	lcd_bmp2photo
 184:../proyecto.c **** 	album.pack[i].secs = 3;
 2493              		.loc 1 184 0
 2494 07bc B6115BE1 		ldrh	r1, [fp, #-22]
 2495 07c0 38C61FE5 		ldr	ip, .L19+56
 2496 07c4 960CA0E3 		mov	r0, #38400
 2497 07c8 0120A0E1 		mov	r2, r1
 2498 07cc 0221A0E1 		mov	r2, r2, asl #2
 2499 07d0 012082E0 		add	r2, r2, r1
 2500 07d4 0232A0E1 		mov	r3, r2, asl #4
 2501 07d8 033062E0 		rsb	r3, r2, r3
 2502 07dc 0333A0E1 		mov	r3, r3, asl #6
 2503 07e0 013083E0 		add	r3, r3, r1
 2504 07e4 8331A0E1 		mov	r3, r3, asl #3
 2505 07e8 14204BE2 		sub	r2, fp, #20
 2506 07ec 033082E0 		add	r3, r2, r3
 2507 07f0 0C3083E0 		add	r3, r3, ip
 2508 07f4 003083E0 		add	r3, r3, r0
 2509 07f8 0320A0E3 		mov	r2, #3
 2510 07fc 0920C3E5 		strb	r2, [r3, #9]
 185:../proyecto.c **** 	album.pack[i].effect = efectoBarrido;
 2511              		.loc 1 185 0
 2512 0800 B6115BE1 		ldrh	r1, [fp, #-22]
 2513 0804 7C261FE5 		ldr	r2, .L19+56
 2514 0808 0430A0E3 		mov	r3, #4
 2515 080c 14004BE2 		sub	r0, fp, #20
 2516 0810 022080E0 		add	r2, r0, r2
 2517 0814 03C082E0 		add	ip, r2, r3
 2518 0818 960CA0E3 		mov	r0, #38400
 2519 081c 0120A0E1 		mov	r2, r1
 2520 0820 0221A0E1 		mov	r2, r2, asl #2
 2521 0824 012082E0 		add	r2, r2, r1
 2522 0828 0232A0E1 		mov	r3, r2, asl #4
 2523 082c 033062E0 		rsb	r3, r2, r3
 2524 0830 0333A0E1 		mov	r3, r3, asl #6
 2525 0834 013083E0 		add	r3, r3, r1
 2526 0838 8331A0E1 		mov	r3, r3, asl #3
 2527 083c 03308CE0 		add	r3, ip, r3
 2528 0840 003083E0 		add	r3, r3, r0
 2529 0844 D0261FE5 		ldr	r2, .L19+36
 2530 0848 002083E5 		str	r2, [r3, #0]
 186:../proyecto.c **** 	album.pack[i].sense = UP;
 2531              		.loc 1 186 0
 2532 084c B6115BE1 		ldrh	r1, [fp, #-22]
 2533 0850 C8C61FE5 		ldr	ip, .L19+56
 2534 0854 960CA0E3 		mov	r0, #38400
 2535 0858 0120A0E1 		mov	r2, r1
 2536 085c 0221A0E1 		mov	r2, r2, asl #2
 2537 0860 012082E0 		add	r2, r2, r1
 2538 0864 0232A0E1 		mov	r3, r2, asl #4
 2539 0868 033062E0 		rsb	r3, r2, r3
 2540 086c 0333A0E1 		mov	r3, r3, asl #6
 2541 0870 013083E0 		add	r3, r3, r1
 2542 0874 8331A0E1 		mov	r3, r3, asl #3
 2543 0878 14104BE2 		sub	r1, fp, #20
 2544 087c 033081E0 		add	r3, r1, r3
 2545 0880 0C3083E0 		add	r3, r3, ip
 2546 0884 003083E0 		add	r3, r3, r0
 2547 0888 0220A0E3 		mov	r2, #2
 2548 088c 0820C3E5 		strb	r2, [r3, #8]
 187:../proyecto.c **** 	i++;
 2549              		.loc 1 187 0
 2550 0890 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2551 0894 013083E2 		add	r3, r3, #1
 2552 0898 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 188:../proyecto.c **** 
 189:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 2553              		.loc 1 189 0
 2554 089c B6015BE1 		ldrh	r0, [fp, #-22]
 2555 08a0 18171FE5 		ldr	r1, .L19+56
 2556 08a4 5D194BE2 		sub	r1, fp, #1523712
 2557 08a8 C51D41E2 		sub	r1, r1, #12608
 2558 08ac 201041E2 		sub	r1, r1, #32
 2559 08b0 0020A0E1 		mov	r2, r0
 2560 08b4 0221A0E1 		mov	r2, r2, asl #2
 2561 08b8 002082E0 		add	r2, r2, r0
 2562 08bc 0232A0E1 		mov	r3, r2, asl #4
 2563 08c0 033062E0 		rsb	r3, r2, r3
 2564 08c4 0333A0E1 		mov	r3, r3, asl #6
 2565 08c8 003083E0 		add	r3, r3, r0
 2566 08cc 8331A0E1 		mov	r3, r3, asl #3
 2567 08d0 033081E0 		add	r3, r1, r3
 2568 08d4 043083E2 		add	r3, r3, #4
 2569 08d8 58071FE5 		ldr	r0, .L19+48
 2570 08dc 0310A0E1 		mov	r1, r3
 2571 08e0 FEFFFFEB 		bl	lcd_bmp2photo
 190:../proyecto.c **** 	album.pack[i].secs = 0;
 2572              		.loc 1 190 0
 2573 08e4 B6115BE1 		ldrh	r1, [fp, #-22]
 2574 08e8 60C71FE5 		ldr	ip, .L19+56
 2575 08ec 960CA0E3 		mov	r0, #38400
 2576 08f0 0120A0E1 		mov	r2, r1
 2577 08f4 0221A0E1 		mov	r2, r2, asl #2
 2578 08f8 012082E0 		add	r2, r2, r1
 2579 08fc 0232A0E1 		mov	r3, r2, asl #4
 2580 0900 033062E0 		rsb	r3, r2, r3
 2581 0904 0333A0E1 		mov	r3, r3, asl #6
 2582 0908 013083E0 		add	r3, r3, r1
 2583 090c 8331A0E1 		mov	r3, r3, asl #3
 2584 0910 14204BE2 		sub	r2, fp, #20
 2585 0914 033082E0 		add	r3, r2, r3
 2586 0918 0C3083E0 		add	r3, r3, ip
 2587 091c 003083E0 		add	r3, r3, r0
 2588 0920 0020A0E3 		mov	r2, #0
 2589 0924 0920C3E5 		strb	r2, [r3, #9]
 191:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 2590              		.loc 1 191 0
 2591 0928 B6115BE1 		ldrh	r1, [fp, #-22]
 2592 092c A4271FE5 		ldr	r2, .L19+56
 2593 0930 0430A0E3 		mov	r3, #4
 2594 0934 14004BE2 		sub	r0, fp, #20
 2595 0938 022080E0 		add	r2, r0, r2
 2596 093c 03C082E0 		add	ip, r2, r3
 2597 0940 960CA0E3 		mov	r0, #38400
 2598 0944 0120A0E1 		mov	r2, r1
 2599 0948 0221A0E1 		mov	r2, r2, asl #2
 2600 094c 012082E0 		add	r2, r2, r1
 2601 0950 0232A0E1 		mov	r3, r2, asl #4
 2602 0954 033062E0 		rsb	r3, r2, r3
 2603 0958 0333A0E1 		mov	r3, r3, asl #6
 2604 095c 013083E0 		add	r3, r3, r1
 2605 0960 8331A0E1 		mov	r3, r3, asl #3
 2606 0964 03308CE0 		add	r3, ip, r3
 2607 0968 003083E0 		add	r3, r3, r0
 2608 096c E8271FE5 		ldr	r2, .L19+52
 2609 0970 002083E5 		str	r2, [r3, #0]
 192:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 2610              		.loc 1 192 0
 2611 0974 B6115BE1 		ldrh	r1, [fp, #-22]
 2612 0978 F0C71FE5 		ldr	ip, .L19+56
 2613 097c 960CA0E3 		mov	r0, #38400
 2614 0980 0120A0E1 		mov	r2, r1
 2615 0984 0221A0E1 		mov	r2, r2, asl #2
 2616 0988 012082E0 		add	r2, r2, r1
 2617 098c 0232A0E1 		mov	r3, r2, asl #4
 2618 0990 033062E0 		rsb	r3, r2, r3
 2619 0994 0333A0E1 		mov	r3, r3, asl #6
 2620 0998 013083E0 		add	r3, r3, r1
 2621 099c 8331A0E1 		mov	r3, r3, asl #3
 2622 09a0 14104BE2 		sub	r1, fp, #20
 2623 09a4 033081E0 		add	r3, r1, r3
 2624 09a8 0C3083E0 		add	r3, r3, ip
 2625 09ac 003083E0 		add	r3, r3, r0
 2626 09b0 0420A0E3 		mov	r2, #4
 2627 09b4 0820C3E5 		strb	r2, [r3, #8]
 193:../proyecto.c **** 	i++;
 2628              		.loc 1 193 0
 2629 09b8 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2630 09bc 013083E2 		add	r3, r3, #1
 2631 09c0 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 194:../proyecto.c **** 
 195:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 2632              		.loc 1 195 0
 2633 09c4 B6015BE1 		ldrh	r0, [fp, #-22]
 2634 09c8 40181FE5 		ldr	r1, .L19+56
 2635 09cc 5D194BE2 		sub	r1, fp, #1523712
 2636 09d0 C51D41E2 		sub	r1, r1, #12608
 2637 09d4 201041E2 		sub	r1, r1, #32
 2638 09d8 0020A0E1 		mov	r2, r0
 2639 09dc 0221A0E1 		mov	r2, r2, asl #2
 2640 09e0 002082E0 		add	r2, r2, r0
 2641 09e4 0232A0E1 		mov	r3, r2, asl #4
 2642 09e8 033062E0 		rsb	r3, r2, r3
 2643 09ec 0333A0E1 		mov	r3, r3, asl #6
 2644 09f0 003083E0 		add	r3, r3, r0
 2645 09f4 8331A0E1 		mov	r3, r3, asl #3
 2646 09f8 033081E0 		add	r3, r1, r3
 2647 09fc 043083E2 		add	r3, r3, #4
 2648 0a00 88081FE5 		ldr	r0, .L19+40
 2649 0a04 0310A0E1 		mov	r1, r3
 2650 0a08 FEFFFFEB 		bl	lcd_bmp2photo
 196:../proyecto.c **** 	album.pack[i].secs = 3;
 2651              		.loc 1 196 0
 2652 0a0c B6115BE1 		ldrh	r1, [fp, #-22]
 2653 0a10 88C81FE5 		ldr	ip, .L19+56
 2654 0a14 960CA0E3 		mov	r0, #38400
 2655 0a18 0120A0E1 		mov	r2, r1
 2656 0a1c 0221A0E1 		mov	r2, r2, asl #2
 2657 0a20 012082E0 		add	r2, r2, r1
 2658 0a24 0232A0E1 		mov	r3, r2, asl #4
 2659 0a28 033062E0 		rsb	r3, r2, r3
 2660 0a2c 0333A0E1 		mov	r3, r3, asl #6
 2661 0a30 013083E0 		add	r3, r3, r1
 2662 0a34 8331A0E1 		mov	r3, r3, asl #3
 2663 0a38 14204BE2 		sub	r2, fp, #20
 2664 0a3c 033082E0 		add	r3, r2, r3
 2665 0a40 0C3083E0 		add	r3, r3, ip
 2666 0a44 003083E0 		add	r3, r3, r0
 2667 0a48 0320A0E3 		mov	r2, #3
 2668 0a4c 0920C3E5 		strb	r2, [r3, #9]
 197:../proyecto.c **** 	album.pack[i].effect = efectoBarrido;
 2669              		.loc 1 197 0
 2670 0a50 B6115BE1 		ldrh	r1, [fp, #-22]
 2671 0a54 CC281FE5 		ldr	r2, .L19+56
 2672 0a58 0430A0E3 		mov	r3, #4
 2673 0a5c 14004BE2 		sub	r0, fp, #20
 2674 0a60 022080E0 		add	r2, r0, r2
 2675 0a64 03C082E0 		add	ip, r2, r3
 2676 0a68 960CA0E3 		mov	r0, #38400
 2677 0a6c 0120A0E1 		mov	r2, r1
 2678 0a70 0221A0E1 		mov	r2, r2, asl #2
 2679 0a74 012082E0 		add	r2, r2, r1
 2680 0a78 0232A0E1 		mov	r3, r2, asl #4
 2681 0a7c 033062E0 		rsb	r3, r2, r3
 2682 0a80 0333A0E1 		mov	r3, r3, asl #6
 2683 0a84 013083E0 		add	r3, r3, r1
 2684 0a88 8331A0E1 		mov	r3, r3, asl #3
 2685 0a8c 03308CE0 		add	r3, ip, r3
 2686 0a90 003083E0 		add	r3, r3, r0
 2687 0a94 20291FE5 		ldr	r2, .L19+36
 2688 0a98 002083E5 		str	r2, [r3, #0]
 198:../proyecto.c **** 	album.pack[i].sense = RIGHT;
 2689              		.loc 1 198 0
 2690 0a9c B6115BE1 		ldrh	r1, [fp, #-22]
 2691 0aa0 18C91FE5 		ldr	ip, .L19+56
 2692 0aa4 960CA0E3 		mov	r0, #38400
 2693 0aa8 0120A0E1 		mov	r2, r1
 2694 0aac 0221A0E1 		mov	r2, r2, asl #2
 2695 0ab0 012082E0 		add	r2, r2, r1
 2696 0ab4 0232A0E1 		mov	r3, r2, asl #4
 2697 0ab8 033062E0 		rsb	r3, r2, r3
 2698 0abc 0333A0E1 		mov	r3, r3, asl #6
 2699 0ac0 013083E0 		add	r3, r3, r1
 2700 0ac4 8331A0E1 		mov	r3, r3, asl #3
 2701 0ac8 14104BE2 		sub	r1, fp, #20
 2702 0acc 033081E0 		add	r3, r1, r3
 2703 0ad0 0C3083E0 		add	r3, r3, ip
 2704 0ad4 003083E0 		add	r3, r3, r0
 2705 0ad8 0120A0E3 		mov	r2, #1
 2706 0adc 0820C3E5 		strb	r2, [r3, #8]
 199:../proyecto.c **** 	i++;
 2707              		.loc 1 199 0
 2708 0ae0 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2709 0ae4 013083E2 		add	r3, r3, #1
 2710 0ae8 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 200:../proyecto.c **** 
 201:../proyecto.c **** 
 202:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 2711              		.loc 1 202 0
 2712 0aec B6015BE1 		ldrh	r0, [fp, #-22]
 2713 0af0 68191FE5 		ldr	r1, .L19+56
 2714 0af4 5D194BE2 		sub	r1, fp, #1523712
 2715 0af8 C51D41E2 		sub	r1, r1, #12608
 2716 0afc 201041E2 		sub	r1, r1, #32
 2717 0b00 0020A0E1 		mov	r2, r0
 2718 0b04 0221A0E1 		mov	r2, r2, asl #2
 2719 0b08 002082E0 		add	r2, r2, r0
 2720 0b0c 0232A0E1 		mov	r3, r2, asl #4
 2721 0b10 033062E0 		rsb	r3, r2, r3
 2722 0b14 0333A0E1 		mov	r3, r3, asl #6
 2723 0b18 003083E0 		add	r3, r3, r0
 2724 0b1c 8331A0E1 		mov	r3, r3, asl #3
 2725 0b20 033081E0 		add	r3, r1, r3
 2726 0b24 043083E2 		add	r3, r3, #4
 2727 0b28 A8091FE5 		ldr	r0, .L19+48
 2728 0b2c 0310A0E1 		mov	r1, r3
 2729 0b30 FEFFFFEB 		bl	lcd_bmp2photo
 203:../proyecto.c **** 	album.pack[i].secs = 0;
 2730              		.loc 1 203 0
 2731 0b34 B6115BE1 		ldrh	r1, [fp, #-22]
 2732 0b38 B0C91FE5 		ldr	ip, .L19+56
 2733 0b3c 960CA0E3 		mov	r0, #38400
 2734 0b40 0120A0E1 		mov	r2, r1
 2735 0b44 0221A0E1 		mov	r2, r2, asl #2
 2736 0b48 012082E0 		add	r2, r2, r1
 2737 0b4c 0232A0E1 		mov	r3, r2, asl #4
 2738 0b50 033062E0 		rsb	r3, r2, r3
 2739 0b54 0333A0E1 		mov	r3, r3, asl #6
 2740 0b58 013083E0 		add	r3, r3, r1
 2741 0b5c 8331A0E1 		mov	r3, r3, asl #3
 2742 0b60 14204BE2 		sub	r2, fp, #20
 2743 0b64 033082E0 		add	r3, r2, r3
 2744 0b68 0C3083E0 		add	r3, r3, ip
 2745 0b6c 003083E0 		add	r3, r3, r0
 2746 0b70 0020A0E3 		mov	r2, #0
 2747 0b74 0920C3E5 		strb	r2, [r3, #9]
 204:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 2748              		.loc 1 204 0
 2749 0b78 B6115BE1 		ldrh	r1, [fp, #-22]
 2750 0b7c F4291FE5 		ldr	r2, .L19+56
 2751 0b80 0430A0E3 		mov	r3, #4
 2752 0b84 14004BE2 		sub	r0, fp, #20
 2753 0b88 022080E0 		add	r2, r0, r2
 2754 0b8c 03C082E0 		add	ip, r2, r3
 2755 0b90 960CA0E3 		mov	r0, #38400
 2756 0b94 0120A0E1 		mov	r2, r1
 2757 0b98 0221A0E1 		mov	r2, r2, asl #2
 2758 0b9c 012082E0 		add	r2, r2, r1
 2759 0ba0 0232A0E1 		mov	r3, r2, asl #4
 2760 0ba4 033062E0 		rsb	r3, r2, r3
 2761 0ba8 0333A0E1 		mov	r3, r3, asl #6
 2762 0bac 013083E0 		add	r3, r3, r1
 2763 0bb0 8331A0E1 		mov	r3, r3, asl #3
 2764 0bb4 03308CE0 		add	r3, ip, r3
 2765 0bb8 003083E0 		add	r3, r3, r0
 2766 0bbc 382A1FE5 		ldr	r2, .L19+52
 2767 0bc0 002083E5 		str	r2, [r3, #0]
 205:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 2768              		.loc 1 205 0
 2769 0bc4 B6115BE1 		ldrh	r1, [fp, #-22]
 2770 0bc8 40CA1FE5 		ldr	ip, .L19+56
 2771 0bcc 960CA0E3 		mov	r0, #38400
 2772 0bd0 0120A0E1 		mov	r2, r1
 2773 0bd4 0221A0E1 		mov	r2, r2, asl #2
 2774 0bd8 012082E0 		add	r2, r2, r1
 2775 0bdc 0232A0E1 		mov	r3, r2, asl #4
 2776 0be0 033062E0 		rsb	r3, r2, r3
 2777 0be4 0333A0E1 		mov	r3, r3, asl #6
 2778 0be8 013083E0 		add	r3, r3, r1
 2779 0bec 8331A0E1 		mov	r3, r3, asl #3
 2780 0bf0 14104BE2 		sub	r1, fp, #20
 2781 0bf4 033081E0 		add	r3, r1, r3
 2782 0bf8 0C3083E0 		add	r3, r3, ip
 2783 0bfc 003083E0 		add	r3, r3, r0
 2784 0c00 0420A0E3 		mov	r2, #4
 2785 0c04 0820C3E5 		strb	r2, [r3, #8]
 206:../proyecto.c **** 	i++;
 2786              		.loc 1 206 0
 2787 0c08 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2788 0c0c 013083E2 		add	r3, r3, #1
 2789 0c10 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 207:../proyecto.c **** 
 208:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 2790              		.loc 1 208 0
 2791 0c14 B6015BE1 		ldrh	r0, [fp, #-22]
 2792 0c18 901A1FE5 		ldr	r1, .L19+56
 2793 0c1c 5D194BE2 		sub	r1, fp, #1523712
 2794 0c20 C51D41E2 		sub	r1, r1, #12608
 2795 0c24 201041E2 		sub	r1, r1, #32
 2796 0c28 0020A0E1 		mov	r2, r0
 2797 0c2c 0221A0E1 		mov	r2, r2, asl #2
 2798 0c30 002082E0 		add	r2, r2, r0
 2799 0c34 0232A0E1 		mov	r3, r2, asl #4
 2800 0c38 033062E0 		rsb	r3, r2, r3
 2801 0c3c 0333A0E1 		mov	r3, r3, asl #6
 2802 0c40 003083E0 		add	r3, r3, r0
 2803 0c44 8331A0E1 		mov	r3, r3, asl #3
 2804 0c48 033081E0 		add	r3, r1, r3
 2805 0c4c 043083E2 		add	r3, r3, #4
 2806 0c50 D80A1FE5 		ldr	r0, .L19+40
 2807 0c54 0310A0E1 		mov	r1, r3
 2808 0c58 FEFFFFEB 		bl	lcd_bmp2photo
 209:../proyecto.c **** 	album.pack[i].secs = 3;
 2809              		.loc 1 209 0
 2810 0c5c B6115BE1 		ldrh	r1, [fp, #-22]
 2811 0c60 D8CA1FE5 		ldr	ip, .L19+56
 2812 0c64 960CA0E3 		mov	r0, #38400
 2813 0c68 0120A0E1 		mov	r2, r1
 2814 0c6c 0221A0E1 		mov	r2, r2, asl #2
 2815 0c70 012082E0 		add	r2, r2, r1
 2816 0c74 0232A0E1 		mov	r3, r2, asl #4
 2817 0c78 033062E0 		rsb	r3, r2, r3
 2818 0c7c 0333A0E1 		mov	r3, r3, asl #6
 2819 0c80 013083E0 		add	r3, r3, r1
 2820 0c84 8331A0E1 		mov	r3, r3, asl #3
 2821 0c88 14204BE2 		sub	r2, fp, #20
 2822 0c8c 033082E0 		add	r3, r2, r3
 2823 0c90 0C3083E0 		add	r3, r3, ip
 2824 0c94 003083E0 		add	r3, r3, r0
 2825 0c98 0320A0E3 		mov	r2, #3
 2826 0c9c 0920C3E5 		strb	r2, [r3, #9]
 210:../proyecto.c **** 	album.pack[i].effect = efectoRevelado;
 2827              		.loc 1 210 0
 2828 0ca0 B6115BE1 		ldrh	r1, [fp, #-22]
 2829 0ca4 1C2B1FE5 		ldr	r2, .L19+56
 2830 0ca8 0430A0E3 		mov	r3, #4
 2831 0cac 14004BE2 		sub	r0, fp, #20
 2832 0cb0 022080E0 		add	r2, r0, r2
 2833 0cb4 03C082E0 		add	ip, r2, r3
 2834 0cb8 960CA0E3 		mov	r0, #38400
 2835 0cbc 0120A0E1 		mov	r2, r1
 2836 0cc0 0221A0E1 		mov	r2, r2, asl #2
 2837 0cc4 012082E0 		add	r2, r2, r1
 2838 0cc8 0232A0E1 		mov	r3, r2, asl #4
 2839 0ccc 033062E0 		rsb	r3, r2, r3
 2840 0cd0 0333A0E1 		mov	r3, r3, asl #6
 2841 0cd4 013083E0 		add	r3, r3, r1
 2842 0cd8 8331A0E1 		mov	r3, r3, asl #3
 2843 0cdc 03308CE0 		add	r3, ip, r3
 2844 0ce0 003083E0 		add	r3, r3, r0
 2845 0ce4 682B1FE5 		ldr	r2, .L19+44
 2846 0ce8 002083E5 		str	r2, [r3, #0]
 211:../proyecto.c **** 	album.pack[i].sense = DOWN;
 2847              		.loc 1 211 0
 2848 0cec B6115BE1 		ldrh	r1, [fp, #-22]
 2849 0cf0 68CB1FE5 		ldr	ip, .L19+56
 2850 0cf4 960CA0E3 		mov	r0, #38400
 2851 0cf8 0120A0E1 		mov	r2, r1
 2852 0cfc 0221A0E1 		mov	r2, r2, asl #2
 2853 0d00 012082E0 		add	r2, r2, r1
 2854 0d04 0232A0E1 		mov	r3, r2, asl #4
 2855 0d08 033062E0 		rsb	r3, r2, r3
 2856 0d0c 0333A0E1 		mov	r3, r3, asl #6
 2857 0d10 013083E0 		add	r3, r3, r1
 2858 0d14 8331A0E1 		mov	r3, r3, asl #3
 2859 0d18 14104BE2 		sub	r1, fp, #20
 2860 0d1c 033081E0 		add	r3, r1, r3
 2861 0d20 0C3083E0 		add	r3, r3, ip
 2862 0d24 003083E0 		add	r3, r3, r0
 2863 0d28 0320A0E3 		mov	r2, #3
 2864 0d2c 0820C3E5 		strb	r2, [r3, #8]
 212:../proyecto.c **** 	i++;
 2865              		.loc 1 212 0
 2866 0d30 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2867 0d34 013083E2 		add	r3, r3, #1
 2868 0d38 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 213:../proyecto.c **** 
 214:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 2869              		.loc 1 214 0
 2870 0d3c B6015BE1 		ldrh	r0, [fp, #-22]
 2871 0d40 B81B1FE5 		ldr	r1, .L19+56
 2872 0d44 5D194BE2 		sub	r1, fp, #1523712
 2873 0d48 C51D41E2 		sub	r1, r1, #12608
 2874 0d4c 201041E2 		sub	r1, r1, #32
 2875 0d50 0020A0E1 		mov	r2, r0
 2876 0d54 0221A0E1 		mov	r2, r2, asl #2
 2877 0d58 002082E0 		add	r2, r2, r0
 2878 0d5c 0232A0E1 		mov	r3, r2, asl #4
 2879 0d60 033062E0 		rsb	r3, r2, r3
 2880 0d64 0333A0E1 		mov	r3, r3, asl #6
 2881 0d68 003083E0 		add	r3, r3, r0
 2882 0d6c 8331A0E1 		mov	r3, r3, asl #3
 2883 0d70 033081E0 		add	r3, r1, r3
 2884 0d74 043083E2 		add	r3, r3, #4
 2885 0d78 F80B1FE5 		ldr	r0, .L19+48
 2886 0d7c 0310A0E1 		mov	r1, r3
 2887 0d80 FEFFFFEB 		bl	lcd_bmp2photo
 215:../proyecto.c **** 	album.pack[i].secs = 0;
 2888              		.loc 1 215 0
 2889 0d84 B6115BE1 		ldrh	r1, [fp, #-22]
 2890 0d88 00CC1FE5 		ldr	ip, .L19+56
 2891 0d8c 960CA0E3 		mov	r0, #38400
 2892 0d90 0120A0E1 		mov	r2, r1
 2893 0d94 0221A0E1 		mov	r2, r2, asl #2
 2894 0d98 012082E0 		add	r2, r2, r1
 2895 0d9c 0232A0E1 		mov	r3, r2, asl #4
 2896 0da0 033062E0 		rsb	r3, r2, r3
 2897 0da4 0333A0E1 		mov	r3, r3, asl #6
 2898 0da8 013083E0 		add	r3, r3, r1
 2899 0dac 8331A0E1 		mov	r3, r3, asl #3
 2900 0db0 14204BE2 		sub	r2, fp, #20
 2901 0db4 033082E0 		add	r3, r2, r3
 2902 0db8 0C3083E0 		add	r3, r3, ip
 2903 0dbc 003083E0 		add	r3, r3, r0
 2904 0dc0 0020A0E3 		mov	r2, #0
 2905 0dc4 0920C3E5 		strb	r2, [r3, #9]
 216:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 2906              		.loc 1 216 0
 2907 0dc8 B6115BE1 		ldrh	r1, [fp, #-22]
 2908 0dcc 442C1FE5 		ldr	r2, .L19+56
 2909 0dd0 0430A0E3 		mov	r3, #4
 2910 0dd4 14004BE2 		sub	r0, fp, #20
 2911 0dd8 022080E0 		add	r2, r0, r2
 2912 0ddc 03C082E0 		add	ip, r2, r3
 2913 0de0 960CA0E3 		mov	r0, #38400
 2914 0de4 0120A0E1 		mov	r2, r1
 2915 0de8 0221A0E1 		mov	r2, r2, asl #2
 2916 0dec 012082E0 		add	r2, r2, r1
 2917 0df0 0232A0E1 		mov	r3, r2, asl #4
 2918 0df4 033062E0 		rsb	r3, r2, r3
 2919 0df8 0333A0E1 		mov	r3, r3, asl #6
 2920 0dfc 013083E0 		add	r3, r3, r1
 2921 0e00 8331A0E1 		mov	r3, r3, asl #3
 2922 0e04 03308CE0 		add	r3, ip, r3
 2923 0e08 003083E0 		add	r3, r3, r0
 2924 0e0c 882C1FE5 		ldr	r2, .L19+52
 2925 0e10 002083E5 		str	r2, [r3, #0]
 217:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 2926              		.loc 1 217 0
 2927 0e14 B6115BE1 		ldrh	r1, [fp, #-22]
 2928 0e18 90CC1FE5 		ldr	ip, .L19+56
 2929 0e1c 960CA0E3 		mov	r0, #38400
 2930 0e20 0120A0E1 		mov	r2, r1
 2931 0e24 0221A0E1 		mov	r2, r2, asl #2
 2932 0e28 012082E0 		add	r2, r2, r1
 2933 0e2c 0232A0E1 		mov	r3, r2, asl #4
 2934 0e30 033062E0 		rsb	r3, r2, r3
 2935 0e34 0333A0E1 		mov	r3, r3, asl #6
 2936 0e38 013083E0 		add	r3, r3, r1
 2937 0e3c 8331A0E1 		mov	r3, r3, asl #3
 2938 0e40 14104BE2 		sub	r1, fp, #20
 2939 0e44 033081E0 		add	r3, r1, r3
 2940 0e48 0C3083E0 		add	r3, r3, ip
 2941 0e4c 003083E0 		add	r3, r3, r0
 2942 0e50 0420A0E3 		mov	r2, #4
 2943 0e54 0820C3E5 		strb	r2, [r3, #8]
 218:../proyecto.c **** 	i++;
 2944              		.loc 1 218 0
 2945 0e58 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 2946 0e5c 013083E2 		add	r3, r3, #1
 2947 0e60 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 219:../proyecto.c **** 
 220:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 2948              		.loc 1 220 0
 2949 0e64 B6015BE1 		ldrh	r0, [fp, #-22]
 2950 0e68 E01C1FE5 		ldr	r1, .L19+56
 2951 0e6c 5D194BE2 		sub	r1, fp, #1523712
 2952 0e70 C51D41E2 		sub	r1, r1, #12608
 2953 0e74 201041E2 		sub	r1, r1, #32
 2954 0e78 0020A0E1 		mov	r2, r0
 2955 0e7c 0221A0E1 		mov	r2, r2, asl #2
 2956 0e80 002082E0 		add	r2, r2, r0
 2957 0e84 0232A0E1 		mov	r3, r2, asl #4
 2958 0e88 033062E0 		rsb	r3, r2, r3
 2959 0e8c 0333A0E1 		mov	r3, r3, asl #6
 2960 0e90 003083E0 		add	r3, r3, r0
 2961 0e94 8331A0E1 		mov	r3, r3, asl #3
 2962 0e98 033081E0 		add	r3, r1, r3
 2963 0e9c 043083E2 		add	r3, r3, #4
 2964 0ea0 280D1FE5 		ldr	r0, .L19+40
 2965 0ea4 0310A0E1 		mov	r1, r3
 2966 0ea8 FEFFFFEB 		bl	lcd_bmp2photo
 221:../proyecto.c **** 	album.pack[i].secs = 3;
 2967              		.loc 1 221 0
 2968 0eac B6115BE1 		ldrh	r1, [fp, #-22]
 2969 0eb0 28CD1FE5 		ldr	ip, .L19+56
 2970 0eb4 960CA0E3 		mov	r0, #38400
 2971 0eb8 0120A0E1 		mov	r2, r1
 2972 0ebc 0221A0E1 		mov	r2, r2, asl #2
 2973 0ec0 012082E0 		add	r2, r2, r1
 2974 0ec4 0232A0E1 		mov	r3, r2, asl #4
 2975 0ec8 033062E0 		rsb	r3, r2, r3
 2976 0ecc 0333A0E1 		mov	r3, r3, asl #6
 2977 0ed0 013083E0 		add	r3, r3, r1
 2978 0ed4 8331A0E1 		mov	r3, r3, asl #3
 2979 0ed8 14204BE2 		sub	r2, fp, #20
 2980 0edc 033082E0 		add	r3, r2, r3
 2981 0ee0 0C3083E0 		add	r3, r3, ip
 2982 0ee4 003083E0 		add	r3, r3, r0
 2983 0ee8 0320A0E3 		mov	r2, #3
 2984 0eec 0920C3E5 		strb	r2, [r3, #9]
 222:../proyecto.c **** 	album.pack[i].effect = efectoRevelado;
 2985              		.loc 1 222 0
 2986 0ef0 B6115BE1 		ldrh	r1, [fp, #-22]
 2987 0ef4 6C2D1FE5 		ldr	r2, .L19+56
 2988 0ef8 0430A0E3 		mov	r3, #4
 2989 0efc 14004BE2 		sub	r0, fp, #20
 2990 0f00 022080E0 		add	r2, r0, r2
 2991 0f04 03C082E0 		add	ip, r2, r3
 2992 0f08 960CA0E3 		mov	r0, #38400
 2993 0f0c 0120A0E1 		mov	r2, r1
 2994 0f10 0221A0E1 		mov	r2, r2, asl #2
 2995 0f14 012082E0 		add	r2, r2, r1
 2996 0f18 0232A0E1 		mov	r3, r2, asl #4
 2997 0f1c 033062E0 		rsb	r3, r2, r3
 2998 0f20 0333A0E1 		mov	r3, r3, asl #6
 2999 0f24 013083E0 		add	r3, r3, r1
 3000 0f28 8331A0E1 		mov	r3, r3, asl #3
 3001 0f2c 03308CE0 		add	r3, ip, r3
 3002 0f30 003083E0 		add	r3, r3, r0
 3003 0f34 B82D1FE5 		ldr	r2, .L19+44
 3004 0f38 002083E5 		str	r2, [r3, #0]
 223:../proyecto.c **** 	album.pack[i].sense = LEFT;
 3005              		.loc 1 223 0
 3006 0f3c B6115BE1 		ldrh	r1, [fp, #-22]
 3007 0f40 B8CD1FE5 		ldr	ip, .L19+56
 3008 0f44 960CA0E3 		mov	r0, #38400
 3009 0f48 0120A0E1 		mov	r2, r1
 3010 0f4c 0221A0E1 		mov	r2, r2, asl #2
 3011 0f50 012082E0 		add	r2, r2, r1
 3012 0f54 0232A0E1 		mov	r3, r2, asl #4
 3013 0f58 033062E0 		rsb	r3, r2, r3
 3014 0f5c 0333A0E1 		mov	r3, r3, asl #6
 3015 0f60 013083E0 		add	r3, r3, r1
 3016 0f64 8331A0E1 		mov	r3, r3, asl #3
 3017 0f68 14104BE2 		sub	r1, fp, #20
 3018 0f6c 033081E0 		add	r3, r1, r3
 3019 0f70 0C3083E0 		add	r3, r3, ip
 3020 0f74 003083E0 		add	r3, r3, r0
 3021 0f78 0020A0E3 		mov	r2, #0
 3022 0f7c 0820C3E5 		strb	r2, [r3, #8]
 224:../proyecto.c **** 	i++;
 3023              		.loc 1 224 0
 3024 0f80 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3025 0f84 013083E2 		add	r3, r3, #1
 3026 0f88 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 225:../proyecto.c **** 
 226:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 3027              		.loc 1 226 0
 3028 0f8c B6015BE1 		ldrh	r0, [fp, #-22]
 3029 0f90 081E1FE5 		ldr	r1, .L19+56
 3030 0f94 5D194BE2 		sub	r1, fp, #1523712
 3031 0f98 C51D41E2 		sub	r1, r1, #12608
 3032 0f9c 201041E2 		sub	r1, r1, #32
 3033 0fa0 0020A0E1 		mov	r2, r0
 3034 0fa4 0221A0E1 		mov	r2, r2, asl #2
 3035 0fa8 002082E0 		add	r2, r2, r0
 3036 0fac 0232A0E1 		mov	r3, r2, asl #4
 3037 0fb0 033062E0 		rsb	r3, r2, r3
 3038 0fb4 0333A0E1 		mov	r3, r3, asl #6
 3039 0fb8 003083E0 		add	r3, r3, r0
 3040 0fbc 8331A0E1 		mov	r3, r3, asl #3
 3041 0fc0 033081E0 		add	r3, r1, r3
 3042 0fc4 043083E2 		add	r3, r3, #4
 3043 0fc8 480E1FE5 		ldr	r0, .L19+48
 3044 0fcc 0310A0E1 		mov	r1, r3
 3045 0fd0 FEFFFFEB 		bl	lcd_bmp2photo
 227:../proyecto.c **** 	album.pack[i].secs = 0;
 3046              		.loc 1 227 0
 3047 0fd4 B6115BE1 		ldrh	r1, [fp, #-22]
 3048 0fd8 50CE1FE5 		ldr	ip, .L19+56
 3049 0fdc 960CA0E3 		mov	r0, #38400
 3050 0fe0 0120A0E1 		mov	r2, r1
 3051 0fe4 0221A0E1 		mov	r2, r2, asl #2
 3052 0fe8 012082E0 		add	r2, r2, r1
 3053 0fec 0232A0E1 		mov	r3, r2, asl #4
 3054 0ff0 033062E0 		rsb	r3, r2, r3
 3055 0ff4 0333A0E1 		mov	r3, r3, asl #6
 3056 0ff8 013083E0 		add	r3, r3, r1
 3057 0ffc 8331A0E1 		mov	r3, r3, asl #3
 3058 1000 14204BE2 		sub	r2, fp, #20
 3059 1004 033082E0 		add	r3, r2, r3
 3060 1008 0C3083E0 		add	r3, r3, ip
 3061 100c 003083E0 		add	r3, r3, r0
 3062 1010 0020A0E3 		mov	r2, #0
 3063 1014 0920C3E5 		strb	r2, [r3, #9]
 228:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 3064              		.loc 1 228 0
 3065 1018 B6115BE1 		ldrh	r1, [fp, #-22]
 3066 101c 942E1FE5 		ldr	r2, .L19+56
 3067 1020 0430A0E3 		mov	r3, #4
 3068 1024 14004BE2 		sub	r0, fp, #20
 3069 1028 022080E0 		add	r2, r0, r2
 3070 102c 03C082E0 		add	ip, r2, r3
 3071 1030 960CA0E3 		mov	r0, #38400
 3072 1034 0120A0E1 		mov	r2, r1
 3073 1038 0221A0E1 		mov	r2, r2, asl #2
 3074 103c 012082E0 		add	r2, r2, r1
 3075 1040 0232A0E1 		mov	r3, r2, asl #4
 3076 1044 033062E0 		rsb	r3, r2, r3
 3077 1048 0333A0E1 		mov	r3, r3, asl #6
 3078 104c 013083E0 		add	r3, r3, r1
 3079 1050 8331A0E1 		mov	r3, r3, asl #3
 3080 1054 03308CE0 		add	r3, ip, r3
 3081 1058 003083E0 		add	r3, r3, r0
 3082 105c D82E1FE5 		ldr	r2, .L19+52
 3083 1060 002083E5 		str	r2, [r3, #0]
 229:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 3084              		.loc 1 229 0
 3085 1064 B6115BE1 		ldrh	r1, [fp, #-22]
 3086 1068 E0CE1FE5 		ldr	ip, .L19+56
 3087 106c 960CA0E3 		mov	r0, #38400
 3088 1070 0120A0E1 		mov	r2, r1
 3089 1074 0221A0E1 		mov	r2, r2, asl #2
 3090 1078 012082E0 		add	r2, r2, r1
 3091 107c 0232A0E1 		mov	r3, r2, asl #4
 3092 1080 033062E0 		rsb	r3, r2, r3
 3093 1084 0333A0E1 		mov	r3, r3, asl #6
 3094 1088 013083E0 		add	r3, r3, r1
 3095 108c 8331A0E1 		mov	r3, r3, asl #3
 3096 1090 14104BE2 		sub	r1, fp, #20
 3097 1094 033081E0 		add	r3, r1, r3
 3098 1098 0C3083E0 		add	r3, r3, ip
 3099 109c 003083E0 		add	r3, r3, r0
 3100 10a0 0420A0E3 		mov	r2, #4
 3101 10a4 0820C3E5 		strb	r2, [r3, #8]
 230:../proyecto.c **** 	i++;
 3102              		.loc 1 230 0
 3103 10a8 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3104 10ac 013083E2 		add	r3, r3, #1
 3105 10b0 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 231:../proyecto.c **** 
 232:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 3106              		.loc 1 232 0
 3107 10b4 B6015BE1 		ldrh	r0, [fp, #-22]
 3108 10b8 301F1FE5 		ldr	r1, .L19+56
 3109 10bc 5D194BE2 		sub	r1, fp, #1523712
 3110 10c0 C51D41E2 		sub	r1, r1, #12608
 3111 10c4 201041E2 		sub	r1, r1, #32
 3112 10c8 0020A0E1 		mov	r2, r0
 3113 10cc 0221A0E1 		mov	r2, r2, asl #2
 3114 10d0 002082E0 		add	r2, r2, r0
 3115 10d4 0232A0E1 		mov	r3, r2, asl #4
 3116 10d8 033062E0 		rsb	r3, r2, r3
 3117 10dc 0333A0E1 		mov	r3, r3, asl #6
 3118 10e0 003083E0 		add	r3, r3, r0
 3119 10e4 8331A0E1 		mov	r3, r3, asl #3
 3120 10e8 033081E0 		add	r3, r1, r3
 3121 10ec 043083E2 		add	r3, r3, #4
 3122 10f0 580F9FE5 		ldr	r0, .L21
 3123 10f4 0310A0E1 		mov	r1, r3
 3124 10f8 FEFFFFEB 		bl	lcd_bmp2photo
 233:../proyecto.c **** 	album.pack[i].secs = 3;
 3125              		.loc 1 233 0
 3126 10fc B6115BE1 		ldrh	r1, [fp, #-22]
 3127 1100 4CCF9FE5 		ldr	ip, .L21+4
 3128 1104 960CA0E3 		mov	r0, #38400
 3129 1108 0120A0E1 		mov	r2, r1
 3130 110c 0221A0E1 		mov	r2, r2, asl #2
 3131 1110 012082E0 		add	r2, r2, r1
 3132 1114 0232A0E1 		mov	r3, r2, asl #4
 3133 1118 033062E0 		rsb	r3, r2, r3
 3134 111c 0333A0E1 		mov	r3, r3, asl #6
 3135 1120 013083E0 		add	r3, r3, r1
 3136 1124 8331A0E1 		mov	r3, r3, asl #3
 3137 1128 14204BE2 		sub	r2, fp, #20
 3138 112c 033082E0 		add	r3, r2, r3
 3139 1130 0C3083E0 		add	r3, r3, ip
 3140 1134 003083E0 		add	r3, r3, r0
 3141 1138 0320A0E3 		mov	r2, #3
 3142 113c 0920C3E5 		strb	r2, [r3, #9]
 234:../proyecto.c **** 	album.pack[i].effect = efectoCobertura;
 3143              		.loc 1 234 0
 3144 1140 B6115BE1 		ldrh	r1, [fp, #-22]
 3145 1144 082F9FE5 		ldr	r2, .L21+4
 3146 1148 0430A0E3 		mov	r3, #4
 3147 114c 14004BE2 		sub	r0, fp, #20
 3148 1150 022080E0 		add	r2, r0, r2
 3149 1154 03C082E0 		add	ip, r2, r3
 3150 1158 960CA0E3 		mov	r0, #38400
 3151 115c 0120A0E1 		mov	r2, r1
 3152 1160 0221A0E1 		mov	r2, r2, asl #2
 3153 1164 012082E0 		add	r2, r2, r1
 3154 1168 0232A0E1 		mov	r3, r2, asl #4
 3155 116c 033062E0 		rsb	r3, r2, r3
 3156 1170 0333A0E1 		mov	r3, r3, asl #6
 3157 1174 013083E0 		add	r3, r3, r1
 3158 1178 8331A0E1 		mov	r3, r3, asl #3
 3159 117c 03308CE0 		add	r3, ip, r3
 3160 1180 003083E0 		add	r3, r3, r0
 3161 1184 CC2E9FE5 		ldr	r2, .L21+8
 3162 1188 002083E5 		str	r2, [r3, #0]
 235:../proyecto.c **** 	album.pack[i].sense = UP;
 3163              		.loc 1 235 0
 3164 118c B6115BE1 		ldrh	r1, [fp, #-22]
 3165 1190 BCCE9FE5 		ldr	ip, .L21+4
 3166 1194 960CA0E3 		mov	r0, #38400
 3167 1198 0120A0E1 		mov	r2, r1
 3168 119c 0221A0E1 		mov	r2, r2, asl #2
 3169 11a0 012082E0 		add	r2, r2, r1
 3170 11a4 0232A0E1 		mov	r3, r2, asl #4
 3171 11a8 033062E0 		rsb	r3, r2, r3
 3172 11ac 0333A0E1 		mov	r3, r3, asl #6
 3173 11b0 013083E0 		add	r3, r3, r1
 3174 11b4 8331A0E1 		mov	r3, r3, asl #3
 3175 11b8 14104BE2 		sub	r1, fp, #20
 3176 11bc 033081E0 		add	r3, r1, r3
 3177 11c0 0C3083E0 		add	r3, r3, ip
 3178 11c4 003083E0 		add	r3, r3, r0
 3179 11c8 0220A0E3 		mov	r2, #2
 3180 11cc 0820C3E5 		strb	r2, [r3, #8]
 236:../proyecto.c **** 	i++;
 3181              		.loc 1 236 0
 3182 11d0 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3183 11d4 013083E2 		add	r3, r3, #1
 3184 11d8 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 237:../proyecto.c **** 
 238:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 3185              		.loc 1 238 0
 3186 11dc B6015BE1 		ldrh	r0, [fp, #-22]
 3187 11e0 6C1E9FE5 		ldr	r1, .L21+4
 3188 11e4 5D194BE2 		sub	r1, fp, #1523712
 3189 11e8 C51D41E2 		sub	r1, r1, #12608
 3190 11ec 201041E2 		sub	r1, r1, #32
 3191 11f0 0020A0E1 		mov	r2, r0
 3192 11f4 0221A0E1 		mov	r2, r2, asl #2
 3193 11f8 002082E0 		add	r2, r2, r0
 3194 11fc 0232A0E1 		mov	r3, r2, asl #4
 3195 1200 033062E0 		rsb	r3, r2, r3
 3196 1204 0333A0E1 		mov	r3, r3, asl #6
 3197 1208 003083E0 		add	r3, r3, r0
 3198 120c 8331A0E1 		mov	r3, r3, asl #3
 3199 1210 033081E0 		add	r3, r1, r3
 3200 1214 043083E2 		add	r3, r3, #4
 3201 1218 4C0E9FE5 		ldr	r0, .L21+28
 3202 121c 0310A0E1 		mov	r1, r3
 3203 1220 FEFFFFEB 		bl	lcd_bmp2photo
 239:../proyecto.c **** 	album.pack[i].secs = 0;
 3204              		.loc 1 239 0
 3205 1224 B6115BE1 		ldrh	r1, [fp, #-22]
 3206 1228 24CE9FE5 		ldr	ip, .L21+4
 3207 122c 960CA0E3 		mov	r0, #38400
 3208 1230 0120A0E1 		mov	r2, r1
 3209 1234 0221A0E1 		mov	r2, r2, asl #2
 3210 1238 012082E0 		add	r2, r2, r1
 3211 123c 0232A0E1 		mov	r3, r2, asl #4
 3212 1240 033062E0 		rsb	r3, r2, r3
 3213 1244 0333A0E1 		mov	r3, r3, asl #6
 3214 1248 013083E0 		add	r3, r3, r1
 3215 124c 8331A0E1 		mov	r3, r3, asl #3
 3216 1250 14204BE2 		sub	r2, fp, #20
 3217 1254 033082E0 		add	r3, r2, r3
 3218 1258 0C3083E0 		add	r3, r3, ip
 3219 125c 003083E0 		add	r3, r3, r0
 3220 1260 0020A0E3 		mov	r2, #0
 3221 1264 0920C3E5 		strb	r2, [r3, #9]
 240:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 3222              		.loc 1 240 0
 3223 1268 B6115BE1 		ldrh	r1, [fp, #-22]
 3224 126c E02D9FE5 		ldr	r2, .L21+4
 3225 1270 0430A0E3 		mov	r3, #4
 3226 1274 14004BE2 		sub	r0, fp, #20
 3227 1278 022080E0 		add	r2, r0, r2
 3228 127c 03C082E0 		add	ip, r2, r3
 3229 1280 960CA0E3 		mov	r0, #38400
 3230 1284 0120A0E1 		mov	r2, r1
 3231 1288 0221A0E1 		mov	r2, r2, asl #2
 3232 128c 012082E0 		add	r2, r2, r1
 3233 1290 0232A0E1 		mov	r3, r2, asl #4
 3234 1294 033062E0 		rsb	r3, r2, r3
 3235 1298 0333A0E1 		mov	r3, r3, asl #6
 3236 129c 013083E0 		add	r3, r3, r1
 3237 12a0 8331A0E1 		mov	r3, r3, asl #3
 3238 12a4 03308CE0 		add	r3, ip, r3
 3239 12a8 003083E0 		add	r3, r3, r0
 3240 12ac BC2D9FE5 		ldr	r2, .L21+32
 3241 12b0 002083E5 		str	r2, [r3, #0]
 241:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 3242              		.loc 1 241 0
 3243 12b4 B6115BE1 		ldrh	r1, [fp, #-22]
 3244 12b8 94CD9FE5 		ldr	ip, .L21+4
 3245 12bc 960CA0E3 		mov	r0, #38400
 3246 12c0 0120A0E1 		mov	r2, r1
 3247 12c4 0221A0E1 		mov	r2, r2, asl #2
 3248 12c8 012082E0 		add	r2, r2, r1
 3249 12cc 0232A0E1 		mov	r3, r2, asl #4
 3250 12d0 033062E0 		rsb	r3, r2, r3
 3251 12d4 0333A0E1 		mov	r3, r3, asl #6
 3252 12d8 013083E0 		add	r3, r3, r1
 3253 12dc 8331A0E1 		mov	r3, r3, asl #3
 3254 12e0 14104BE2 		sub	r1, fp, #20
 3255 12e4 033081E0 		add	r3, r1, r3
 3256 12e8 0C3083E0 		add	r3, r3, ip
 3257 12ec 003083E0 		add	r3, r3, r0
 3258 12f0 0420A0E3 		mov	r2, #4
 3259 12f4 0820C3E5 		strb	r2, [r3, #8]
 242:../proyecto.c **** 	i++;
 3260              		.loc 1 242 0
 3261 12f8 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3262 12fc 013083E2 		add	r3, r3, #1
 3263 1300 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 243:../proyecto.c **** 
 244:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 3264              		.loc 1 244 0
 3265 1304 B6015BE1 		ldrh	r0, [fp, #-22]
 3266 1308 441D9FE5 		ldr	r1, .L21+4
 3267 130c 5D194BE2 		sub	r1, fp, #1523712
 3268 1310 C51D41E2 		sub	r1, r1, #12608
 3269 1314 201041E2 		sub	r1, r1, #32
 3270 1318 0020A0E1 		mov	r2, r0
 3271 131c 0221A0E1 		mov	r2, r2, asl #2
 3272 1320 002082E0 		add	r2, r2, r0
 3273 1324 0232A0E1 		mov	r3, r2, asl #4
 3274 1328 033062E0 		rsb	r3, r2, r3
 3275 132c 0333A0E1 		mov	r3, r3, asl #6
 3276 1330 003083E0 		add	r3, r3, r0
 3277 1334 8331A0E1 		mov	r3, r3, asl #3
 3278 1338 033081E0 		add	r3, r1, r3
 3279 133c 043083E2 		add	r3, r3, #4
 3280 1340 080D9FE5 		ldr	r0, .L21
 3281 1344 0310A0E1 		mov	r1, r3
 3282 1348 FEFFFFEB 		bl	lcd_bmp2photo
 245:../proyecto.c **** 	album.pack[i].secs = 3;
 3283              		.loc 1 245 0
 3284 134c B6115BE1 		ldrh	r1, [fp, #-22]
 3285 1350 FCCC9FE5 		ldr	ip, .L21+4
 3286 1354 960CA0E3 		mov	r0, #38400
 3287 1358 0120A0E1 		mov	r2, r1
 3288 135c 0221A0E1 		mov	r2, r2, asl #2
 3289 1360 012082E0 		add	r2, r2, r1
 3290 1364 0232A0E1 		mov	r3, r2, asl #4
 3291 1368 033062E0 		rsb	r3, r2, r3
 3292 136c 0333A0E1 		mov	r3, r3, asl #6
 3293 1370 013083E0 		add	r3, r3, r1
 3294 1374 8331A0E1 		mov	r3, r3, asl #3
 3295 1378 14204BE2 		sub	r2, fp, #20
 3296 137c 033082E0 		add	r3, r2, r3
 3297 1380 0C3083E0 		add	r3, r3, ip
 3298 1384 003083E0 		add	r3, r3, r0
 3299 1388 0320A0E3 		mov	r2, #3
 3300 138c 0920C3E5 		strb	r2, [r3, #9]
 246:../proyecto.c **** 	album.pack[i].effect = efectoCobertura;
 3301              		.loc 1 246 0
 3302 1390 B6115BE1 		ldrh	r1, [fp, #-22]
 3303 1394 B82C9FE5 		ldr	r2, .L21+4
 3304 1398 0430A0E3 		mov	r3, #4
 3305 139c 14004BE2 		sub	r0, fp, #20
 3306 13a0 022080E0 		add	r2, r0, r2
 3307 13a4 03C082E0 		add	ip, r2, r3
 3308 13a8 960CA0E3 		mov	r0, #38400
 3309 13ac 0120A0E1 		mov	r2, r1
 3310 13b0 0221A0E1 		mov	r2, r2, asl #2
 3311 13b4 012082E0 		add	r2, r2, r1
 3312 13b8 0232A0E1 		mov	r3, r2, asl #4
 3313 13bc 033062E0 		rsb	r3, r2, r3
 3314 13c0 0333A0E1 		mov	r3, r3, asl #6
 3315 13c4 013083E0 		add	r3, r3, r1
 3316 13c8 8331A0E1 		mov	r3, r3, asl #3
 3317 13cc 03308CE0 		add	r3, ip, r3
 3318 13d0 003083E0 		add	r3, r3, r0
 3319 13d4 7C2C9FE5 		ldr	r2, .L21+8
 3320 13d8 002083E5 		str	r2, [r3, #0]
 247:../proyecto.c **** 	album.pack[i].sense = RIGHT;
 3321              		.loc 1 247 0
 3322 13dc B6115BE1 		ldrh	r1, [fp, #-22]
 3323 13e0 6CCC9FE5 		ldr	ip, .L21+4
 3324 13e4 960CA0E3 		mov	r0, #38400
 3325 13e8 0120A0E1 		mov	r2, r1
 3326 13ec 0221A0E1 		mov	r2, r2, asl #2
 3327 13f0 012082E0 		add	r2, r2, r1
 3328 13f4 0232A0E1 		mov	r3, r2, asl #4
 3329 13f8 033062E0 		rsb	r3, r2, r3
 3330 13fc 0333A0E1 		mov	r3, r3, asl #6
 3331 1400 013083E0 		add	r3, r3, r1
 3332 1404 8331A0E1 		mov	r3, r3, asl #3
 3333 1408 14104BE2 		sub	r1, fp, #20
 3334 140c 033081E0 		add	r3, r1, r3
 3335 1410 0C3083E0 		add	r3, r3, ip
 3336 1414 003083E0 		add	r3, r3, r0
 3337 1418 0120A0E3 		mov	r2, #1
 3338 141c 0820C3E5 		strb	r2, [r3, #8]
 248:../proyecto.c **** 	i++;
 3339              		.loc 1 248 0
 3340 1420 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3341 1424 013083E2 		add	r3, r3, #1
 3342 1428 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 249:../proyecto.c **** 
 250:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 3343              		.loc 1 250 0
 3344 142c B6015BE1 		ldrh	r0, [fp, #-22]
 3345 1430 1C1C9FE5 		ldr	r1, .L21+4
 3346 1434 5D194BE2 		sub	r1, fp, #1523712
 3347 1438 C51D41E2 		sub	r1, r1, #12608
 3348 143c 201041E2 		sub	r1, r1, #32
 3349 1440 0020A0E1 		mov	r2, r0
 3350 1444 0221A0E1 		mov	r2, r2, asl #2
 3351 1448 002082E0 		add	r2, r2, r0
 3352 144c 0232A0E1 		mov	r3, r2, asl #4
 3353 1450 033062E0 		rsb	r3, r2, r3
 3354 1454 0333A0E1 		mov	r3, r3, asl #6
 3355 1458 003083E0 		add	r3, r3, r0
 3356 145c 8331A0E1 		mov	r3, r3, asl #3
 3357 1460 033081E0 		add	r3, r1, r3
 3358 1464 043083E2 		add	r3, r3, #4
 3359 1468 FC0B9FE5 		ldr	r0, .L21+28
 3360 146c 0310A0E1 		mov	r1, r3
 3361 1470 FEFFFFEB 		bl	lcd_bmp2photo
 251:../proyecto.c **** 	album.pack[i].secs = 0;
 3362              		.loc 1 251 0
 3363 1474 B6115BE1 		ldrh	r1, [fp, #-22]
 3364 1478 D4CB9FE5 		ldr	ip, .L21+4
 3365 147c 960CA0E3 		mov	r0, #38400
 3366 1480 0120A0E1 		mov	r2, r1
 3367 1484 0221A0E1 		mov	r2, r2, asl #2
 3368 1488 012082E0 		add	r2, r2, r1
 3369 148c 0232A0E1 		mov	r3, r2, asl #4
 3370 1490 033062E0 		rsb	r3, r2, r3
 3371 1494 0333A0E1 		mov	r3, r3, asl #6
 3372 1498 013083E0 		add	r3, r3, r1
 3373 149c 8331A0E1 		mov	r3, r3, asl #3
 3374 14a0 14204BE2 		sub	r2, fp, #20
 3375 14a4 033082E0 		add	r3, r2, r3
 3376 14a8 0C3083E0 		add	r3, r3, ip
 3377 14ac 003083E0 		add	r3, r3, r0
 3378 14b0 0020A0E3 		mov	r2, #0
 3379 14b4 0920C3E5 		strb	r2, [r3, #9]
 252:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 3380              		.loc 1 252 0
 3381 14b8 B6115BE1 		ldrh	r1, [fp, #-22]
 3382 14bc 902B9FE5 		ldr	r2, .L21+4
 3383 14c0 0430A0E3 		mov	r3, #4
 3384 14c4 14004BE2 		sub	r0, fp, #20
 3385 14c8 022080E0 		add	r2, r0, r2
 3386 14cc 03C082E0 		add	ip, r2, r3
 3387 14d0 960CA0E3 		mov	r0, #38400
 3388 14d4 0120A0E1 		mov	r2, r1
 3389 14d8 0221A0E1 		mov	r2, r2, asl #2
 3390 14dc 012082E0 		add	r2, r2, r1
 3391 14e0 0232A0E1 		mov	r3, r2, asl #4
 3392 14e4 033062E0 		rsb	r3, r2, r3
 3393 14e8 0333A0E1 		mov	r3, r3, asl #6
 3394 14ec 013083E0 		add	r3, r3, r1
 3395 14f0 8331A0E1 		mov	r3, r3, asl #3
 3396 14f4 03308CE0 		add	r3, ip, r3
 3397 14f8 003083E0 		add	r3, r3, r0
 3398 14fc 6C2B9FE5 		ldr	r2, .L21+32
 3399 1500 002083E5 		str	r2, [r3, #0]
 253:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 3400              		.loc 1 253 0
 3401 1504 B6115BE1 		ldrh	r1, [fp, #-22]
 3402 1508 44CB9FE5 		ldr	ip, .L21+4
 3403 150c 960CA0E3 		mov	r0, #38400
 3404 1510 0120A0E1 		mov	r2, r1
 3405 1514 0221A0E1 		mov	r2, r2, asl #2
 3406 1518 012082E0 		add	r2, r2, r1
 3407 151c 0232A0E1 		mov	r3, r2, asl #4
 3408 1520 033062E0 		rsb	r3, r2, r3
 3409 1524 0333A0E1 		mov	r3, r3, asl #6
 3410 1528 013083E0 		add	r3, r3, r1
 3411 152c 8331A0E1 		mov	r3, r3, asl #3
 3412 1530 14104BE2 		sub	r1, fp, #20
 3413 1534 033081E0 		add	r3, r1, r3
 3414 1538 0C3083E0 		add	r3, r3, ip
 3415 153c 003083E0 		add	r3, r3, r0
 3416 1540 0420A0E3 		mov	r2, #4
 3417 1544 0820C3E5 		strb	r2, [r3, #8]
 254:../proyecto.c **** 	i++;
 3418              		.loc 1 254 0
 3419 1548 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3420 154c 013083E2 		add	r3, r3, #1
 3421 1550 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 255:../proyecto.c **** 
 256:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 3422              		.loc 1 256 0
 3423 1554 B6015BE1 		ldrh	r0, [fp, #-22]
 3424 1558 F41A9FE5 		ldr	r1, .L21+4
 3425 155c 5D194BE2 		sub	r1, fp, #1523712
 3426 1560 C51D41E2 		sub	r1, r1, #12608
 3427 1564 201041E2 		sub	r1, r1, #32
 3428 1568 0020A0E1 		mov	r2, r0
 3429 156c 0221A0E1 		mov	r2, r2, asl #2
 3430 1570 002082E0 		add	r2, r2, r0
 3431 1574 0232A0E1 		mov	r3, r2, asl #4
 3432 1578 033062E0 		rsb	r3, r2, r3
 3433 157c 0333A0E1 		mov	r3, r3, asl #6
 3434 1580 003083E0 		add	r3, r3, r0
 3435 1584 8331A0E1 		mov	r3, r3, asl #3
 3436 1588 033081E0 		add	r3, r1, r3
 3437 158c 043083E2 		add	r3, r3, #4
 3438 1590 B80A9FE5 		ldr	r0, .L21
 3439 1594 0310A0E1 		mov	r1, r3
 3440 1598 FEFFFFEB 		bl	lcd_bmp2photo
 257:../proyecto.c **** 	album.pack[i].secs = 3;
 3441              		.loc 1 257 0
 3442 159c B6115BE1 		ldrh	r1, [fp, #-22]
 3443 15a0 ACCA9FE5 		ldr	ip, .L21+4
 3444 15a4 960CA0E3 		mov	r0, #38400
 3445 15a8 0120A0E1 		mov	r2, r1
 3446 15ac 0221A0E1 		mov	r2, r2, asl #2
 3447 15b0 012082E0 		add	r2, r2, r1
 3448 15b4 0232A0E1 		mov	r3, r2, asl #4
 3449 15b8 033062E0 		rsb	r3, r2, r3
 3450 15bc 0333A0E1 		mov	r3, r3, asl #6
 3451 15c0 013083E0 		add	r3, r3, r1
 3452 15c4 8331A0E1 		mov	r3, r3, asl #3
 3453 15c8 14204BE2 		sub	r2, fp, #20
 3454 15cc 033082E0 		add	r3, r2, r3
 3455 15d0 0C3083E0 		add	r3, r3, ip
 3456 15d4 003083E0 		add	r3, r3, r0
 3457 15d8 0320A0E3 		mov	r2, #3
 3458 15dc 0920C3E5 		strb	r2, [r3, #9]
 258:../proyecto.c **** 	album.pack[i].effect = efectoDivisionEntrante;
 3459              		.loc 1 258 0
 3460 15e0 B6115BE1 		ldrh	r1, [fp, #-22]
 3461 15e4 682A9FE5 		ldr	r2, .L21+4
 3462 15e8 0430A0E3 		mov	r3, #4
 3463 15ec 14004BE2 		sub	r0, fp, #20
 3464 15f0 022080E0 		add	r2, r0, r2
 3465 15f4 03C082E0 		add	ip, r2, r3
 3466 15f8 960CA0E3 		mov	r0, #38400
 3467 15fc 0120A0E1 		mov	r2, r1
 3468 1600 0221A0E1 		mov	r2, r2, asl #2
 3469 1604 012082E0 		add	r2, r2, r1
 3470 1608 0232A0E1 		mov	r3, r2, asl #4
 3471 160c 033062E0 		rsb	r3, r2, r3
 3472 1610 0333A0E1 		mov	r3, r3, asl #6
 3473 1614 013083E0 		add	r3, r3, r1
 3474 1618 8331A0E1 		mov	r3, r3, asl #3
 3475 161c 03308CE0 		add	r3, ip, r3
 3476 1620 003083E0 		add	r3, r3, r0
 3477 1624 302A9FE5 		ldr	r2, .L21+12
 3478 1628 002083E5 		str	r2, [r3, #0]
 259:../proyecto.c **** 	album.pack[i].sense = HORIZONTAL;
 3479              		.loc 1 259 0
 3480 162c B6115BE1 		ldrh	r1, [fp, #-22]
 3481 1630 1CCA9FE5 		ldr	ip, .L21+4
 3482 1634 960CA0E3 		mov	r0, #38400
 3483 1638 0120A0E1 		mov	r2, r1
 3484 163c 0221A0E1 		mov	r2, r2, asl #2
 3485 1640 012082E0 		add	r2, r2, r1
 3486 1644 0232A0E1 		mov	r3, r2, asl #4
 3487 1648 033062E0 		rsb	r3, r2, r3
 3488 164c 0333A0E1 		mov	r3, r3, asl #6
 3489 1650 013083E0 		add	r3, r3, r1
 3490 1654 8331A0E1 		mov	r3, r3, asl #3
 3491 1658 14104BE2 		sub	r1, fp, #20
 3492 165c 033081E0 		add	r3, r1, r3
 3493 1660 0C3083E0 		add	r3, r3, ip
 3494 1664 003083E0 		add	r3, r3, r0
 3495 1668 0520A0E3 		mov	r2, #5
 3496 166c 0820C3E5 		strb	r2, [r3, #8]
 260:../proyecto.c **** 	i++;
 3497              		.loc 1 260 0
 3498 1670 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3499 1674 013083E2 		add	r3, r3, #1
 3500 1678 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 261:../proyecto.c **** 
 262:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 3501              		.loc 1 262 0
 3502 167c B6015BE1 		ldrh	r0, [fp, #-22]
 3503 1680 CC199FE5 		ldr	r1, .L21+4
 3504 1684 5D194BE2 		sub	r1, fp, #1523712
 3505 1688 C51D41E2 		sub	r1, r1, #12608
 3506 168c 201041E2 		sub	r1, r1, #32
 3507 1690 0020A0E1 		mov	r2, r0
 3508 1694 0221A0E1 		mov	r2, r2, asl #2
 3509 1698 002082E0 		add	r2, r2, r0
 3510 169c 0232A0E1 		mov	r3, r2, asl #4
 3511 16a0 033062E0 		rsb	r3, r2, r3
 3512 16a4 0333A0E1 		mov	r3, r3, asl #6
 3513 16a8 003083E0 		add	r3, r3, r0
 3514 16ac 8331A0E1 		mov	r3, r3, asl #3
 3515 16b0 033081E0 		add	r3, r1, r3
 3516 16b4 043083E2 		add	r3, r3, #4
 3517 16b8 AC099FE5 		ldr	r0, .L21+28
 3518 16bc 0310A0E1 		mov	r1, r3
 3519 16c0 FEFFFFEB 		bl	lcd_bmp2photo
 263:../proyecto.c **** 	album.pack[i].secs = 0;
 3520              		.loc 1 263 0
 3521 16c4 B6115BE1 		ldrh	r1, [fp, #-22]
 3522 16c8 84C99FE5 		ldr	ip, .L21+4
 3523 16cc 960CA0E3 		mov	r0, #38400
 3524 16d0 0120A0E1 		mov	r2, r1
 3525 16d4 0221A0E1 		mov	r2, r2, asl #2
 3526 16d8 012082E0 		add	r2, r2, r1
 3527 16dc 0232A0E1 		mov	r3, r2, asl #4
 3528 16e0 033062E0 		rsb	r3, r2, r3
 3529 16e4 0333A0E1 		mov	r3, r3, asl #6
 3530 16e8 013083E0 		add	r3, r3, r1
 3531 16ec 8331A0E1 		mov	r3, r3, asl #3
 3532 16f0 14204BE2 		sub	r2, fp, #20
 3533 16f4 033082E0 		add	r3, r2, r3
 3534 16f8 0C3083E0 		add	r3, r3, ip
 3535 16fc 003083E0 		add	r3, r3, r0
 3536 1700 0020A0E3 		mov	r2, #0
 3537 1704 0920C3E5 		strb	r2, [r3, #9]
 264:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 3538              		.loc 1 264 0
 3539 1708 B6115BE1 		ldrh	r1, [fp, #-22]
 3540 170c 40299FE5 		ldr	r2, .L21+4
 3541 1710 0430A0E3 		mov	r3, #4
 3542 1714 14004BE2 		sub	r0, fp, #20
 3543 1718 022080E0 		add	r2, r0, r2
 3544 171c 03C082E0 		add	ip, r2, r3
 3545 1720 960CA0E3 		mov	r0, #38400
 3546 1724 0120A0E1 		mov	r2, r1
 3547 1728 0221A0E1 		mov	r2, r2, asl #2
 3548 172c 012082E0 		add	r2, r2, r1
 3549 1730 0232A0E1 		mov	r3, r2, asl #4
 3550 1734 033062E0 		rsb	r3, r2, r3
 3551 1738 0333A0E1 		mov	r3, r3, asl #6
 3552 173c 013083E0 		add	r3, r3, r1
 3553 1740 8331A0E1 		mov	r3, r3, asl #3
 3554 1744 03308CE0 		add	r3, ip, r3
 3555 1748 003083E0 		add	r3, r3, r0
 3556 174c 1C299FE5 		ldr	r2, .L21+32
 3557 1750 002083E5 		str	r2, [r3, #0]
 265:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 3558              		.loc 1 265 0
 3559 1754 B6115BE1 		ldrh	r1, [fp, #-22]
 3560 1758 F4C89FE5 		ldr	ip, .L21+4
 3561 175c 960CA0E3 		mov	r0, #38400
 3562 1760 0120A0E1 		mov	r2, r1
 3563 1764 0221A0E1 		mov	r2, r2, asl #2
 3564 1768 012082E0 		add	r2, r2, r1
 3565 176c 0232A0E1 		mov	r3, r2, asl #4
 3566 1770 033062E0 		rsb	r3, r2, r3
 3567 1774 0333A0E1 		mov	r3, r3, asl #6
 3568 1778 013083E0 		add	r3, r3, r1
 3569 177c 8331A0E1 		mov	r3, r3, asl #3
 3570 1780 14104BE2 		sub	r1, fp, #20
 3571 1784 033081E0 		add	r3, r1, r3
 3572 1788 0C3083E0 		add	r3, r3, ip
 3573 178c 003083E0 		add	r3, r3, r0
 3574 1790 0420A0E3 		mov	r2, #4
 3575 1794 0820C3E5 		strb	r2, [r3, #8]
 266:../proyecto.c **** 	i++;
 3576              		.loc 1 266 0
 3577 1798 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3578 179c 013083E2 		add	r3, r3, #1
 3579 17a0 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 267:../proyecto.c **** 
 268:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 3580              		.loc 1 268 0
 3581 17a4 B6015BE1 		ldrh	r0, [fp, #-22]
 3582 17a8 A4189FE5 		ldr	r1, .L21+4
 3583 17ac 5D194BE2 		sub	r1, fp, #1523712
 3584 17b0 C51D41E2 		sub	r1, r1, #12608
 3585 17b4 201041E2 		sub	r1, r1, #32
 3586 17b8 0020A0E1 		mov	r2, r0
 3587 17bc 0221A0E1 		mov	r2, r2, asl #2
 3588 17c0 002082E0 		add	r2, r2, r0
 3589 17c4 0232A0E1 		mov	r3, r2, asl #4
 3590 17c8 033062E0 		rsb	r3, r2, r3
 3591 17cc 0333A0E1 		mov	r3, r3, asl #6
 3592 17d0 003083E0 		add	r3, r3, r0
 3593 17d4 8331A0E1 		mov	r3, r3, asl #3
 3594 17d8 033081E0 		add	r3, r1, r3
 3595 17dc 043083E2 		add	r3, r3, #4
 3596 17e0 68089FE5 		ldr	r0, .L21
 3597 17e4 0310A0E1 		mov	r1, r3
 3598 17e8 FEFFFFEB 		bl	lcd_bmp2photo
 269:../proyecto.c **** 	album.pack[i].secs = 3;
 3599              		.loc 1 269 0
 3600 17ec B6115BE1 		ldrh	r1, [fp, #-22]
 3601 17f0 5CC89FE5 		ldr	ip, .L21+4
 3602 17f4 960CA0E3 		mov	r0, #38400
 3603 17f8 0120A0E1 		mov	r2, r1
 3604 17fc 0221A0E1 		mov	r2, r2, asl #2
 3605 1800 012082E0 		add	r2, r2, r1
 3606 1804 0232A0E1 		mov	r3, r2, asl #4
 3607 1808 033062E0 		rsb	r3, r2, r3
 3608 180c 0333A0E1 		mov	r3, r3, asl #6
 3609 1810 013083E0 		add	r3, r3, r1
 3610 1814 8331A0E1 		mov	r3, r3, asl #3
 3611 1818 14204BE2 		sub	r2, fp, #20
 3612 181c 033082E0 		add	r3, r2, r3
 3613 1820 0C3083E0 		add	r3, r3, ip
 3614 1824 003083E0 		add	r3, r3, r0
 3615 1828 0320A0E3 		mov	r2, #3
 3616 182c 0920C3E5 		strb	r2, [r3, #9]
 270:../proyecto.c **** 	album.pack[i].effect = efectoDivisionEntrante;
 3617              		.loc 1 270 0
 3618 1830 B6115BE1 		ldrh	r1, [fp, #-22]
 3619 1834 18289FE5 		ldr	r2, .L21+4
 3620 1838 0430A0E3 		mov	r3, #4
 3621 183c 14004BE2 		sub	r0, fp, #20
 3622 1840 022080E0 		add	r2, r0, r2
 3623 1844 03C082E0 		add	ip, r2, r3
 3624 1848 960CA0E3 		mov	r0, #38400
 3625 184c 0120A0E1 		mov	r2, r1
 3626 1850 0221A0E1 		mov	r2, r2, asl #2
 3627 1854 012082E0 		add	r2, r2, r1
 3628 1858 0232A0E1 		mov	r3, r2, asl #4
 3629 185c 033062E0 		rsb	r3, r2, r3
 3630 1860 0333A0E1 		mov	r3, r3, asl #6
 3631 1864 013083E0 		add	r3, r3, r1
 3632 1868 8331A0E1 		mov	r3, r3, asl #3
 3633 186c 03308CE0 		add	r3, ip, r3
 3634 1870 003083E0 		add	r3, r3, r0
 3635 1874 E0279FE5 		ldr	r2, .L21+12
 3636 1878 002083E5 		str	r2, [r3, #0]
 271:../proyecto.c **** 	album.pack[i].sense = VERTICAL;
 3637              		.loc 1 271 0
 3638 187c B6115BE1 		ldrh	r1, [fp, #-22]
 3639 1880 CCC79FE5 		ldr	ip, .L21+4
 3640 1884 960CA0E3 		mov	r0, #38400
 3641 1888 0120A0E1 		mov	r2, r1
 3642 188c 0221A0E1 		mov	r2, r2, asl #2
 3643 1890 012082E0 		add	r2, r2, r1
 3644 1894 0232A0E1 		mov	r3, r2, asl #4
 3645 1898 033062E0 		rsb	r3, r2, r3
 3646 189c 0333A0E1 		mov	r3, r3, asl #6
 3647 18a0 013083E0 		add	r3, r3, r1
 3648 18a4 8331A0E1 		mov	r3, r3, asl #3
 3649 18a8 14104BE2 		sub	r1, fp, #20
 3650 18ac 033081E0 		add	r3, r1, r3
 3651 18b0 0C3083E0 		add	r3, r3, ip
 3652 18b4 003083E0 		add	r3, r3, r0
 3653 18b8 0620A0E3 		mov	r2, #6
 3654 18bc 0820C3E5 		strb	r2, [r3, #8]
 272:../proyecto.c **** 	i++;
 3655              		.loc 1 272 0
 3656 18c0 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3657 18c4 013083E2 		add	r3, r3, #1
 3658 18c8 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 273:../proyecto.c **** 
 274:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 3659              		.loc 1 274 0
 3660 18cc B6015BE1 		ldrh	r0, [fp, #-22]
 3661 18d0 7C179FE5 		ldr	r1, .L21+4
 3662 18d4 5D194BE2 		sub	r1, fp, #1523712
 3663 18d8 C51D41E2 		sub	r1, r1, #12608
 3664 18dc 201041E2 		sub	r1, r1, #32
 3665 18e0 0020A0E1 		mov	r2, r0
 3666 18e4 0221A0E1 		mov	r2, r2, asl #2
 3667 18e8 002082E0 		add	r2, r2, r0
 3668 18ec 0232A0E1 		mov	r3, r2, asl #4
 3669 18f0 033062E0 		rsb	r3, r2, r3
 3670 18f4 0333A0E1 		mov	r3, r3, asl #6
 3671 18f8 003083E0 		add	r3, r3, r0
 3672 18fc 8331A0E1 		mov	r3, r3, asl #3
 3673 1900 033081E0 		add	r3, r1, r3
 3674 1904 043083E2 		add	r3, r3, #4
 3675 1908 5C079FE5 		ldr	r0, .L21+28
 3676 190c 0310A0E1 		mov	r1, r3
 3677 1910 FEFFFFEB 		bl	lcd_bmp2photo
 275:../proyecto.c **** 	album.pack[i].secs = 0;
 3678              		.loc 1 275 0
 3679 1914 B6115BE1 		ldrh	r1, [fp, #-22]
 3680 1918 34C79FE5 		ldr	ip, .L21+4
 3681 191c 960CA0E3 		mov	r0, #38400
 3682 1920 0120A0E1 		mov	r2, r1
 3683 1924 0221A0E1 		mov	r2, r2, asl #2
 3684 1928 012082E0 		add	r2, r2, r1
 3685 192c 0232A0E1 		mov	r3, r2, asl #4
 3686 1930 033062E0 		rsb	r3, r2, r3
 3687 1934 0333A0E1 		mov	r3, r3, asl #6
 3688 1938 013083E0 		add	r3, r3, r1
 3689 193c 8331A0E1 		mov	r3, r3, asl #3
 3690 1940 14204BE2 		sub	r2, fp, #20
 3691 1944 033082E0 		add	r3, r2, r3
 3692 1948 0C3083E0 		add	r3, r3, ip
 3693 194c 003083E0 		add	r3, r3, r0
 3694 1950 0020A0E3 		mov	r2, #0
 3695 1954 0920C3E5 		strb	r2, [r3, #9]
 276:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 3696              		.loc 1 276 0
 3697 1958 B6115BE1 		ldrh	r1, [fp, #-22]
 3698 195c F0269FE5 		ldr	r2, .L21+4
 3699 1960 0430A0E3 		mov	r3, #4
 3700 1964 14004BE2 		sub	r0, fp, #20
 3701 1968 022080E0 		add	r2, r0, r2
 3702 196c 03C082E0 		add	ip, r2, r3
 3703 1970 960CA0E3 		mov	r0, #38400
 3704 1974 0120A0E1 		mov	r2, r1
 3705 1978 0221A0E1 		mov	r2, r2, asl #2
 3706 197c 012082E0 		add	r2, r2, r1
 3707 1980 0232A0E1 		mov	r3, r2, asl #4
 3708 1984 033062E0 		rsb	r3, r2, r3
 3709 1988 0333A0E1 		mov	r3, r3, asl #6
 3710 198c 013083E0 		add	r3, r3, r1
 3711 1990 8331A0E1 		mov	r3, r3, asl #3
 3712 1994 03308CE0 		add	r3, ip, r3
 3713 1998 003083E0 		add	r3, r3, r0
 3714 199c CC269FE5 		ldr	r2, .L21+32
 3715 19a0 002083E5 		str	r2, [r3, #0]
 277:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 3716              		.loc 1 277 0
 3717 19a4 B6115BE1 		ldrh	r1, [fp, #-22]
 3718 19a8 A4C69FE5 		ldr	ip, .L21+4
 3719 19ac 960CA0E3 		mov	r0, #38400
 3720 19b0 0120A0E1 		mov	r2, r1
 3721 19b4 0221A0E1 		mov	r2, r2, asl #2
 3722 19b8 012082E0 		add	r2, r2, r1
 3723 19bc 0232A0E1 		mov	r3, r2, asl #4
 3724 19c0 033062E0 		rsb	r3, r2, r3
 3725 19c4 0333A0E1 		mov	r3, r3, asl #6
 3726 19c8 013083E0 		add	r3, r3, r1
 3727 19cc 8331A0E1 		mov	r3, r3, asl #3
 3728 19d0 14104BE2 		sub	r1, fp, #20
 3729 19d4 033081E0 		add	r3, r1, r3
 3730 19d8 0C3083E0 		add	r3, r3, ip
 3731 19dc 003083E0 		add	r3, r3, r0
 3732 19e0 0420A0E3 		mov	r2, #4
 3733 19e4 0820C3E5 		strb	r2, [r3, #8]
 278:../proyecto.c **** 	i++;
 3734              		.loc 1 278 0
 3735 19e8 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3736 19ec 013083E2 		add	r3, r3, #1
 3737 19f0 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 279:../proyecto.c **** 
 280:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 3738              		.loc 1 280 0
 3739 19f4 B6015BE1 		ldrh	r0, [fp, #-22]
 3740 19f8 54169FE5 		ldr	r1, .L21+4
 3741 19fc 5D194BE2 		sub	r1, fp, #1523712
 3742 1a00 C51D41E2 		sub	r1, r1, #12608
 3743 1a04 201041E2 		sub	r1, r1, #32
 3744 1a08 0020A0E1 		mov	r2, r0
 3745 1a0c 0221A0E1 		mov	r2, r2, asl #2
 3746 1a10 002082E0 		add	r2, r2, r0
 3747 1a14 0232A0E1 		mov	r3, r2, asl #4
 3748 1a18 033062E0 		rsb	r3, r2, r3
 3749 1a1c 0333A0E1 		mov	r3, r3, asl #6
 3750 1a20 003083E0 		add	r3, r3, r0
 3751 1a24 8331A0E1 		mov	r3, r3, asl #3
 3752 1a28 033081E0 		add	r3, r1, r3
 3753 1a2c 043083E2 		add	r3, r3, #4
 3754 1a30 18069FE5 		ldr	r0, .L21
 3755 1a34 0310A0E1 		mov	r1, r3
 3756 1a38 FEFFFFEB 		bl	lcd_bmp2photo
 281:../proyecto.c **** 	album.pack[i].secs = 3;
 3757              		.loc 1 281 0
 3758 1a3c B6115BE1 		ldrh	r1, [fp, #-22]
 3759 1a40 0CC69FE5 		ldr	ip, .L21+4
 3760 1a44 960CA0E3 		mov	r0, #38400
 3761 1a48 0120A0E1 		mov	r2, r1
 3762 1a4c 0221A0E1 		mov	r2, r2, asl #2
 3763 1a50 012082E0 		add	r2, r2, r1
 3764 1a54 0232A0E1 		mov	r3, r2, asl #4
 3765 1a58 033062E0 		rsb	r3, r2, r3
 3766 1a5c 0333A0E1 		mov	r3, r3, asl #6
 3767 1a60 013083E0 		add	r3, r3, r1
 3768 1a64 8331A0E1 		mov	r3, r3, asl #3
 3769 1a68 14204BE2 		sub	r2, fp, #20
 3770 1a6c 033082E0 		add	r3, r2, r3
 3771 1a70 0C3083E0 		add	r3, r3, ip
 3772 1a74 003083E0 		add	r3, r3, r0
 3773 1a78 0320A0E3 		mov	r2, #3
 3774 1a7c 0920C3E5 		strb	r2, [r3, #9]
 282:../proyecto.c **** 	album.pack[i].effect = efectoDivisionSaliente;
 3775              		.loc 1 282 0
 3776 1a80 B6115BE1 		ldrh	r1, [fp, #-22]
 3777 1a84 C8259FE5 		ldr	r2, .L21+4
 3778 1a88 0430A0E3 		mov	r3, #4
 3779 1a8c 14004BE2 		sub	r0, fp, #20
 3780 1a90 022080E0 		add	r2, r0, r2
 3781 1a94 03C082E0 		add	ip, r2, r3
 3782 1a98 960CA0E3 		mov	r0, #38400
 3783 1a9c 0120A0E1 		mov	r2, r1
 3784 1aa0 0221A0E1 		mov	r2, r2, asl #2
 3785 1aa4 012082E0 		add	r2, r2, r1
 3786 1aa8 0232A0E1 		mov	r3, r2, asl #4
 3787 1aac 033062E0 		rsb	r3, r2, r3
 3788 1ab0 0333A0E1 		mov	r3, r3, asl #6
 3789 1ab4 013083E0 		add	r3, r3, r1
 3790 1ab8 8331A0E1 		mov	r3, r3, asl #3
 3791 1abc 03308CE0 		add	r3, ip, r3
 3792 1ac0 003083E0 		add	r3, r3, r0
 3793 1ac4 94259FE5 		ldr	r2, .L21+16
 3794 1ac8 002083E5 		str	r2, [r3, #0]
 283:../proyecto.c **** 	album.pack[i].sense = HORIZONTAL;
 3795              		.loc 1 283 0
 3796 1acc B6115BE1 		ldrh	r1, [fp, #-22]
 3797 1ad0 7CC59FE5 		ldr	ip, .L21+4
 3798 1ad4 960CA0E3 		mov	r0, #38400
 3799 1ad8 0120A0E1 		mov	r2, r1
 3800 1adc 0221A0E1 		mov	r2, r2, asl #2
 3801 1ae0 012082E0 		add	r2, r2, r1
 3802 1ae4 0232A0E1 		mov	r3, r2, asl #4
 3803 1ae8 033062E0 		rsb	r3, r2, r3
 3804 1aec 0333A0E1 		mov	r3, r3, asl #6
 3805 1af0 013083E0 		add	r3, r3, r1
 3806 1af4 8331A0E1 		mov	r3, r3, asl #3
 3807 1af8 14104BE2 		sub	r1, fp, #20
 3808 1afc 033081E0 		add	r3, r1, r3
 3809 1b00 0C3083E0 		add	r3, r3, ip
 3810 1b04 003083E0 		add	r3, r3, r0
 3811 1b08 0520A0E3 		mov	r2, #5
 3812 1b0c 0820C3E5 		strb	r2, [r3, #8]
 284:../proyecto.c **** 	i++;
 3813              		.loc 1 284 0
 3814 1b10 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3815 1b14 013083E2 		add	r3, r3, #1
 3816 1b18 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 285:../proyecto.c **** 
 286:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 3817              		.loc 1 286 0
 3818 1b1c B6015BE1 		ldrh	r0, [fp, #-22]
 3819 1b20 2C159FE5 		ldr	r1, .L21+4
 3820 1b24 5D194BE2 		sub	r1, fp, #1523712
 3821 1b28 C51D41E2 		sub	r1, r1, #12608
 3822 1b2c 201041E2 		sub	r1, r1, #32
 3823 1b30 0020A0E1 		mov	r2, r0
 3824 1b34 0221A0E1 		mov	r2, r2, asl #2
 3825 1b38 002082E0 		add	r2, r2, r0
 3826 1b3c 0232A0E1 		mov	r3, r2, asl #4
 3827 1b40 033062E0 		rsb	r3, r2, r3
 3828 1b44 0333A0E1 		mov	r3, r3, asl #6
 3829 1b48 003083E0 		add	r3, r3, r0
 3830 1b4c 8331A0E1 		mov	r3, r3, asl #3
 3831 1b50 033081E0 		add	r3, r1, r3
 3832 1b54 043083E2 		add	r3, r3, #4
 3833 1b58 0C059FE5 		ldr	r0, .L21+28
 3834 1b5c 0310A0E1 		mov	r1, r3
 3835 1b60 FEFFFFEB 		bl	lcd_bmp2photo
 287:../proyecto.c **** 	album.pack[i].secs = 0;
 3836              		.loc 1 287 0
 3837 1b64 B6115BE1 		ldrh	r1, [fp, #-22]
 3838 1b68 E4C49FE5 		ldr	ip, .L21+4
 3839 1b6c 960CA0E3 		mov	r0, #38400
 3840 1b70 0120A0E1 		mov	r2, r1
 3841 1b74 0221A0E1 		mov	r2, r2, asl #2
 3842 1b78 012082E0 		add	r2, r2, r1
 3843 1b7c 0232A0E1 		mov	r3, r2, asl #4
 3844 1b80 033062E0 		rsb	r3, r2, r3
 3845 1b84 0333A0E1 		mov	r3, r3, asl #6
 3846 1b88 013083E0 		add	r3, r3, r1
 3847 1b8c 8331A0E1 		mov	r3, r3, asl #3
 3848 1b90 14204BE2 		sub	r2, fp, #20
 3849 1b94 033082E0 		add	r3, r2, r3
 3850 1b98 0C3083E0 		add	r3, r3, ip
 3851 1b9c 003083E0 		add	r3, r3, r0
 3852 1ba0 0020A0E3 		mov	r2, #0
 3853 1ba4 0920C3E5 		strb	r2, [r3, #9]
 288:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 3854              		.loc 1 288 0
 3855 1ba8 B6115BE1 		ldrh	r1, [fp, #-22]
 3856 1bac A0249FE5 		ldr	r2, .L21+4
 3857 1bb0 0430A0E3 		mov	r3, #4
 3858 1bb4 14004BE2 		sub	r0, fp, #20
 3859 1bb8 022080E0 		add	r2, r0, r2
 3860 1bbc 03C082E0 		add	ip, r2, r3
 3861 1bc0 960CA0E3 		mov	r0, #38400
 3862 1bc4 0120A0E1 		mov	r2, r1
 3863 1bc8 0221A0E1 		mov	r2, r2, asl #2
 3864 1bcc 012082E0 		add	r2, r2, r1
 3865 1bd0 0232A0E1 		mov	r3, r2, asl #4
 3866 1bd4 033062E0 		rsb	r3, r2, r3
 3867 1bd8 0333A0E1 		mov	r3, r3, asl #6
 3868 1bdc 013083E0 		add	r3, r3, r1
 3869 1be0 8331A0E1 		mov	r3, r3, asl #3
 3870 1be4 03308CE0 		add	r3, ip, r3
 3871 1be8 003083E0 		add	r3, r3, r0
 3872 1bec 7C249FE5 		ldr	r2, .L21+32
 3873 1bf0 002083E5 		str	r2, [r3, #0]
 289:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 3874              		.loc 1 289 0
 3875 1bf4 B6115BE1 		ldrh	r1, [fp, #-22]
 3876 1bf8 54C49FE5 		ldr	ip, .L21+4
 3877 1bfc 960CA0E3 		mov	r0, #38400
 3878 1c00 0120A0E1 		mov	r2, r1
 3879 1c04 0221A0E1 		mov	r2, r2, asl #2
 3880 1c08 012082E0 		add	r2, r2, r1
 3881 1c0c 0232A0E1 		mov	r3, r2, asl #4
 3882 1c10 033062E0 		rsb	r3, r2, r3
 3883 1c14 0333A0E1 		mov	r3, r3, asl #6
 3884 1c18 013083E0 		add	r3, r3, r1
 3885 1c1c 8331A0E1 		mov	r3, r3, asl #3
 3886 1c20 14104BE2 		sub	r1, fp, #20
 3887 1c24 033081E0 		add	r3, r1, r3
 3888 1c28 0C3083E0 		add	r3, r3, ip
 3889 1c2c 003083E0 		add	r3, r3, r0
 3890 1c30 0420A0E3 		mov	r2, #4
 3891 1c34 0820C3E5 		strb	r2, [r3, #8]
 290:../proyecto.c **** 	i++;
 3892              		.loc 1 290 0
 3893 1c38 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3894 1c3c 013083E2 		add	r3, r3, #1
 3895 1c40 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 291:../proyecto.c **** 
 292:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 3896              		.loc 1 292 0
 3897 1c44 B6015BE1 		ldrh	r0, [fp, #-22]
 3898 1c48 04149FE5 		ldr	r1, .L21+4
 3899 1c4c 5D194BE2 		sub	r1, fp, #1523712
 3900 1c50 C51D41E2 		sub	r1, r1, #12608
 3901 1c54 201041E2 		sub	r1, r1, #32
 3902 1c58 0020A0E1 		mov	r2, r0
 3903 1c5c 0221A0E1 		mov	r2, r2, asl #2
 3904 1c60 002082E0 		add	r2, r2, r0
 3905 1c64 0232A0E1 		mov	r3, r2, asl #4
 3906 1c68 033062E0 		rsb	r3, r2, r3
 3907 1c6c 0333A0E1 		mov	r3, r3, asl #6
 3908 1c70 003083E0 		add	r3, r3, r0
 3909 1c74 8331A0E1 		mov	r3, r3, asl #3
 3910 1c78 033081E0 		add	r3, r1, r3
 3911 1c7c 043083E2 		add	r3, r3, #4
 3912 1c80 C8039FE5 		ldr	r0, .L21
 3913 1c84 0310A0E1 		mov	r1, r3
 3914 1c88 FEFFFFEB 		bl	lcd_bmp2photo
 293:../proyecto.c **** 	album.pack[i].secs = 3;
 3915              		.loc 1 293 0
 3916 1c8c B6115BE1 		ldrh	r1, [fp, #-22]
 3917 1c90 BCC39FE5 		ldr	ip, .L21+4
 3918 1c94 960CA0E3 		mov	r0, #38400
 3919 1c98 0120A0E1 		mov	r2, r1
 3920 1c9c 0221A0E1 		mov	r2, r2, asl #2
 3921 1ca0 012082E0 		add	r2, r2, r1
 3922 1ca4 0232A0E1 		mov	r3, r2, asl #4
 3923 1ca8 033062E0 		rsb	r3, r2, r3
 3924 1cac 0333A0E1 		mov	r3, r3, asl #6
 3925 1cb0 013083E0 		add	r3, r3, r1
 3926 1cb4 8331A0E1 		mov	r3, r3, asl #3
 3927 1cb8 14204BE2 		sub	r2, fp, #20
 3928 1cbc 033082E0 		add	r3, r2, r3
 3929 1cc0 0C3083E0 		add	r3, r3, ip
 3930 1cc4 003083E0 		add	r3, r3, r0
 3931 1cc8 0320A0E3 		mov	r2, #3
 3932 1ccc 0920C3E5 		strb	r2, [r3, #9]
 294:../proyecto.c **** 	album.pack[i].effect = efectoDivisionSaliente;
 3933              		.loc 1 294 0
 3934 1cd0 B6115BE1 		ldrh	r1, [fp, #-22]
 3935 1cd4 78239FE5 		ldr	r2, .L21+4
 3936 1cd8 0430A0E3 		mov	r3, #4
 3937 1cdc 14004BE2 		sub	r0, fp, #20
 3938 1ce0 022080E0 		add	r2, r0, r2
 3939 1ce4 03C082E0 		add	ip, r2, r3
 3940 1ce8 960CA0E3 		mov	r0, #38400
 3941 1cec 0120A0E1 		mov	r2, r1
 3942 1cf0 0221A0E1 		mov	r2, r2, asl #2
 3943 1cf4 012082E0 		add	r2, r2, r1
 3944 1cf8 0232A0E1 		mov	r3, r2, asl #4
 3945 1cfc 033062E0 		rsb	r3, r2, r3
 3946 1d00 0333A0E1 		mov	r3, r3, asl #6
 3947 1d04 013083E0 		add	r3, r3, r1
 3948 1d08 8331A0E1 		mov	r3, r3, asl #3
 3949 1d0c 03308CE0 		add	r3, ip, r3
 3950 1d10 003083E0 		add	r3, r3, r0
 3951 1d14 44239FE5 		ldr	r2, .L21+16
 3952 1d18 002083E5 		str	r2, [r3, #0]
 295:../proyecto.c **** 	album.pack[i].sense = VERTICAL;
 3953              		.loc 1 295 0
 3954 1d1c B6115BE1 		ldrh	r1, [fp, #-22]
 3955 1d20 2CC39FE5 		ldr	ip, .L21+4
 3956 1d24 960CA0E3 		mov	r0, #38400
 3957 1d28 0120A0E1 		mov	r2, r1
 3958 1d2c 0221A0E1 		mov	r2, r2, asl #2
 3959 1d30 012082E0 		add	r2, r2, r1
 3960 1d34 0232A0E1 		mov	r3, r2, asl #4
 3961 1d38 033062E0 		rsb	r3, r2, r3
 3962 1d3c 0333A0E1 		mov	r3, r3, asl #6
 3963 1d40 013083E0 		add	r3, r3, r1
 3964 1d44 8331A0E1 		mov	r3, r3, asl #3
 3965 1d48 14104BE2 		sub	r1, fp, #20
 3966 1d4c 033081E0 		add	r3, r1, r3
 3967 1d50 0C3083E0 		add	r3, r3, ip
 3968 1d54 003083E0 		add	r3, r3, r0
 3969 1d58 0620A0E3 		mov	r2, #6
 3970 1d5c 0820C3E5 		strb	r2, [r3, #8]
 296:../proyecto.c **** 	i++;
 3971              		.loc 1 296 0
 3972 1d60 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 3973 1d64 013083E2 		add	r3, r3, #1
 3974 1d68 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 297:../proyecto.c **** 
 298:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 3975              		.loc 1 298 0
 3976 1d6c B6015BE1 		ldrh	r0, [fp, #-22]
 3977 1d70 DC129FE5 		ldr	r1, .L21+4
 3978 1d74 5D194BE2 		sub	r1, fp, #1523712
 3979 1d78 C51D41E2 		sub	r1, r1, #12608
 3980 1d7c 201041E2 		sub	r1, r1, #32
 3981 1d80 0020A0E1 		mov	r2, r0
 3982 1d84 0221A0E1 		mov	r2, r2, asl #2
 3983 1d88 002082E0 		add	r2, r2, r0
 3984 1d8c 0232A0E1 		mov	r3, r2, asl #4
 3985 1d90 033062E0 		rsb	r3, r2, r3
 3986 1d94 0333A0E1 		mov	r3, r3, asl #6
 3987 1d98 003083E0 		add	r3, r3, r0
 3988 1d9c 8331A0E1 		mov	r3, r3, asl #3
 3989 1da0 033081E0 		add	r3, r1, r3
 3990 1da4 043083E2 		add	r3, r3, #4
 3991 1da8 BC029FE5 		ldr	r0, .L21+28
 3992 1dac 0310A0E1 		mov	r1, r3
 3993 1db0 FEFFFFEB 		bl	lcd_bmp2photo
 299:../proyecto.c **** 	album.pack[i].secs = 0;
 3994              		.loc 1 299 0
 3995 1db4 B6115BE1 		ldrh	r1, [fp, #-22]
 3996 1db8 94C29FE5 		ldr	ip, .L21+4
 3997 1dbc 960CA0E3 		mov	r0, #38400
 3998 1dc0 0120A0E1 		mov	r2, r1
 3999 1dc4 0221A0E1 		mov	r2, r2, asl #2
 4000 1dc8 012082E0 		add	r2, r2, r1
 4001 1dcc 0232A0E1 		mov	r3, r2, asl #4
 4002 1dd0 033062E0 		rsb	r3, r2, r3
 4003 1dd4 0333A0E1 		mov	r3, r3, asl #6
 4004 1dd8 013083E0 		add	r3, r3, r1
 4005 1ddc 8331A0E1 		mov	r3, r3, asl #3
 4006 1de0 14204BE2 		sub	r2, fp, #20
 4007 1de4 033082E0 		add	r3, r2, r3
 4008 1de8 0C3083E0 		add	r3, r3, ip
 4009 1dec 003083E0 		add	r3, r3, r0
 4010 1df0 0020A0E3 		mov	r2, #0
 4011 1df4 0920C3E5 		strb	r2, [r3, #9]
 300:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 4012              		.loc 1 300 0
 4013 1df8 B6115BE1 		ldrh	r1, [fp, #-22]
 4014 1dfc 50229FE5 		ldr	r2, .L21+4
 4015 1e00 0430A0E3 		mov	r3, #4
 4016 1e04 14004BE2 		sub	r0, fp, #20
 4017 1e08 022080E0 		add	r2, r0, r2
 4018 1e0c 03C082E0 		add	ip, r2, r3
 4019 1e10 960CA0E3 		mov	r0, #38400
 4020 1e14 0120A0E1 		mov	r2, r1
 4021 1e18 0221A0E1 		mov	r2, r2, asl #2
 4022 1e1c 012082E0 		add	r2, r2, r1
 4023 1e20 0232A0E1 		mov	r3, r2, asl #4
 4024 1e24 033062E0 		rsb	r3, r2, r3
 4025 1e28 0333A0E1 		mov	r3, r3, asl #6
 4026 1e2c 013083E0 		add	r3, r3, r1
 4027 1e30 8331A0E1 		mov	r3, r3, asl #3
 4028 1e34 03308CE0 		add	r3, ip, r3
 4029 1e38 003083E0 		add	r3, r3, r0
 4030 1e3c 2C229FE5 		ldr	r2, .L21+32
 4031 1e40 002083E5 		str	r2, [r3, #0]
 301:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 4032              		.loc 1 301 0
 4033 1e44 B6115BE1 		ldrh	r1, [fp, #-22]
 4034 1e48 04C29FE5 		ldr	ip, .L21+4
 4035 1e4c 960CA0E3 		mov	r0, #38400
 4036 1e50 0120A0E1 		mov	r2, r1
 4037 1e54 0221A0E1 		mov	r2, r2, asl #2
 4038 1e58 012082E0 		add	r2, r2, r1
 4039 1e5c 0232A0E1 		mov	r3, r2, asl #4
 4040 1e60 033062E0 		rsb	r3, r2, r3
 4041 1e64 0333A0E1 		mov	r3, r3, asl #6
 4042 1e68 013083E0 		add	r3, r3, r1
 4043 1e6c 8331A0E1 		mov	r3, r3, asl #3
 4044 1e70 14104BE2 		sub	r1, fp, #20
 4045 1e74 033081E0 		add	r3, r1, r3
 4046 1e78 0C3083E0 		add	r3, r3, ip
 4047 1e7c 003083E0 		add	r3, r3, r0
 4048 1e80 0420A0E3 		mov	r2, #4
 4049 1e84 0820C3E5 		strb	r2, [r3, #8]
 302:../proyecto.c **** 	i++;
 4050              		.loc 1 302 0
 4051 1e88 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4052 1e8c 013083E2 		add	r3, r3, #1
 4053 1e90 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 303:../proyecto.c **** 
 304:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 4054              		.loc 1 304 0
 4055 1e94 B6015BE1 		ldrh	r0, [fp, #-22]
 4056 1e98 B4119FE5 		ldr	r1, .L21+4
 4057 1e9c 5D194BE2 		sub	r1, fp, #1523712
 4058 1ea0 C51D41E2 		sub	r1, r1, #12608
 4059 1ea4 201041E2 		sub	r1, r1, #32
 4060 1ea8 0020A0E1 		mov	r2, r0
 4061 1eac 0221A0E1 		mov	r2, r2, asl #2
 4062 1eb0 002082E0 		add	r2, r2, r0
 4063 1eb4 0232A0E1 		mov	r3, r2, asl #4
 4064 1eb8 033062E0 		rsb	r3, r2, r3
 4065 1ebc 0333A0E1 		mov	r3, r3, asl #6
 4066 1ec0 003083E0 		add	r3, r3, r0
 4067 1ec4 8331A0E1 		mov	r3, r3, asl #3
 4068 1ec8 033081E0 		add	r3, r1, r3
 4069 1ecc 043083E2 		add	r3, r3, #4
 4070 1ed0 78019FE5 		ldr	r0, .L21
 4071 1ed4 0310A0E1 		mov	r1, r3
 4072 1ed8 FEFFFFEB 		bl	lcd_bmp2photo
 305:../proyecto.c **** 	album.pack[i].secs = 3;
 4073              		.loc 1 305 0
 4074 1edc B6115BE1 		ldrh	r1, [fp, #-22]
 4075 1ee0 6CC19FE5 		ldr	ip, .L21+4
 4076 1ee4 960CA0E3 		mov	r0, #38400
 4077 1ee8 0120A0E1 		mov	r2, r1
 4078 1eec 0221A0E1 		mov	r2, r2, asl #2
 4079 1ef0 012082E0 		add	r2, r2, r1
 4080 1ef4 0232A0E1 		mov	r3, r2, asl #4
 4081 1ef8 033062E0 		rsb	r3, r2, r3
 4082 1efc 0333A0E1 		mov	r3, r3, asl #6
 4083 1f00 013083E0 		add	r3, r3, r1
 4084 1f04 8331A0E1 		mov	r3, r3, asl #3
 4085 1f08 14204BE2 		sub	r2, fp, #20
 4086 1f0c 033082E0 		add	r3, r2, r3
 4087 1f10 0C3083E0 		add	r3, r3, ip
 4088 1f14 003083E0 		add	r3, r3, r0
 4089 1f18 0320A0E3 		mov	r2, #3
 4090 1f1c 0920C3E5 		strb	r2, [r3, #9]
 306:../proyecto.c **** 	album.pack[i].effect = efectoBarras;
 4091              		.loc 1 306 0
 4092 1f20 B6115BE1 		ldrh	r1, [fp, #-22]
 4093 1f24 28219FE5 		ldr	r2, .L21+4
 4094 1f28 0430A0E3 		mov	r3, #4
 4095 1f2c 14004BE2 		sub	r0, fp, #20
 4096 1f30 022080E0 		add	r2, r0, r2
 4097 1f34 03C082E0 		add	ip, r2, r3
 4098 1f38 960CA0E3 		mov	r0, #38400
 4099 1f3c 0120A0E1 		mov	r2, r1
 4100 1f40 0221A0E1 		mov	r2, r2, asl #2
 4101 1f44 012082E0 		add	r2, r2, r1
 4102 1f48 0232A0E1 		mov	r3, r2, asl #4
 4103 1f4c 033062E0 		rsb	r3, r2, r3
 4104 1f50 0333A0E1 		mov	r3, r3, asl #6
 4105 1f54 013083E0 		add	r3, r3, r1
 4106 1f58 8331A0E1 		mov	r3, r3, asl #3
 4107 1f5c 03308CE0 		add	r3, ip, r3
 4108 1f60 003083E0 		add	r3, r3, r0
 4109 1f64 F8209FE5 		ldr	r2, .L21+20
 4110 1f68 002083E5 		str	r2, [r3, #0]
 307:../proyecto.c **** 	album.pack[i].sense = HORIZONTAL;
 4111              		.loc 1 307 0
 4112 1f6c B6115BE1 		ldrh	r1, [fp, #-22]
 4113 1f70 DCC09FE5 		ldr	ip, .L21+4
 4114 1f74 960CA0E3 		mov	r0, #38400
 4115 1f78 0120A0E1 		mov	r2, r1
 4116 1f7c 0221A0E1 		mov	r2, r2, asl #2
 4117 1f80 012082E0 		add	r2, r2, r1
 4118 1f84 0232A0E1 		mov	r3, r2, asl #4
 4119 1f88 033062E0 		rsb	r3, r2, r3
 4120 1f8c 0333A0E1 		mov	r3, r3, asl #6
 4121 1f90 013083E0 		add	r3, r3, r1
 4122 1f94 8331A0E1 		mov	r3, r3, asl #3
 4123 1f98 14104BE2 		sub	r1, fp, #20
 4124 1f9c 033081E0 		add	r3, r1, r3
 4125 1fa0 0C3083E0 		add	r3, r3, ip
 4126 1fa4 003083E0 		add	r3, r3, r0
 4127 1fa8 0520A0E3 		mov	r2, #5
 4128 1fac 0820C3E5 		strb	r2, [r3, #8]
 308:../proyecto.c **** 	i++;
 4129              		.loc 1 308 0
 4130 1fb0 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4131 1fb4 013083E2 		add	r3, r3, #1
 4132 1fb8 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 309:../proyecto.c **** 
 310:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 4133              		.loc 1 310 0
 4134 1fbc B6015BE1 		ldrh	r0, [fp, #-22]
 4135 1fc0 8C109FE5 		ldr	r1, .L21+4
 4136 1fc4 5D194BE2 		sub	r1, fp, #1523712
 4137 1fc8 C51D41E2 		sub	r1, r1, #12608
 4138 1fcc 201041E2 		sub	r1, r1, #32
 4139 1fd0 0020A0E1 		mov	r2, r0
 4140 1fd4 0221A0E1 		mov	r2, r2, asl #2
 4141 1fd8 002082E0 		add	r2, r2, r0
 4142 1fdc 0232A0E1 		mov	r3, r2, asl #4
 4143 1fe0 033062E0 		rsb	r3, r2, r3
 4144 1fe4 0333A0E1 		mov	r3, r3, asl #6
 4145 1fe8 003083E0 		add	r3, r3, r0
 4146 1fec 8331A0E1 		mov	r3, r3, asl #3
 4147 1ff0 033081E0 		add	r3, r1, r3
 4148 1ff4 043083E2 		add	r3, r3, #4
 4149 1ff8 6C009FE5 		ldr	r0, .L21+28
 4150 1ffc 0310A0E1 		mov	r1, r3
 4151 2000 FEFFFFEB 		bl	lcd_bmp2photo
 311:../proyecto.c **** 	album.pack[i].secs = 0;
 4152              		.loc 1 311 0
 4153 2004 B6115BE1 		ldrh	r1, [fp, #-22]
 4154 2008 44C09FE5 		ldr	ip, .L21+4
 4155 200c 960CA0E3 		mov	r0, #38400
 4156 2010 0120A0E1 		mov	r2, r1
 4157 2014 0221A0E1 		mov	r2, r2, asl #2
 4158 2018 012082E0 		add	r2, r2, r1
 4159 201c 0232A0E1 		mov	r3, r2, asl #4
 4160 2020 033062E0 		rsb	r3, r2, r3
 4161 2024 0333A0E1 		mov	r3, r3, asl #6
 4162 2028 013083E0 		add	r3, r3, r1
 4163 202c 8331A0E1 		mov	r3, r3, asl #3
 4164 2030 14204BE2 		sub	r2, fp, #20
 4165 2034 033082E0 		add	r3, r2, r3
 4166 2038 0C3083E0 		add	r3, r3, ip
 4167 203c 003083E0 		add	r3, r3, r0
 4168 2040 0020A0E3 		mov	r2, #0
 4169 2044 0920C3E5 		strb	r2, [r3, #9]
 312:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 4170              		.loc 1 312 0
 4171 2048 B6115BE1 		ldrh	r1, [fp, #-22]
 4172 204c 0C0000EA 		b	.L22
 4173              	.L23:
 4174              		.align	2
 4175              	.L21:
 4176 2050 0000220C 		.word	203554816
 4177 2054 B48EE8FF 		.word	-1536332
 4178 2058 00000000 		.word	efectoCobertura
 4179 205c 00000000 		.word	efectoDivisionEntrante
 4180 2060 00000000 		.word	efectoDivisionSaliente
 4181 2064 00000000 		.word	efectoBarras
 4182 2068 00000000 		.word	efectoDesvanecer
 4183 206c 0000210C 		.word	203489280
 4184 2070 00000000 		.word	efectoNulo
 4185 2074 0000220C 		.word	203554816
 4186 2078 00000000 		.word	efectoFlash
 4187 207c AC000000 		.word	.LC6
 4188 2080 B48EE8FF 		.word	-1536332
 4189              	.L22:
 4190 2084 0C201FE5 		ldr	r2, .L21+48
 4191 2088 0430A0E3 		mov	r3, #4
 4192 208c 14004BE2 		sub	r0, fp, #20
 4193 2090 022080E0 		add	r2, r0, r2
 4194 2094 03C082E0 		add	ip, r2, r3
 4195 2098 960CA0E3 		mov	r0, #38400
 4196 209c 0120A0E1 		mov	r2, r1
 4197 20a0 0221A0E1 		mov	r2, r2, asl #2
 4198 20a4 012082E0 		add	r2, r2, r1
 4199 20a8 0232A0E1 		mov	r3, r2, asl #4
 4200 20ac 033062E0 		rsb	r3, r2, r3
 4201 20b0 0333A0E1 		mov	r3, r3, asl #6
 4202 20b4 013083E0 		add	r3, r3, r1
 4203 20b8 8331A0E1 		mov	r3, r3, asl #3
 4204 20bc 03308CE0 		add	r3, ip, r3
 4205 20c0 003083E0 		add	r3, r3, r0
 4206 20c4 5C201FE5 		ldr	r2, .L21+32
 4207 20c8 002083E5 		str	r2, [r3, #0]
 313:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 4208              		.loc 1 313 0
 4209 20cc B6115BE1 		ldrh	r1, [fp, #-22]
 4210 20d0 58C01FE5 		ldr	ip, .L21+48
 4211 20d4 960CA0E3 		mov	r0, #38400
 4212 20d8 0120A0E1 		mov	r2, r1
 4213 20dc 0221A0E1 		mov	r2, r2, asl #2
 4214 20e0 012082E0 		add	r2, r2, r1
 4215 20e4 0232A0E1 		mov	r3, r2, asl #4
 4216 20e8 033062E0 		rsb	r3, r2, r3
 4217 20ec 0333A0E1 		mov	r3, r3, asl #6
 4218 20f0 013083E0 		add	r3, r3, r1
 4219 20f4 8331A0E1 		mov	r3, r3, asl #3
 4220 20f8 14104BE2 		sub	r1, fp, #20
 4221 20fc 033081E0 		add	r3, r1, r3
 4222 2100 0C3083E0 		add	r3, r3, ip
 4223 2104 003083E0 		add	r3, r3, r0
 4224 2108 0420A0E3 		mov	r2, #4
 4225 210c 0820C3E5 		strb	r2, [r3, #8]
 314:../proyecto.c **** 	i++;
 4226              		.loc 1 314 0
 4227 2110 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4228 2114 013083E2 		add	r3, r3, #1
 4229 2118 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 315:../proyecto.c **** 
 316:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 4230              		.loc 1 316 0
 4231 211c B6015BE1 		ldrh	r0, [fp, #-22]
 4232 2120 A8101FE5 		ldr	r1, .L21+48
 4233 2124 5D194BE2 		sub	r1, fp, #1523712
 4234 2128 C51D41E2 		sub	r1, r1, #12608
 4235 212c 201041E2 		sub	r1, r1, #32
 4236 2130 0020A0E1 		mov	r2, r0
 4237 2134 0221A0E1 		mov	r2, r2, asl #2
 4238 2138 002082E0 		add	r2, r2, r0
 4239 213c 0232A0E1 		mov	r3, r2, asl #4
 4240 2140 033062E0 		rsb	r3, r2, r3
 4241 2144 0333A0E1 		mov	r3, r3, asl #6
 4242 2148 003083E0 		add	r3, r3, r0
 4243 214c 8331A0E1 		mov	r3, r3, asl #3
 4244 2150 033081E0 		add	r3, r1, r3
 4245 2154 043083E2 		add	r3, r3, #4
 4246 2158 EC001FE5 		ldr	r0, .L21+36
 4247 215c 0310A0E1 		mov	r1, r3
 4248 2160 FEFFFFEB 		bl	lcd_bmp2photo
 317:../proyecto.c **** 	album.pack[i].secs = 3;
 4249              		.loc 1 317 0
 4250 2164 B6115BE1 		ldrh	r1, [fp, #-22]
 4251 2168 F0C01FE5 		ldr	ip, .L21+48
 4252 216c 960CA0E3 		mov	r0, #38400
 4253 2170 0120A0E1 		mov	r2, r1
 4254 2174 0221A0E1 		mov	r2, r2, asl #2
 4255 2178 012082E0 		add	r2, r2, r1
 4256 217c 0232A0E1 		mov	r3, r2, asl #4
 4257 2180 033062E0 		rsb	r3, r2, r3
 4258 2184 0333A0E1 		mov	r3, r3, asl #6
 4259 2188 013083E0 		add	r3, r3, r1
 4260 218c 8331A0E1 		mov	r3, r3, asl #3
 4261 2190 14204BE2 		sub	r2, fp, #20
 4262 2194 033082E0 		add	r3, r2, r3
 4263 2198 0C3083E0 		add	r3, r3, ip
 4264 219c 003083E0 		add	r3, r3, r0
 4265 21a0 0320A0E3 		mov	r2, #3
 4266 21a4 0920C3E5 		strb	r2, [r3, #9]
 318:../proyecto.c **** 	album.pack[i].effect = efectoDesvanecer;
 4267              		.loc 1 318 0
 4268 21a8 B6115BE1 		ldrh	r1, [fp, #-22]
 4269 21ac 34211FE5 		ldr	r2, .L21+48
 4270 21b0 0430A0E3 		mov	r3, #4
 4271 21b4 14004BE2 		sub	r0, fp, #20
 4272 21b8 022080E0 		add	r2, r0, r2
 4273 21bc 03C082E0 		add	ip, r2, r3
 4274 21c0 960CA0E3 		mov	r0, #38400
 4275 21c4 0120A0E1 		mov	r2, r1
 4276 21c8 0221A0E1 		mov	r2, r2, asl #2
 4277 21cc 012082E0 		add	r2, r2, r1
 4278 21d0 0232A0E1 		mov	r3, r2, asl #4
 4279 21d4 033062E0 		rsb	r3, r2, r3
 4280 21d8 0333A0E1 		mov	r3, r3, asl #6
 4281 21dc 013083E0 		add	r3, r3, r1
 4282 21e0 8331A0E1 		mov	r3, r3, asl #3
 4283 21e4 03308CE0 		add	r3, ip, r3
 4284 21e8 003083E0 		add	r3, r3, r0
 4285 21ec 8C211FE5 		ldr	r2, .L21+24
 4286 21f0 002083E5 		str	r2, [r3, #0]
 319:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 4287              		.loc 1 319 0
 4288 21f4 B6115BE1 		ldrh	r1, [fp, #-22]
 4289 21f8 80C11FE5 		ldr	ip, .L21+48
 4290 21fc 960CA0E3 		mov	r0, #38400
 4291 2200 0120A0E1 		mov	r2, r1
 4292 2204 0221A0E1 		mov	r2, r2, asl #2
 4293 2208 012082E0 		add	r2, r2, r1
 4294 220c 0232A0E1 		mov	r3, r2, asl #4
 4295 2210 033062E0 		rsb	r3, r2, r3
 4296 2214 0333A0E1 		mov	r3, r3, asl #6
 4297 2218 013083E0 		add	r3, r3, r1
 4298 221c 8331A0E1 		mov	r3, r3, asl #3
 4299 2220 14104BE2 		sub	r1, fp, #20
 4300 2224 033081E0 		add	r3, r1, r3
 4301 2228 0C3083E0 		add	r3, r3, ip
 4302 222c 003083E0 		add	r3, r3, r0
 4303 2230 0420A0E3 		mov	r2, #4
 4304 2234 0820C3E5 		strb	r2, [r3, #8]
 320:../proyecto.c **** 	i++;
 4305              		.loc 1 320 0
 4306 2238 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4307 223c 013083E2 		add	r3, r3, #1
 4308 2240 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 321:../proyecto.c **** 
 322:../proyecto.c **** 	lcd_bmp2photo( ARBOL, album.pack[i].photo );
 4309              		.loc 1 322 0
 4310 2244 B6015BE1 		ldrh	r0, [fp, #-22]
 4311 2248 D0111FE5 		ldr	r1, .L21+48
 4312 224c 5D194BE2 		sub	r1, fp, #1523712
 4313 2250 C51D41E2 		sub	r1, r1, #12608
 4314 2254 201041E2 		sub	r1, r1, #32
 4315 2258 0020A0E1 		mov	r2, r0
 4316 225c 0221A0E1 		mov	r2, r2, asl #2
 4317 2260 002082E0 		add	r2, r2, r0
 4318 2264 0232A0E1 		mov	r3, r2, asl #4
 4319 2268 033062E0 		rsb	r3, r2, r3
 4320 226c 0333A0E1 		mov	r3, r3, asl #6
 4321 2270 003083E0 		add	r3, r3, r0
 4322 2274 8331A0E1 		mov	r3, r3, asl #3
 4323 2278 033081E0 		add	r3, r1, r3
 4324 227c 043083E2 		add	r3, r3, #4
 4325 2280 1C021FE5 		ldr	r0, .L21+28
 4326 2284 0310A0E1 		mov	r1, r3
 4327 2288 FEFFFFEB 		bl	lcd_bmp2photo
 323:../proyecto.c **** 	album.pack[i].secs = 0;
 4328              		.loc 1 323 0
 4329 228c B6115BE1 		ldrh	r1, [fp, #-22]
 4330 2290 18C21FE5 		ldr	ip, .L21+48
 4331 2294 960CA0E3 		mov	r0, #38400
 4332 2298 0120A0E1 		mov	r2, r1
 4333 229c 0221A0E1 		mov	r2, r2, asl #2
 4334 22a0 012082E0 		add	r2, r2, r1
 4335 22a4 0232A0E1 		mov	r3, r2, asl #4
 4336 22a8 033062E0 		rsb	r3, r2, r3
 4337 22ac 0333A0E1 		mov	r3, r3, asl #6
 4338 22b0 013083E0 		add	r3, r3, r1
 4339 22b4 8331A0E1 		mov	r3, r3, asl #3
 4340 22b8 14204BE2 		sub	r2, fp, #20
 4341 22bc 033082E0 		add	r3, r2, r3
 4342 22c0 0C3083E0 		add	r3, r3, ip
 4343 22c4 003083E0 		add	r3, r3, r0
 4344 22c8 0020A0E3 		mov	r2, #0
 4345 22cc 0920C3E5 		strb	r2, [r3, #9]
 324:../proyecto.c **** 	album.pack[i].effect = efectoNulo;
 4346              		.loc 1 324 0
 4347 22d0 B6115BE1 		ldrh	r1, [fp, #-22]
 4348 22d4 5C221FE5 		ldr	r2, .L21+48
 4349 22d8 0430A0E3 		mov	r3, #4
 4350 22dc 14004BE2 		sub	r0, fp, #20
 4351 22e0 022080E0 		add	r2, r0, r2
 4352 22e4 03C082E0 		add	ip, r2, r3
 4353 22e8 960CA0E3 		mov	r0, #38400
 4354 22ec 0120A0E1 		mov	r2, r1
 4355 22f0 0221A0E1 		mov	r2, r2, asl #2
 4356 22f4 012082E0 		add	r2, r2, r1
 4357 22f8 0232A0E1 		mov	r3, r2, asl #4
 4358 22fc 033062E0 		rsb	r3, r2, r3
 4359 2300 0333A0E1 		mov	r3, r3, asl #6
 4360 2304 013083E0 		add	r3, r3, r1
 4361 2308 8331A0E1 		mov	r3, r3, asl #3
 4362 230c 03308CE0 		add	r3, ip, r3
 4363 2310 003083E0 		add	r3, r3, r0
 4364 2314 AC221FE5 		ldr	r2, .L21+32
 4365 2318 002083E5 		str	r2, [r3, #0]
 325:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 4366              		.loc 1 325 0
 4367 231c B6115BE1 		ldrh	r1, [fp, #-22]
 4368 2320 A8C21FE5 		ldr	ip, .L21+48
 4369 2324 960CA0E3 		mov	r0, #38400
 4370 2328 0120A0E1 		mov	r2, r1
 4371 232c 0221A0E1 		mov	r2, r2, asl #2
 4372 2330 012082E0 		add	r2, r2, r1
 4373 2334 0232A0E1 		mov	r3, r2, asl #4
 4374 2338 033062E0 		rsb	r3, r2, r3
 4375 233c 0333A0E1 		mov	r3, r3, asl #6
 4376 2340 013083E0 		add	r3, r3, r1
 4377 2344 8331A0E1 		mov	r3, r3, asl #3
 4378 2348 14104BE2 		sub	r1, fp, #20
 4379 234c 033081E0 		add	r3, r1, r3
 4380 2350 0C3083E0 		add	r3, r3, ip
 4381 2354 003083E0 		add	r3, r3, r0
 4382 2358 0420A0E3 		mov	r2, #4
 4383 235c 0820C3E5 		strb	r2, [r3, #8]
 326:../proyecto.c **** 	i++;
 4384              		.loc 1 326 0
 4385 2360 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4386 2364 013083E2 		add	r3, r3, #1
 4387 2368 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 327:../proyecto.c **** 
 328:../proyecto.c **** 	lcd_bmp2photo( PICACHU, album.pack[i].photo );
 4388              		.loc 1 328 0
 4389 236c B6015BE1 		ldrh	r0, [fp, #-22]
 4390 2370 F8121FE5 		ldr	r1, .L21+48
 4391 2374 5D194BE2 		sub	r1, fp, #1523712
 4392 2378 C51D41E2 		sub	r1, r1, #12608
 4393 237c 201041E2 		sub	r1, r1, #32
 4394 2380 0020A0E1 		mov	r2, r0
 4395 2384 0221A0E1 		mov	r2, r2, asl #2
 4396 2388 002082E0 		add	r2, r2, r0
 4397 238c 0232A0E1 		mov	r3, r2, asl #4
 4398 2390 033062E0 		rsb	r3, r2, r3
 4399 2394 0333A0E1 		mov	r3, r3, asl #6
 4400 2398 003083E0 		add	r3, r3, r0
 4401 239c 8331A0E1 		mov	r3, r3, asl #3
 4402 23a0 033081E0 		add	r3, r1, r3
 4403 23a4 043083E2 		add	r3, r3, #4
 4404 23a8 3C031FE5 		ldr	r0, .L21+36
 4405 23ac 0310A0E1 		mov	r1, r3
 4406 23b0 FEFFFFEB 		bl	lcd_bmp2photo
 329:../proyecto.c **** 	album.pack[i].secs = 3;
 4407              		.loc 1 329 0
 4408 23b4 B6115BE1 		ldrh	r1, [fp, #-22]
 4409 23b8 40C31FE5 		ldr	ip, .L21+48
 4410 23bc 960CA0E3 		mov	r0, #38400
 4411 23c0 0120A0E1 		mov	r2, r1
 4412 23c4 0221A0E1 		mov	r2, r2, asl #2
 4413 23c8 012082E0 		add	r2, r2, r1
 4414 23cc 0232A0E1 		mov	r3, r2, asl #4
 4415 23d0 033062E0 		rsb	r3, r2, r3
 4416 23d4 0333A0E1 		mov	r3, r3, asl #6
 4417 23d8 013083E0 		add	r3, r3, r1
 4418 23dc 8331A0E1 		mov	r3, r3, asl #3
 4419 23e0 14204BE2 		sub	r2, fp, #20
 4420 23e4 033082E0 		add	r3, r2, r3
 4421 23e8 0C3083E0 		add	r3, r3, ip
 4422 23ec 003083E0 		add	r3, r3, r0
 4423 23f0 0320A0E3 		mov	r2, #3
 4424 23f4 0920C3E5 		strb	r2, [r3, #9]
 330:../proyecto.c **** 	album.pack[i].effect = efectoFlash;
 4425              		.loc 1 330 0
 4426 23f8 B6115BE1 		ldrh	r1, [fp, #-22]
 4427 23fc 84231FE5 		ldr	r2, .L21+48
 4428 2400 0430A0E3 		mov	r3, #4
 4429 2404 14004BE2 		sub	r0, fp, #20
 4430 2408 022080E0 		add	r2, r0, r2
 4431 240c 03C082E0 		add	ip, r2, r3
 4432 2410 960CA0E3 		mov	r0, #38400
 4433 2414 0120A0E1 		mov	r2, r1
 4434 2418 0221A0E1 		mov	r2, r2, asl #2
 4435 241c 012082E0 		add	r2, r2, r1
 4436 2420 0232A0E1 		mov	r3, r2, asl #4
 4437 2424 033062E0 		rsb	r3, r2, r3
 4438 2428 0333A0E1 		mov	r3, r3, asl #6
 4439 242c 013083E0 		add	r3, r3, r1
 4440 2430 8331A0E1 		mov	r3, r3, asl #3
 4441 2434 03308CE0 		add	r3, ip, r3
 4442 2438 003083E0 		add	r3, r3, r0
 4443 243c CC231FE5 		ldr	r2, .L21+40
 4444 2440 002083E5 		str	r2, [r3, #0]
 331:../proyecto.c **** 	album.pack[i].sense = NO_APPLY;
 4445              		.loc 1 331 0
 4446 2444 B6115BE1 		ldrh	r1, [fp, #-22]
 4447 2448 D0C31FE5 		ldr	ip, .L21+48
 4448 244c 960CA0E3 		mov	r0, #38400
 4449 2450 0120A0E1 		mov	r2, r1
 4450 2454 0221A0E1 		mov	r2, r2, asl #2
 4451 2458 012082E0 		add	r2, r2, r1
 4452 245c 0232A0E1 		mov	r3, r2, asl #4
 4453 2460 033062E0 		rsb	r3, r2, r3
 4454 2464 0333A0E1 		mov	r3, r3, asl #6
 4455 2468 013083E0 		add	r3, r3, r1
 4456 246c 8331A0E1 		mov	r3, r3, asl #3
 4457 2470 14104BE2 		sub	r1, fp, #20
 4458 2474 033081E0 		add	r3, r1, r3
 4459 2478 0C3083E0 		add	r3, r3, ip
 4460 247c 003083E0 		add	r3, r3, r0
 4461 2480 0420A0E3 		mov	r2, #4
 4462 2484 0820C3E5 		strb	r2, [r3, #8]
 332:../proyecto.c **** 	i++;
 4463              		.loc 1 332 0
 4464 2488 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4465 248c 013083E2 		add	r3, r3, #1
 4466 2490 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 333:../proyecto.c **** 
 334:../proyecto.c **** 	album.numPacks = i;
 4467              		.loc 1 334 0
 4468 2494 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4469 2498 FF2003E2 		and	r2, r3, #255
 4470 249c 24341FE5 		ldr	r3, .L21+48
 4471 24a0 14004BE2 		sub	r0, fp, #20
 4472 24a4 0320C0E7 		strb	r2, [r0, r3]
 335:../proyecto.c **** 	// Carrusel de fotos demostrando que solo los efectos por DMA hacen transiciones aceptables
 336:../proyecto.c **** 
 337:../proyecto.c **** 	i = 0;
 4473              		.loc 1 337 0
 4474 24a8 0030A0E3 		mov	r3, #0
 4475 24ac B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 338:../proyecto.c **** 	if (modo == 0){
 4476              		.loc 1 338 0
 4477 24b0 B8315BE1 		ldrh	r3, [fp, #-24]
 4478 24b4 000053E3 		cmp	r3, #0
 4479 24b8 0500001A 		bne	.L7
 339:../proyecto.c **** 		lcd_clear();
 4480              		.loc 1 339 0
 4481 24bc FEFFFFEB 		bl	lcd_clear
 340:../proyecto.c **** 		lcd_puts( 20, 130, BLACK, "Presione 0 para comenzar: " );
 4482              		.loc 1 340 0
 4483 24c0 1400A0E3 		mov	r0, #20
 4484 24c4 8210A0E3 		mov	r1, #130
 4485 24c8 0F20A0E3 		mov	r2, #15
 4486 24cc 58341FE5 		ldr	r3, .L21+44
 4487 24d0 FEFFFFEB 		bl	lcd_puts
 4488              	.L7:
 341:../proyecto.c **** 	}
 342:../proyecto.c **** 	while( 1 )
 343:../proyecto.c **** 	{
 344:../proyecto.c **** 		if (keypad_pressed()){
 4489              		.loc 1 344 0
 4490 24d4 FEFFFFEB 		bl	keypad_pressed
 4491 24d8 0030A0E1 		mov	r3, r0
 4492 24dc 000053E3 		cmp	r3, #0
 4493 24e0 0200000A 		beq	.L8
 345:../proyecto.c **** 			scancode = keypad_getchar();
 4494              		.loc 1 345 0
 4495 24e4 FEFFFFEB 		bl	keypad_getchar
 4496 24e8 0030A0E1 		mov	r3, r0
 4497 24ec 1B304BE5 		strb	r3, [fp, #-27]
 4498              	.L8:
 346:../proyecto.c **** 		}
 347:../proyecto.c **** 
 348:../proyecto.c **** 		if (modo == 1 && scancode == KEYPAD_KEY0 && i % 2 == 0){
 4499              		.loc 1 348 0
 4500 24f0 B8315BE1 		ldrh	r3, [fp, #-24]
 4501 24f4 010053E3 		cmp	r3, #1
 4502 24f8 0B00001A 		bne	.L9
 4503              		.loc 1 348 0 is_stmt 0 discriminator 1
 4504 24fc 1B305BE5 		ldrb	r3, [fp, #-27]	@ zero_extendqisi2
 4505 2500 000053E3 		cmp	r3, #0
 4506 2504 0800001A 		bne	.L9
 4507 2508 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4508 250c 013003E2 		and	r3, r3, #1
 4509 2510 0338A0E1 		mov	r3, r3, asl #16
 4510 2514 2338A0E1 		mov	r3, r3, lsr #16
 4511 2518 000053E3 		cmp	r3, #0
 4512 251c 0200001A 		bne	.L9
 349:../proyecto.c **** 			modo = 0;
 4513              		.loc 1 349 0 is_stmt 1
 4514 2520 0030A0E3 		mov	r3, #0
 4515 2524 B8314BE1 		strh	r3, [fp, #-24]	@ movhi
 4516 2528 200000EA 		b	.L10
 4517              	.L9:
 350:../proyecto.c **** 		}
 351:../proyecto.c **** 		else if (modo == 0 && i % 2 == 0){
 4518              		.loc 1 351 0
 4519 252c B8315BE1 		ldrh	r3, [fp, #-24]
 4520 2530 000053E3 		cmp	r3, #0
 4521 2534 1D00001A 		bne	.L10
 4522              		.loc 1 351 0 is_stmt 0 discriminator 1
 4523 2538 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4524 253c 013003E2 		and	r3, r3, #1
 4525 2540 0338A0E1 		mov	r3, r3, asl #16
 4526 2544 2338A0E1 		mov	r3, r3, lsr #16
 4527 2548 000053E3 		cmp	r3, #0
 4528 254c 1700001A 		bne	.L10
 352:../proyecto.c **** 			scancode = keypad_getchar();
 4529              		.loc 1 352 0 is_stmt 1
 4530 2550 FEFFFFEB 		bl	keypad_getchar
 4531 2554 0030A0E1 		mov	r3, r0
 4532 2558 1B304BE5 		strb	r3, [fp, #-27]
 353:../proyecto.c **** 			while (!(scancode == KEYPAD_KEY0) && modo == 0){
 4533              		.loc 1 353 0
 4534 255c 0D0000EA 		b	.L11
 4535              	.L18:
 354:../proyecto.c **** 				while (!keypad_pressed());
 4536              		.loc 1 354 0
 4537 2560 0000A0E1 		mov	r0, r0	@ nop
 4538              	.L12:
 4539              		.loc 1 354 0 is_stmt 0 discriminator 1
 4540 2564 FEFFFFEB 		bl	keypad_pressed
 4541 2568 0030A0E1 		mov	r3, r0
 4542 256c 000053E3 		cmp	r3, #0
 4543 2570 FBFFFF0A 		beq	.L12
 355:../proyecto.c **** 				scancode = keypad_getchar();
 4544              		.loc 1 355 0 is_stmt 1
 4545 2574 FEFFFFEB 		bl	keypad_getchar
 4546 2578 0030A0E1 		mov	r3, r0
 4547 257c 1B304BE5 		strb	r3, [fp, #-27]
 356:../proyecto.c **** 				if (keypad_getchar() == KEYPAD_KEY1){
 4548              		.loc 1 356 0
 4549 2580 FEFFFFEB 		bl	keypad_getchar
 4550 2584 0030A0E1 		mov	r3, r0
 4551 2588 010053E3 		cmp	r3, #1
 4552 258c 0100001A 		bne	.L11
 357:../proyecto.c **** 					modo = 1;
 4553              		.loc 1 357 0
 4554 2590 0130A0E3 		mov	r3, #1
 4555 2594 B8314BE1 		strh	r3, [fp, #-24]	@ movhi
 4556              	.L11:
 353:../proyecto.c **** 			while (!(scancode == KEYPAD_KEY0) && modo == 0){
 4557              		.loc 1 353 0 discriminator 1
 4558 2598 1B305BE5 		ldrb	r3, [fp, #-27]	@ zero_extendqisi2
 4559 259c 000053E3 		cmp	r3, #0
 4560 25a0 0200000A 		beq	.L10
 353:../proyecto.c **** 			while (!(scancode == KEYPAD_KEY0) && modo == 0){
 4561              		.loc 1 353 0 is_stmt 0 discriminator 2
 4562 25a4 B8315BE1 		ldrh	r3, [fp, #-24]
 4563 25a8 000053E3 		cmp	r3, #0
 4564 25ac EBFFFF0A 		beq	.L18
 4565              	.L10:
 358:../proyecto.c **** 				}
 359:../proyecto.c **** 			}
 360:../proyecto.c **** 		}
 361:../proyecto.c **** 
 362:../proyecto.c **** 		(*album.pack[i].effect)( album.pack[i].photo, album.pack[i].sense );    // Ejecuta el efecto para
 4566              		.loc 1 362 0 is_stmt 1
 4567 25b0 B6115BE1 		ldrh	r1, [fp, #-22]
 4568 25b4 3C251FE5 		ldr	r2, .L21+48
 4569 25b8 0430A0E3 		mov	r3, #4
 4570 25bc 14004BE2 		sub	r0, fp, #20
 4571 25c0 022080E0 		add	r2, r0, r2
 4572 25c4 03C082E0 		add	ip, r2, r3
 4573 25c8 960CA0E3 		mov	r0, #38400
 4574 25cc 0120A0E1 		mov	r2, r1
 4575 25d0 0221A0E1 		mov	r2, r2, asl #2
 4576 25d4 012082E0 		add	r2, r2, r1
 4577 25d8 0232A0E1 		mov	r3, r2, asl #4
 4578 25dc 033062E0 		rsb	r3, r2, r3
 4579 25e0 0333A0E1 		mov	r3, r3, asl #6
 4580 25e4 013083E0 		add	r3, r3, r1
 4581 25e8 8331A0E1 		mov	r3, r3, asl #3
 4582 25ec 03308CE0 		add	r3, ip, r3
 4583 25f0 003083E0 		add	r3, r3, r0
 4584 25f4 00C093E5 		ldr	ip, [r3, #0]
 4585 25f8 B6015BE1 		ldrh	r0, [fp, #-22]
 4586 25fc 84151FE5 		ldr	r1, .L21+48
 4587 2600 5D194BE2 		sub	r1, fp, #1523712
 4588 2604 C51D41E2 		sub	r1, r1, #12608
 4589 2608 201041E2 		sub	r1, r1, #32
 4590 260c 0020A0E1 		mov	r2, r0
 4591 2610 0221A0E1 		mov	r2, r2, asl #2
 4592 2614 002082E0 		add	r2, r2, r0
 4593 2618 0232A0E1 		mov	r3, r2, asl #4
 4594 261c 033062E0 		rsb	r3, r2, r3
 4595 2620 0333A0E1 		mov	r3, r3, asl #6
 4596 2624 003083E0 		add	r3, r3, r0
 4597 2628 8331A0E1 		mov	r3, r3, asl #3
 4598 262c 033081E0 		add	r3, r1, r3
 4599 2630 040083E2 		add	r0, r3, #4
 4600 2634 B6115BE1 		ldrh	r1, [fp, #-22]
 4601 2638 C0451FE5 		ldr	r4, .L21+48
 4602 263c 96ECA0E3 		mov	lr, #38400
 4603 2640 0120A0E1 		mov	r2, r1
 4604 2644 0221A0E1 		mov	r2, r2, asl #2
 4605 2648 012082E0 		add	r2, r2, r1
 4606 264c 0232A0E1 		mov	r3, r2, asl #4
 4607 2650 033062E0 		rsb	r3, r2, r3
 4608 2654 0333A0E1 		mov	r3, r3, asl #6
 4609 2658 013083E0 		add	r3, r3, r1
 4610 265c 8331A0E1 		mov	r3, r3, asl #3
 4611 2660 14104BE2 		sub	r1, fp, #20
 4612 2664 033081E0 		add	r3, r1, r3
 4613 2668 043083E0 		add	r3, r3, r4
 4614 266c 0E3083E0 		add	r3, r3, lr
 4615 2670 0830D3E5 		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4616 2674 0310A0E1 		mov	r1, r3
 4617 2678 0FE0A0E1 		mov	lr, pc
 4618 267c 1CFF2FE1 		bx	ip
 363:../proyecto.c **** 		sw_delay_s( album.pack[i].secs );                                       // Mantiene la foto el ti
 4619              		.loc 1 363 0
 4620 2680 B6115BE1 		ldrh	r1, [fp, #-22]
 4621 2684 0CC61FE5 		ldr	ip, .L21+48
 4622 2688 960CA0E3 		mov	r0, #38400
 4623 268c 0120A0E1 		mov	r2, r1
 4624 2690 0221A0E1 		mov	r2, r2, asl #2
 4625 2694 012082E0 		add	r2, r2, r1
 4626 2698 0232A0E1 		mov	r3, r2, asl #4
 4627 269c 033062E0 		rsb	r3, r2, r3
 4628 26a0 0333A0E1 		mov	r3, r3, asl #6
 4629 26a4 013083E0 		add	r3, r3, r1
 4630 26a8 8331A0E1 		mov	r3, r3, asl #3
 4631 26ac 14204BE2 		sub	r2, fp, #20
 4632 26b0 033082E0 		add	r3, r2, r3
 4633 26b4 0C3083E0 		add	r3, r3, ip
 4634 26b8 003083E0 		add	r3, r3, r0
 4635 26bc 0930D3E5 		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4636 26c0 0300A0E1 		mov	r0, r3
 4637 26c4 FEFFFFEB 		bl	sw_delay_s
 364:../proyecto.c **** 		i = ( i==album.numPacks-1 ? 0 : i+1 );                                  // Avanza circularmente a
 4638              		.loc 1 364 0
 4639 26c8 B6215BE1 		ldrh	r2, [fp, #-22]
 4640 26cc 54361FE5 		ldr	r3, .L21+48
 4641 26d0 14004BE2 		sub	r0, fp, #20
 4642 26d4 0330D0E7 		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 4643 26d8 013043E2 		sub	r3, r3, #1
 4644 26dc 030052E1 		cmp	r2, r3
 4645 26e0 0400000A 		beq	.L14
 4646              		.loc 1 364 0 is_stmt 0 discriminator 1
 4647 26e4 B6315BE1 		ldrh	r3, [fp, #-22]	@ movhi
 4648 26e8 013083E2 		add	r3, r3, #1
 4649 26ec 0338A0E1 		mov	r3, r3, asl #16
 4650 26f0 2338A0E1 		mov	r3, r3, lsr #16
 4651 26f4 000000EA 		b	.L15
 4652              	.L14:
 4653              		.loc 1 364 0 discriminator 2
 4654 26f8 0030A0E3 		mov	r3, #0
 4655              	.L15:
 4656              		.loc 1 364 0 discriminator 3
 4657 26fc B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 365:../proyecto.c **** 	}
 4658              		.loc 1 365 0 is_stmt 1 discriminator 3
 4659 2700 73FFFFEA 		b	.L7
 4660              		.cfi_endproc
 4661              	.LFE0:
 4663              		.align	2
 4664              		.global	lcd_putBmp
 4666              	lcd_putBmp:
 4667              	.LFB1:
 366:../proyecto.c **** }
 367:../proyecto.c **** 
 368:../proyecto.c **** 
 369:../proyecto.c **** /*******************************************************************/
 370:../proyecto.c **** 
 371:../proyecto.c **** /*
 372:../proyecto.c ****  ** Muestra un BMP de tamaño (xsize, ysize) píxeles en la posición (x,y) del LCD
 373:../proyecto.c ****  ** Esta función es una generalización de lcd_putWallpaper() ya que:
 374:../proyecto.c ****  **     lcd_putWallpaper( bmp ) = lcd_putBmp( bmp, 0, 0, LCD_WIDTH, LCD_HEIGHT )
 375:../proyecto.c ****  **
 376:../proyecto.c ****  ** NO puede hacerse por DMA porque requiere la manipulación de pixeles
 377:../proyecto.c ****  */
 378:../proyecto.c **** 
 379:../proyecto.c **** void lcd_putBmp( uint8 *bmp, uint16 x, uint16 y, uint16 xsize, uint16 ysize )
 380:../proyecto.c **** {
 4668              		.loc 1 380 0
 4669              		.cfi_startproc
 4670              		@ Function supports interworking.
 4671              		@ args = 4, pretend = 0, frame = 32
 4672              		@ frame_needed = 1, uses_anonymous_args = 0
 4673 2704 0DC0A0E1 		mov	ip, sp
 4674              	.LCFI2:
 4675              		.cfi_def_cfa_register 12
 4676 2708 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4677 270c 04B04CE2 		sub	fp, ip, #4
 4678              		.cfi_offset 14, -8
 4679              		.cfi_offset 13, -12
 4680              		.cfi_offset 11, -16
 4681              	.LCFI3:
 4682              		.cfi_def_cfa 11, 4
 4683 2710 20D04DE2 		sub	sp, sp, #32
 4684 2714 20000BE5 		str	r0, [fp, #-32]
 4685 2718 B2124BE1 		strh	r1, [fp, #-34]	@ movhi
 4686 271c B4224BE1 		strh	r2, [fp, #-36]	@ movhi
 4687 2720 B6324BE1 		strh	r3, [fp, #-38]	@ movhi
 381:../proyecto.c **** 	uint32 headerSize;
 382:../proyecto.c **** 
 383:../proyecto.c **** 	uint16 xSrc, ySrc, yDst;
 384:../proyecto.c **** 	uint16 offsetSrc, offsetDst;
 385:../proyecto.c **** 
 386:../proyecto.c **** 	headerSize = bmp[10] + (bmp[11] << 8) + (bmp[12] << 16) + (bmp[13] << 24);
 4688              		.loc 1 386 0
 4689 2724 20301BE5 		ldr	r3, [fp, #-32]
 4690 2728 0A3083E2 		add	r3, r3, #10
 4691 272c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4692 2730 0320A0E1 		mov	r2, r3
 4693 2734 20301BE5 		ldr	r3, [fp, #-32]
 4694 2738 0B3083E2 		add	r3, r3, #11
 4695 273c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4696 2740 0334A0E1 		mov	r3, r3, asl #8
 4697 2744 032082E0 		add	r2, r2, r3
 4698 2748 20301BE5 		ldr	r3, [fp, #-32]
 4699 274c 0C3083E2 		add	r3, r3, #12
 4700 2750 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4701 2754 0338A0E1 		mov	r3, r3, asl #16
 4702 2758 032082E0 		add	r2, r2, r3
 4703 275c 20301BE5 		ldr	r3, [fp, #-32]
 4704 2760 0D3083E2 		add	r3, r3, #13
 4705 2764 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4706 2768 033CA0E1 		mov	r3, r3, asl #24
 4707 276c 033082E0 		add	r3, r2, r3
 4708 2770 18300BE5 		str	r3, [fp, #-24]
 387:../proyecto.c **** 
 388:../proyecto.c **** 	bmp = bmp + headerSize;
 4709              		.loc 1 388 0
 4710 2774 20201BE5 		ldr	r2, [fp, #-32]
 4711 2778 18301BE5 		ldr	r3, [fp, #-24]
 4712 277c 033082E0 		add	r3, r2, r3
 4713 2780 20300BE5 		str	r3, [fp, #-32]
 389:../proyecto.c **** 
 390:../proyecto.c **** 	for( ySrc=0, yDst=ysize-1; ySrc<ysize; ySrc++, yDst-- )
 4714              		.loc 1 390 0
 4715 2784 0030A0E3 		mov	r3, #0
 4716 2788 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 4717 278c B430DBE1 		ldrh	r3, [fp, #4]	@ movhi
 4718 2790 013043E2 		sub	r3, r3, #1
 4719 2794 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 4720 2798 380000EA 		b	.L25
 4721              	.L28:
 391:../proyecto.c **** 	{
 392:../proyecto.c **** 		offsetDst = (yDst+y)*LCD_WIDTH/2+x/2;
 4722              		.loc 1 392 0
 4723 279c B2215BE1 		ldrh	r2, [fp, #-18]
 4724 27a0 B4325BE1 		ldrh	r3, [fp, #-36]
 4725 27a4 032082E0 		add	r2, r2, r3
 4726 27a8 0230A0E1 		mov	r3, r2
 4727 27ac 0331A0E1 		mov	r3, r3, asl #2
 4728 27b0 023083E0 		add	r3, r3, r2
 4729 27b4 0333A0E1 		mov	r3, r3, asl #6
 4730 27b8 A32FA0E1 		mov	r2, r3, lsr #31
 4731 27bc 033082E0 		add	r3, r2, r3
 4732 27c0 C330A0E1 		mov	r3, r3, asr #1
 4733 27c4 0338A0E1 		mov	r3, r3, asl #16
 4734 27c8 2328A0E1 		mov	r2, r3, lsr #16
 4735 27cc B2325BE1 		ldrh	r3, [fp, #-34]
 4736 27d0 A330A0E1 		mov	r3, r3, lsr #1
 4737 27d4 0338A0E1 		mov	r3, r3, asl #16
 4738 27d8 2338A0E1 		mov	r3, r3, lsr #16
 4739 27dc 033082E0 		add	r3, r2, r3
 4740 27e0 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 393:../proyecto.c **** 		offsetSrc = ySrc*xsize/2;
 4741              		.loc 1 393 0
 4742 27e4 B0315BE1 		ldrh	r3, [fp, #-16]
 4743 27e8 B6225BE1 		ldrh	r2, [fp, #-38]
 4744 27ec 920303E0 		mul	r3, r2, r3
 4745 27f0 A32FA0E1 		mov	r2, r3, lsr #31
 4746 27f4 033082E0 		add	r3, r2, r3
 4747 27f8 C330A0E1 		mov	r3, r3, asr #1
 4748 27fc BC314BE1 		strh	r3, [fp, #-28]	@ movhi
 394:../proyecto.c **** 		for( xSrc=0; xSrc<xsize/2; xSrc++ )
 4749              		.loc 1 394 0
 4750 2800 0030A0E3 		mov	r3, #0
 4751 2804 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4752 2808 0F0000EA 		b	.L26
 4753              	.L27:
 395:../proyecto.c **** 			lcd_buffer[offsetDst+xSrc] = ~bmp[offsetSrc+xSrc];
 4754              		.loc 1 395 0 discriminator 2
 4755 280c BA215BE1 		ldrh	r2, [fp, #-26]
 4756 2810 BE305BE1 		ldrh	r3, [fp, #-14]
 4757 2814 033082E0 		add	r3, r2, r3
 4758 2818 BC115BE1 		ldrh	r1, [fp, #-28]
 4759 281c BE205BE1 		ldrh	r2, [fp, #-14]
 4760 2820 022081E0 		add	r2, r1, r2
 4761 2824 20101BE5 		ldr	r1, [fp, #-32]
 4762 2828 022081E0 		add	r2, r1, r2
 4763 282c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 4764 2830 0220E0E1 		mvn	r2, r2
 4765 2834 FF1002E2 		and	r1, r2, #255
 4766 2838 5C209FE5 		ldr	r2, .L29
 4767 283c 0310C2E7 		strb	r1, [r2, r3]
 394:../proyecto.c **** 		for( xSrc=0; xSrc<xsize/2; xSrc++ )
 4768              		.loc 1 394 0 discriminator 2
 4769 2840 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4770 2844 013083E2 		add	r3, r3, #1
 4771 2848 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4772              	.L26:
 394:../proyecto.c **** 		for( xSrc=0; xSrc<xsize/2; xSrc++ )
 4773              		.loc 1 394 0 is_stmt 0 discriminator 1
 4774 284c B6325BE1 		ldrh	r3, [fp, #-38]
 4775 2850 A330A0E1 		mov	r3, r3, lsr #1
 4776 2854 0338A0E1 		mov	r3, r3, asl #16
 4777 2858 2338A0E1 		mov	r3, r3, lsr #16
 4778 285c BE205BE1 		ldrh	r2, [fp, #-14]
 4779 2860 030052E1 		cmp	r2, r3
 4780 2864 E8FFFF3A 		bcc	.L27
 390:../proyecto.c **** 	for( ySrc=0, yDst=ysize-1; ySrc<ysize; ySrc++, yDst-- )
 4781              		.loc 1 390 0 is_stmt 1
 4782 2868 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 4783 286c 013083E2 		add	r3, r3, #1
 4784 2870 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 4785 2874 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 4786 2878 013043E2 		sub	r3, r3, #1
 4787 287c B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 4788              	.L25:
 390:../proyecto.c **** 	for( ySrc=0, yDst=ysize-1; ySrc<ysize; ySrc++, yDst-- )
 4789              		.loc 1 390 0 is_stmt 0 discriminator 1
 4790 2880 B0215BE1 		ldrh	r2, [fp, #-16]
 4791 2884 B430DBE1 		ldrh	r3, [fp, #4]
 4792 2888 030052E1 		cmp	r2, r3
 4793 288c C2FFFF3A 		bcc	.L28
 396:../proyecto.c **** 	}
 397:../proyecto.c **** }
 4794              		.loc 1 397 0 is_stmt 1
 4795 2890 0CD04BE2 		sub	sp, fp, #12
 4796 2894 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4797 2898 1EFF2FE1 		bx	lr
 4798              	.L30:
 4799              		.align	2
 4800              	.L29:
 4801 289c 00000000 		.word	lcd_buffer
 4802              		.cfi_endproc
 4803              	.LFE1:
 4805              		.align	2
 4806              		.global	lcd_bmp2photo
 4808              	lcd_bmp2photo:
 4809              	.LFB2:
 398:../proyecto.c **** 
 399:../proyecto.c **** /*
 400:../proyecto.c ****  ** Respecto al buffer de vídeo, el formato BMP tiene cabecera, las filas están volteadas y el colo
 401:../proyecto.c ****  ** Esta función convierte los BMP en un array de pixeles directamente visualizable (foto) para fac
 402:../proyecto.c ****  ** Es una adaptación de lcd_putWallpaper() que en lugar de copiar el BMP sobre el buffer de vídeo 
 403:../proyecto.c ****  **
 404:../proyecto.c ****  ** NO puede hacerse por DMA porque requiere la manipulación de pixeles.
 405:../proyecto.c ****  */
 406:../proyecto.c **** 
 407:../proyecto.c **** void lcd_bmp2photo( uint8 *bmp, uint8 *photo )
 408:../proyecto.c **** {
 4810              		.loc 1 408 0
 4811              		.cfi_startproc
 4812              		@ Function supports interworking.
 4813              		@ args = 0, pretend = 0, frame = 24
 4814              		@ frame_needed = 1, uses_anonymous_args = 0
 4815 28a0 0DC0A0E1 		mov	ip, sp
 4816              	.LCFI4:
 4817              		.cfi_def_cfa_register 12
 4818 28a4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4819 28a8 04B04CE2 		sub	fp, ip, #4
 4820              		.cfi_offset 14, -8
 4821              		.cfi_offset 13, -12
 4822              		.cfi_offset 11, -16
 4823              	.LCFI5:
 4824              		.cfi_def_cfa 11, 4
 4825 28ac 18D04DE2 		sub	sp, sp, #24
 4826 28b0 20000BE5 		str	r0, [fp, #-32]
 4827 28b4 24100BE5 		str	r1, [fp, #-36]
 409:../proyecto.c **** 	uint32 headerSize;
 410:../proyecto.c **** 
 411:../proyecto.c **** 	uint16 x, ySrc, yDst;
 412:../proyecto.c **** 	uint16 offsetSrc, offsetDst;
 413:../proyecto.c **** 
 414:../proyecto.c **** 	headerSize = bmp[10] + (bmp[11] << 8) + (bmp[12] << 16) + (bmp[13] << 24);    // Los datos de cabe
 4828              		.loc 1 414 0
 4829 28b8 20301BE5 		ldr	r3, [fp, #-32]
 4830 28bc 0A3083E2 		add	r3, r3, #10
 4831 28c0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4832 28c4 0320A0E1 		mov	r2, r3
 4833 28c8 20301BE5 		ldr	r3, [fp, #-32]
 4834 28cc 0B3083E2 		add	r3, r3, #11
 4835 28d0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4836 28d4 0334A0E1 		mov	r3, r3, asl #8
 4837 28d8 032082E0 		add	r2, r2, r3
 4838 28dc 20301BE5 		ldr	r3, [fp, #-32]
 4839 28e0 0C3083E2 		add	r3, r3, #12
 4840 28e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4841 28e8 0338A0E1 		mov	r3, r3, asl #16
 4842 28ec 032082E0 		add	r2, r2, r3
 4843 28f0 20301BE5 		ldr	r3, [fp, #-32]
 4844 28f4 0D3083E2 		add	r3, r3, #13
 4845 28f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4846 28fc 033CA0E1 		mov	r3, r3, asl #24
 4847 2900 033082E0 		add	r3, r2, r3
 4848 2904 18300BE5 		str	r3, [fp, #-24]
 415:../proyecto.c **** 
 416:../proyecto.c **** 	bmp = bmp + headerSize;                                                       // Salta cabecera
 4849              		.loc 1 416 0
 4850 2908 20201BE5 		ldr	r2, [fp, #-32]
 4851 290c 18301BE5 		ldr	r3, [fp, #-24]
 4852 2910 033082E0 		add	r3, r2, r3
 4853 2914 20300BE5 		str	r3, [fp, #-32]
 417:../proyecto.c **** 
 418:../proyecto.c **** 	for( ySrc=0, yDst=LCD_HEIGHT-1; ySrc<LCD_HEIGHT; ySrc++, yDst-- )             // Voltea verticalme
 4854              		.loc 1 418 0
 4855 2918 0030A0E3 		mov	r3, #0
 4856 291c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 4857 2920 EF30A0E3 		mov	r3, #239
 4858 2924 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 4859 2928 2E0000EA 		b	.L32
 4860              	.L35:
 419:../proyecto.c **** 	{
 420:../proyecto.c **** 		offsetDst = yDst*LCD_WIDTH/2;
 4861              		.loc 1 420 0
 4862 292c B2215BE1 		ldrh	r2, [fp, #-18]
 4863 2930 0230A0E1 		mov	r3, r2
 4864 2934 0331A0E1 		mov	r3, r3, asl #2
 4865 2938 023083E0 		add	r3, r3, r2
 4866 293c 0333A0E1 		mov	r3, r3, asl #6
 4867 2940 A32FA0E1 		mov	r2, r3, lsr #31
 4868 2944 033082E0 		add	r3, r2, r3
 4869 2948 C330A0E1 		mov	r3, r3, asr #1
 4870 294c BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 421:../proyecto.c **** 		offsetSrc = ySrc*LCD_WIDTH/2;
 4871              		.loc 1 421 0
 4872 2950 B0215BE1 		ldrh	r2, [fp, #-16]
 4873 2954 0230A0E1 		mov	r3, r2
 4874 2958 0331A0E1 		mov	r3, r3, asl #2
 4875 295c 023083E0 		add	r3, r3, r2
 4876 2960 0333A0E1 		mov	r3, r3, asl #6
 4877 2964 A32FA0E1 		mov	r2, r3, lsr #31
 4878 2968 033082E0 		add	r3, r2, r3
 4879 296c C330A0E1 		mov	r3, r3, asr #1
 4880 2970 BC314BE1 		strh	r3, [fp, #-28]	@ movhi
 422:../proyecto.c **** 		for( x=0; x<LCD_WIDTH/2; x++ )
 4881              		.loc 1 422 0
 4882 2974 0030A0E3 		mov	r3, #0
 4883 2978 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4884 297c 100000EA 		b	.L33
 4885              	.L34:
 423:../proyecto.c **** 			photo[offsetDst+x] = ~bmp[offsetSrc+x];
 4886              		.loc 1 423 0 discriminator 2
 4887 2980 BA215BE1 		ldrh	r2, [fp, #-26]
 4888 2984 BE305BE1 		ldrh	r3, [fp, #-14]
 4889 2988 033082E0 		add	r3, r2, r3
 4890 298c 24201BE5 		ldr	r2, [fp, #-36]
 4891 2990 033082E0 		add	r3, r2, r3
 4892 2994 BC115BE1 		ldrh	r1, [fp, #-28]
 4893 2998 BE205BE1 		ldrh	r2, [fp, #-14]
 4894 299c 022081E0 		add	r2, r1, r2
 4895 29a0 20101BE5 		ldr	r1, [fp, #-32]
 4896 29a4 022081E0 		add	r2, r1, r2
 4897 29a8 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 4898 29ac 0220E0E1 		mvn	r2, r2
 4899 29b0 FF2002E2 		and	r2, r2, #255
 4900 29b4 0020C3E5 		strb	r2, [r3, #0]
 422:../proyecto.c **** 		for( x=0; x<LCD_WIDTH/2; x++ )
 4901              		.loc 1 422 0 discriminator 2
 4902 29b8 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4903 29bc 013083E2 		add	r3, r3, #1
 4904 29c0 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4905              	.L33:
 422:../proyecto.c **** 		for( x=0; x<LCD_WIDTH/2; x++ )
 4906              		.loc 1 422 0 is_stmt 0 discriminator 1
 4907 29c4 BE305BE1 		ldrh	r3, [fp, #-14]
 4908 29c8 9F0053E3 		cmp	r3, #159
 4909 29cc EBFFFF9A 		bls	.L34
 418:../proyecto.c **** 	for( ySrc=0, yDst=LCD_HEIGHT-1; ySrc<LCD_HEIGHT; ySrc++, yDst-- )             // Voltea verticalme
 4910              		.loc 1 418 0 is_stmt 1
 4911 29d0 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 4912 29d4 013083E2 		add	r3, r3, #1
 4913 29d8 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 4914 29dc B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 4915 29e0 013043E2 		sub	r3, r3, #1
 4916 29e4 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 4917              	.L32:
 418:../proyecto.c **** 	for( ySrc=0, yDst=LCD_HEIGHT-1; ySrc<LCD_HEIGHT; ySrc++, yDst-- )             // Voltea verticalme
 4918              		.loc 1 418 0 is_stmt 0 discriminator 1
 4919 29e8 B0315BE1 		ldrh	r3, [fp, #-16]
 4920 29ec EF0053E3 		cmp	r3, #239
 4921 29f0 CDFFFF9A 		bls	.L35
 424:../proyecto.c **** 	}
 425:../proyecto.c **** }
 4922              		.loc 1 425 0 is_stmt 1
 4923 29f4 0CD04BE2 		sub	sp, fp, #12
 4924 29f8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4925 29fc 1EFF2FE1 		bx	lr
 4926              		.cfi_endproc
 4927              	.LFE2:
 4929              		.align	2
 4930              		.global	test
 4932              	test:
 4933              	.LFB3:
 426:../proyecto.c **** 
 427:../proyecto.c **** /*
 428:../proyecto.c ****  ** Chequea que se está visualizando la foto indicada comparando pixel a pixel el buffer de vídeo y
 429:../proyecto.c ****  ** Incluida para uso exclusivo en depuración, deberá eliminarse del proyecto final
 430:../proyecto.c ****  **
 431:../proyecto.c ****  ** NO puede hacerse por DMA porque requiere la comparación de pixeles.
 432:../proyecto.c ****  */
 433:../proyecto.c **** 
 434:../proyecto.c **** void test( uint8 *photo )
 435:../proyecto.c **** {
 4934              		.loc 1 435 0
 4935              		.cfi_startproc
 4936              		@ Function supports interworking.
 4937              		@ args = 0, pretend = 0, frame = 16
 4938              		@ frame_needed = 1, uses_anonymous_args = 0
 4939 2a00 0DC0A0E1 		mov	ip, sp
 4940              	.LCFI6:
 4941              		.cfi_def_cfa_register 12
 4942 2a04 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4943 2a08 04B04CE2 		sub	fp, ip, #4
 4944              		.cfi_offset 14, -8
 4945              		.cfi_offset 13, -12
 4946              		.cfi_offset 11, -16
 4947              	.LCFI7:
 4948              		.cfi_def_cfa 11, 4
 4949 2a0c 10D04DE2 		sub	sp, sp, #16
 4950 2a10 18000BE5 		str	r0, [fp, #-24]
 436:../proyecto.c **** 	int16 x, y;
 437:../proyecto.c **** 
 438:../proyecto.c **** 	for( x=0; x<LCD_COLS; x++ )
 4951              		.loc 1 438 0
 4952 2a14 0030A0E3 		mov	r3, #0
 4953 2a18 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4954 2a1c 250000EA 		b	.L37
 4955              	.L42:
 439:../proyecto.c **** 		for( y=0; y<LCD_ROWS; y++ )
 4956              		.loc 1 439 0
 4957 2a20 0030A0E3 		mov	r3, #0
 4958 2a24 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 4959 2a28 1C0000EA 		b	.L38
 4960              	.L41:
 440:../proyecto.c **** 			if( lcd_buffer[y*LCD_COLS+x] != photo[y*LCD_COLS+x] )
 4961              		.loc 1 440 0
 4962 2a2c F0215BE1 		ldrsh	r2, [fp, #-16]
 4963 2a30 0230A0E1 		mov	r3, r2
 4964 2a34 0331A0E1 		mov	r3, r3, asl #2
 4965 2a38 023083E0 		add	r3, r3, r2
 4966 2a3c 8332A0E1 		mov	r3, r3, asl #5
 4967 2a40 0320A0E1 		mov	r2, r3
 4968 2a44 FE305BE1 		ldrsh	r3, [fp, #-14]
 4969 2a48 033082E0 		add	r3, r2, r3
 4970 2a4c 7C209FE5 		ldr	r2, .L43
 4971 2a50 0310D2E7 		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 4972 2a54 F0215BE1 		ldrsh	r2, [fp, #-16]
 4973 2a58 0230A0E1 		mov	r3, r2
 4974 2a5c 0331A0E1 		mov	r3, r3, asl #2
 4975 2a60 023083E0 		add	r3, r3, r2
 4976 2a64 8332A0E1 		mov	r3, r3, asl #5
 4977 2a68 0320A0E1 		mov	r2, r3
 4978 2a6c FE305BE1 		ldrsh	r3, [fp, #-14]
 4979 2a70 033082E0 		add	r3, r2, r3
 4980 2a74 18201BE5 		ldr	r2, [fp, #-24]
 4981 2a78 033082E0 		add	r3, r2, r3
 4982 2a7c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4983 2a80 030051E1 		cmp	r1, r3
 4984 2a84 0200000A 		beq	.L39
 441:../proyecto.c **** 			{
 442:../proyecto.c **** 				segs_putchar( 0xE );
 4985              		.loc 1 442 0
 4986 2a88 0E00A0E3 		mov	r0, #14
 4987 2a8c FEFFFFEB 		bl	segs_putchar
 4988              	.L40:
 443:../proyecto.c **** 				while( 1 );
 4989              		.loc 1 443 0 discriminator 1
 4990 2a90 FEFFFFEA 		b	.L40
 4991              	.L39:
 439:../proyecto.c **** 		for( y=0; y<LCD_ROWS; y++ )
 4992              		.loc 1 439 0
 4993 2a94 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 4994 2a98 013083E2 		add	r3, r3, #1
 4995 2a9c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 4996              	.L38:
 439:../proyecto.c **** 		for( y=0; y<LCD_ROWS; y++ )
 4997              		.loc 1 439 0 is_stmt 0 discriminator 1
 4998 2aa0 F0315BE1 		ldrsh	r3, [fp, #-16]
 4999 2aa4 EF0053E3 		cmp	r3, #239
 5000 2aa8 DFFFFFDA 		ble	.L41
 438:../proyecto.c **** 	for( x=0; x<LCD_COLS; x++ )
 5001              		.loc 1 438 0 is_stmt 1
 5002 2aac BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 5003 2ab0 013083E2 		add	r3, r3, #1
 5004 2ab4 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5005              	.L37:
 438:../proyecto.c **** 	for( x=0; x<LCD_COLS; x++ )
 5006              		.loc 1 438 0 is_stmt 0 discriminator 1
 5007 2ab8 FE305BE1 		ldrsh	r3, [fp, #-14]
 5008 2abc 9F0053E3 		cmp	r3, #159
 5009 2ac0 D6FFFFDA 		ble	.L42
 444:../proyecto.c **** 			}
 445:../proyecto.c **** }
 5010              		.loc 1 445 0 is_stmt 1
 5011 2ac4 0CD04BE2 		sub	sp, fp, #12
 5012 2ac8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5013 2acc 1EFF2FE1 		bx	lr
 5014              	.L44:
 5015              		.align	2
 5016              	.L43:
 5017 2ad0 00000000 		.word	lcd_buffer
 5018              		.cfi_endproc
 5019              	.LFE3:
 5021              		.align	2
 5022              		.global	lcd_putColumn
 5024              	lcd_putColumn:
 5025              	.LFB4:
 446:../proyecto.c **** 
 447:../proyecto.c **** /*
 448:../proyecto.c ****  ** Visualiza una columna de la foto en una columna dada de la pantalla
 449:../proyecto.c ****  **
 450:../proyecto.c ****  ** NO puede hacerse por DMA porque los pixeles de una columna no ocupan posiciones contiguas de me
 451:../proyecto.c ****  */
 452:../proyecto.c **** 
 453:../proyecto.c **** void lcd_putColumn( uint16 xLcd, uint8 *photo, uint16 xPhoto )
 454:../proyecto.c **** {
 5026              		.loc 1 454 0
 5027              		.cfi_startproc
 5028              		@ Function supports interworking.
 5029              		@ args = 0, pretend = 0, frame = 24
 5030              		@ frame_needed = 1, uses_anonymous_args = 0
 5031 2ad4 0DC0A0E1 		mov	ip, sp
 5032              	.LCFI8:
 5033              		.cfi_def_cfa_register 12
 5034 2ad8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5035 2adc 04B04CE2 		sub	fp, ip, #4
 5036              		.cfi_offset 14, -8
 5037              		.cfi_offset 13, -12
 5038              		.cfi_offset 11, -16
 5039              	.LCFI9:
 5040              		.cfi_def_cfa 11, 4
 5041 2ae0 18D04DE2 		sub	sp, sp, #24
 5042 2ae4 1C100BE5 		str	r1, [fp, #-28]
 5043 2ae8 0230A0E1 		mov	r3, r2
 5044 2aec B6014BE1 		strh	r0, [fp, #-22]	@ movhi
 5045 2af0 BE314BE1 		strh	r3, [fp, #-30]	@ movhi
 455:../proyecto.c **** 	int16 y;
 456:../proyecto.c **** 
 457:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ )
 5046              		.loc 1 457 0
 5047 2af4 0030A0E3 		mov	r3, #0
 5048 2af8 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5049 2afc 170000EA 		b	.L46
 5050              	.L47:
 458:../proyecto.c **** 		lcd_buffer[(y*LCD_COLS)+xLcd] = photo[(y*LCD_COLS)+xPhoto];
 5051              		.loc 1 458 0 discriminator 2
 5052 2b00 FE205BE1 		ldrsh	r2, [fp, #-14]
 5053 2b04 0230A0E1 		mov	r3, r2
 5054 2b08 0331A0E1 		mov	r3, r3, asl #2
 5055 2b0c 023083E0 		add	r3, r3, r2
 5056 2b10 8332A0E1 		mov	r3, r3, asl #5
 5057 2b14 0320A0E1 		mov	r2, r3
 5058 2b18 B6315BE1 		ldrh	r3, [fp, #-22]
 5059 2b1c 031082E0 		add	r1, r2, r3
 5060 2b20 FE205BE1 		ldrsh	r2, [fp, #-14]
 5061 2b24 0230A0E1 		mov	r3, r2
 5062 2b28 0331A0E1 		mov	r3, r3, asl #2
 5063 2b2c 023083E0 		add	r3, r3, r2
 5064 2b30 8332A0E1 		mov	r3, r3, asl #5
 5065 2b34 0320A0E1 		mov	r2, r3
 5066 2b38 BE315BE1 		ldrh	r3, [fp, #-30]
 5067 2b3c 033082E0 		add	r3, r2, r3
 5068 2b40 1C201BE5 		ldr	r2, [fp, #-28]
 5069 2b44 033082E0 		add	r3, r2, r3
 5070 2b48 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5071 2b4c 24309FE5 		ldr	r3, .L48
 5072 2b50 0120C3E7 		strb	r2, [r3, r1]
 457:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ )
 5073              		.loc 1 457 0 discriminator 2
 5074 2b54 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 5075 2b58 013083E2 		add	r3, r3, #1
 5076 2b5c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5077              	.L46:
 457:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ )
 5078              		.loc 1 457 0 is_stmt 0 discriminator 1
 5079 2b60 FE305BE1 		ldrsh	r3, [fp, #-14]
 5080 2b64 EF0053E3 		cmp	r3, #239
 5081 2b68 E4FFFFDA 		ble	.L47
 459:../proyecto.c **** }
 5082              		.loc 1 459 0 is_stmt 1
 5083 2b6c 0CD04BE2 		sub	sp, fp, #12
 5084 2b70 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5085 2b74 1EFF2FE1 		bx	lr
 5086              	.L49:
 5087              		.align	2
 5088              	.L48:
 5089 2b78 00000000 		.word	lcd_buffer
 5090              		.cfi_endproc
 5091              	.LFE4:
 5093              		.align	2
 5094              		.global	lcd_putRow
 5096              	lcd_putRow:
 5097              	.LFB5:
 460:../proyecto.c **** 
 461:../proyecto.c **** /*
 462:../proyecto.c ****  ** Visualiza una linea de la foto en una linea dada de la pantalla
 463:../proyecto.c ****  **
 464:../proyecto.c ****  ** Deberá recodificarse para que se realice mediante una única operación DMA ya que los pixeles de
 465:../proyecto.c ****  */
 466:../proyecto.c **** 
 467:../proyecto.c **** void lcd_putRow( uint16 yLcd, uint8 *photo, uint16 yPhoto )
 468:../proyecto.c **** {
 5098              		.loc 1 468 0
 5099              		.cfi_startproc
 5100              		@ Function supports interworking.
 5101              		@ args = 0, pretend = 0, frame = 16
 5102              		@ frame_needed = 1, uses_anonymous_args = 0
 5103 2b7c 0DC0A0E1 		mov	ip, sp
 5104              	.LCFI10:
 5105              		.cfi_def_cfa_register 12
 5106 2b80 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5107 2b84 04B04CE2 		sub	fp, ip, #4
 5108              		.cfi_offset 14, -8
 5109              		.cfi_offset 13, -12
 5110              		.cfi_offset 11, -16
 5111              	.LCFI11:
 5112              		.cfi_def_cfa 11, 4
 5113 2b88 10D04DE2 		sub	sp, sp, #16
 5114 2b8c 14100BE5 		str	r1, [fp, #-20]
 5115 2b90 0230A0E1 		mov	r3, r2
 5116 2b94 BE004BE1 		strh	r0, [fp, #-14]	@ movhi
 5117 2b98 B6314BE1 		strh	r3, [fp, #-22]	@ movhi
 469:../proyecto.c **** 	/*int16 x;
 470:../proyecto.c **** 
 471:../proyecto.c **** 	for( x=0; x<LCD_COLS; x++ )
 472:../proyecto.c ****         lcd_buffer[(yLcd*LCD_COLS)+x] = photo[(yPhoto*LCD_COLS)+x];*/
 473:../proyecto.c **** 
 474:../proyecto.c **** 	/*DMA*/
 475:../proyecto.c **** 	ZDISRC0  = (0 << 30) | (1 << 28) | (uint32) (photo + (yPhoto*LCD_COLS)); // datos de 8b, dirección
 5118              		.loc 1 475 0
 5119 2b9c A0109FE5 		ldr	r1, .L52
 5120 2ba0 B6215BE1 		ldrh	r2, [fp, #-22]
 5121 2ba4 0230A0E1 		mov	r3, r2
 5122 2ba8 0331A0E1 		mov	r3, r3, asl #2
 5123 2bac 023083E0 		add	r3, r3, r2
 5124 2bb0 8332A0E1 		mov	r3, r3, asl #5
 5125 2bb4 14201BE5 		ldr	r2, [fp, #-20]
 5126 2bb8 033082E0 		add	r3, r2, r3
 5127 2bbc 013283E3 		orr	r3, r3, #268435456
 5128 2bc0 003081E5 		str	r3, [r1, #0]
 476:../proyecto.c **** 	ZDIDES0  = (2 << 30) | (1 << 28) | (uint32) (lcd_buffer + (yLcd*LCD_COLS));       // recomendada, 
 5129              		.loc 1 476 0
 5130 2bc4 7C109FE5 		ldr	r1, .L52+4
 5131 2bc8 BE205BE1 		ldrh	r2, [fp, #-14]
 5132 2bcc 0230A0E1 		mov	r3, r2
 5133 2bd0 0331A0E1 		mov	r3, r3, asl #2
 5134 2bd4 023083E0 		add	r3, r3, r2
 5135 2bd8 8332A0E1 		mov	r3, r3, asl #5
 5136 2bdc 0320A0E1 		mov	r2, r3
 5137 2be0 64309FE5 		ldr	r3, .L52+8
 5138 2be4 033082E0 		add	r3, r2, r3
 5139 2be8 093283E3 		orr	r3, r3, #-1879048192
 5140 2bec 003081E5 		str	r3, [r1, #0]
 477:../proyecto.c **** 	ZDICNT0  = (2 << 28) | (1 << 26) | (0 << 22) | (0 << 21) | (LCD_COLS); 	  	  // whole service, uni
 5141              		.loc 1 477 0
 5142 2bf0 58309FE5 		ldr	r3, .L52+12
 5143 2bf4 58209FE5 		ldr	r2, .L52+16
 5144 2bf8 002083E5 		str	r2, [r3, #0]
 478:../proyecto.c **** 	ZDICNT0 |= (1 << 20);                                                               	  	  // enabl
 5145              		.loc 1 478 0
 5146 2bfc 4C309FE5 		ldr	r3, .L52+12
 5147 2c00 48209FE5 		ldr	r2, .L52+12
 5148 2c04 002092E5 		ldr	r2, [r2, #0]
 5149 2c08 012682E3 		orr	r2, r2, #1048576
 5150 2c0c 002083E5 		str	r2, [r3, #0]
 479:../proyecto.c **** 	ZDCON0   = 1 ;                                                                      	  	  // start
 5151              		.loc 1 479 0
 5152 2c10 7A37A0E3 		mov	r3, #31981568
 5153 2c14 0120A0E3 		mov	r2, #1
 5154 2c18 002083E5 		str	r2, [r3, #0]
 480:../proyecto.c **** 	while(ZDCCNT0 & 0xFFFFF);                                                           	  	  // Esper
 5155              		.loc 1 480 0
 5156 2c1c 0000A0E1 		mov	r0, r0	@ nop
 5157              	.L51:
 5158              		.loc 1 480 0 is_stmt 0 discriminator 1
 5159 2c20 30309FE5 		ldr	r3, .L52+20
 5160 2c24 003093E5 		ldr	r3, [r3, #0]
 5161 2c28 FF34C3E3 		bic	r3, r3, #-16777216
 5162 2c2c 0F36C3E3 		bic	r3, r3, #15728640
 5163 2c30 000053E3 		cmp	r3, #0
 5164 2c34 F9FFFF1A 		bne	.L51
 481:../proyecto.c **** }
 5165              		.loc 1 481 0 is_stmt 1
 5166 2c38 0CD04BE2 		sub	sp, fp, #12
 5167 2c3c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5168 2c40 1EFF2FE1 		bx	lr
 5169              	.L53:
 5170              		.align	2
 5171              	.L52:
 5172 2c44 0400E801 		.word	31981572
 5173 2c48 0800E801 		.word	31981576
 5174 2c4c 00000000 		.word	lcd_buffer
 5175 2c50 0C00E801 		.word	31981580
 5176 2c54 A0000024 		.word	603979936
 5177 2c58 1800E801 		.word	31981592
 5178              		.cfi_endproc
 5179              	.LFE5:
 5181              		.align	2
 5182              		.global	lcd_putPhoto
 5184              	lcd_putPhoto:
 5185              	.LFB6:
 482:../proyecto.c **** 
 483:../proyecto.c **** /*
 484:../proyecto.c ****  ** Visualiza una foto en la pantalla
 485:../proyecto.c ****  **
 486:../proyecto.c ****  ** Deberá recodificarse para que se realice mediante una única operación DMA ya que los pixeles de
 487:../proyecto.c ****  */
 488:../proyecto.c **** 
 489:../proyecto.c **** void lcd_putPhoto( uint8 *photo )
 490:../proyecto.c **** {
 5186              		.loc 1 490 0
 5187              		.cfi_startproc
 5188              		@ Function supports interworking.
 5189              		@ args = 0, pretend = 0, frame = 8
 5190              		@ frame_needed = 1, uses_anonymous_args = 0
 5191 2c5c 0DC0A0E1 		mov	ip, sp
 5192              	.LCFI12:
 5193              		.cfi_def_cfa_register 12
 5194 2c60 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5195 2c64 04B04CE2 		sub	fp, ip, #4
 5196              		.cfi_offset 14, -8
 5197              		.cfi_offset 13, -12
 5198              		.cfi_offset 11, -16
 5199              	.LCFI13:
 5200              		.cfi_def_cfa 11, 4
 5201 2c68 08D04DE2 		sub	sp, sp, #8
 5202 2c6c 10000BE5 		str	r0, [fp, #-16]
 491:../proyecto.c **** 	/*int16 x, y;
 492:../proyecto.c **** 
 493:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ )
 494:../proyecto.c ****         for( x=0; x<LCD_COLS; x++ )
 495:../proyecto.c ****             lcd_buffer[(y*LCD_COLS)+x] = photo[(y*LCD_COLS)+x];  */
 496:../proyecto.c **** 
 497:../proyecto.c **** 	/*DMA*/
 498:../proyecto.c **** 	ZDISRC0  = (0 << 30) | (1 << 28) | (uint32) (photo + (0*LCD_COLS)); 						// datos de 8b, direcció
 5203              		.loc 1 498 0
 5204 2c70 6C309FE5 		ldr	r3, .L56
 5205 2c74 10201BE5 		ldr	r2, [fp, #-16]
 5206 2c78 012282E3 		orr	r2, r2, #268435456
 5207 2c7c 002083E5 		str	r2, [r3, #0]
 499:../proyecto.c **** 	ZDIDES0  = (2 << 30) | (1 << 28) | (uint32) (lcd_buffer + (0*LCD_COLS));       				// recomendada,
 5208              		.loc 1 499 0
 5209 2c80 60309FE5 		ldr	r3, .L56+4
 5210 2c84 60209FE5 		ldr	r2, .L56+8
 5211 2c88 092282E3 		orr	r2, r2, #-1879048192
 5212 2c8c 002083E5 		str	r2, [r3, #0]
 500:../proyecto.c **** 	ZDICNT0  = (2 << 28) | (1 << 26) | (0 << 22) | (0 << 21) | (LCD_COLS * LCD_ROWS); 	  	  	// whole 
 5213              		.loc 1 500 0
 5214 2c90 58309FE5 		ldr	r3, .L56+12
 5215 2c94 58209FE5 		ldr	r2, .L56+16
 5216 2c98 002083E5 		str	r2, [r3, #0]
 501:../proyecto.c **** 	ZDICNT0 |= (1 << 20);                                                               	  	// enable 
 5217              		.loc 1 501 0
 5218 2c9c 4C309FE5 		ldr	r3, .L56+12
 5219 2ca0 48209FE5 		ldr	r2, .L56+12
 5220 2ca4 002092E5 		ldr	r2, [r2, #0]
 5221 2ca8 012682E3 		orr	r2, r2, #1048576
 5222 2cac 002083E5 		str	r2, [r3, #0]
 502:../proyecto.c **** 	ZDCON0   = 1 ;                                                                      	  	// start D
 5223              		.loc 1 502 0
 5224 2cb0 7A37A0E3 		mov	r3, #31981568
 5225 2cb4 0120A0E3 		mov	r2, #1
 5226 2cb8 002083E5 		str	r2, [r3, #0]
 503:../proyecto.c **** 	while(ZDCCNT0 & 0xFFFFF);                                                           	  	// Espera 
 5227              		.loc 1 503 0
 5228 2cbc 0000A0E1 		mov	r0, r0	@ nop
 5229              	.L55:
 5230              		.loc 1 503 0 is_stmt 0 discriminator 1
 5231 2cc0 30309FE5 		ldr	r3, .L56+20
 5232 2cc4 003093E5 		ldr	r3, [r3, #0]
 5233 2cc8 FF34C3E3 		bic	r3, r3, #-16777216
 5234 2ccc 0F36C3E3 		bic	r3, r3, #15728640
 5235 2cd0 000053E3 		cmp	r3, #0
 5236 2cd4 F9FFFF1A 		bne	.L55
 504:../proyecto.c **** }
 5237              		.loc 1 504 0 is_stmt 1
 5238 2cd8 0CD04BE2 		sub	sp, fp, #12
 5239 2cdc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5240 2ce0 1EFF2FE1 		bx	lr
 5241              	.L57:
 5242              		.align	2
 5243              	.L56:
 5244 2ce4 0400E801 		.word	31981572
 5245 2ce8 0800E801 		.word	31981576
 5246 2cec 00000000 		.word	lcd_buffer
 5247 2cf0 0C00E801 		.word	31981580
 5248 2cf4 00960024 		.word	604018176
 5249 2cf8 1800E801 		.word	31981592
 5250              		.cfi_endproc
 5251              	.LFE6:
 5253              		.align	2
 5254              		.global	lcd_shift
 5256              	lcd_shift:
 5257              	.LFB7:
 505:../proyecto.c **** 
 506:../proyecto.c **** /*
 507:../proyecto.c ****  ** Scroll de una fila/columna por DMA
 508:../proyecto.c ****  ** Desplaza el contenido del LCD una linea en desplazamientos verticales, o una columna (formada p
 509:../proyecto.c ****  **
 510:../proyecto.c ****  ** Deberá completarse y ampliarse para poder realizar otros efectos
 511:../proyecto.c ****  */
 512:../proyecto.c **** /* La función está generalizada para poder realizar diferentes efectos, indicando su origen, destin
 513:../proyecto.c **** void lcd_shift( uint8 sense, uint32 origen, uint32 destino, uint16 size)
 514:../proyecto.c **** {
 5258              		.loc 1 514 0
 5259              		.cfi_startproc
 5260              		@ Function supports interworking.
 5261              		@ args = 0, pretend = 0, frame = 16
 5262              		@ frame_needed = 1, uses_anonymous_args = 0
 5263 2cfc 0DC0A0E1 		mov	ip, sp
 5264              	.LCFI14:
 5265              		.cfi_def_cfa_register 12
 5266 2d00 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5267 2d04 04B04CE2 		sub	fp, ip, #4
 5268              		.cfi_offset 14, -8
 5269              		.cfi_offset 13, -12
 5270              		.cfi_offset 11, -16
 5271              	.LCFI15:
 5272              		.cfi_def_cfa 11, 4
 5273 2d08 10D04DE2 		sub	sp, sp, #16
 5274 2d0c 14100BE5 		str	r1, [fp, #-20]
 5275 2d10 18200BE5 		str	r2, [fp, #-24]
 5276 2d14 0020A0E1 		mov	r2, r0
 5277 2d18 0D204BE5 		strb	r2, [fp, #-13]
 5278 2d1c BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 515:../proyecto.c **** 	int16 x, y;
 516:../proyecto.c **** 
 517:../proyecto.c **** 	switch( sense )
 5279              		.loc 1 517 0
 5280 2d20 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 5281 2d24 030053E3 		cmp	r3, #3
 5282 2d28 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 5283 2d2c 730000EA 		b	.L58
 5284              	.L64:
 5285 2d30 402D0000 		.word	.L60
 5286 2d34 B02D0000 		.word	.L61
 5287 2d38 202E0000 		.word	.L62
 5288 2d3c 902E0000 		.word	.L63
 5289              	.L60:
 518:../proyecto.c **** 	{
 519:../proyecto.c **** 	case LEFT:                                                            				// Al ser un desplazamie
 520:../proyecto.c **** 		ZDISRC0  = (0 << 30) | (1 << 28) | (uint32) (origen);    						// datos de 8b, dirección POST-INC
 5290              		.loc 1 520 0
 5291 2d40 C4319FE5 		ldr	r3, .L69
 5292 2d44 14201BE5 		ldr	r2, [fp, #-20]
 5293 2d48 012282E3 		orr	r2, r2, #268435456
 5294 2d4c 002083E5 		str	r2, [r3, #0]
 521:../proyecto.c **** 		ZDIDES0  = (2 << 30) | (1 << 28) | (uint32) (destino);        					// recomendada, dirección POST
 5295              		.loc 1 521 0
 5296 2d50 B8319FE5 		ldr	r3, .L69+4
 5297 2d54 18201BE5 		ldr	r2, [fp, #-24]
 5298 2d58 092282E3 		orr	r2, r2, #-1879048192
 5299 2d5c 002083E5 		str	r2, [r3, #0]
 522:../proyecto.c **** 		ZDICNT0  = (2 << 28) | (1 << 26) | (0 << 22) | (0 << 21) | (size);        		// whole service, uni
 5300              		.loc 1 522 0
 5301 2d60 AC319FE5 		ldr	r3, .L69+8
 5302 2d64 BA215BE1 		ldrh	r2, [fp, #-26]
 5303 2d68 092382E3 		orr	r2, r2, #603979776
 5304 2d6c 002083E5 		str	r2, [r3, #0]
 523:../proyecto.c **** 		ZDICNT0 |= (1 << 20);                                                           // enable DMA (se
 5305              		.loc 1 523 0
 5306 2d70 9C319FE5 		ldr	r3, .L69+8
 5307 2d74 98219FE5 		ldr	r2, .L69+8
 5308 2d78 002092E5 		ldr	r2, [r2, #0]
 5309 2d7c 012682E3 		orr	r2, r2, #1048576
 5310 2d80 002083E5 		str	r2, [r3, #0]
 524:../proyecto.c **** 		ZDCON0   = 1;                                                                   // start DMA
 5311              		.loc 1 524 0
 5312 2d84 7A37A0E3 		mov	r3, #31981568
 5313 2d88 0120A0E3 		mov	r2, #1
 5314 2d8c 002083E5 		str	r2, [r3, #0]
 525:../proyecto.c **** 		while( ZDCCNT0 & 0xFFFFF );                                                     // Espera a que l
 5315              		.loc 1 525 0
 5316 2d90 0000A0E1 		mov	r0, r0	@ nop
 5317              	.L65:
 5318              		.loc 1 525 0 is_stmt 0 discriminator 1
 5319 2d94 7C319FE5 		ldr	r3, .L69+12
 5320 2d98 003093E5 		ldr	r3, [r3, #0]
 5321 2d9c FF34C3E3 		bic	r3, r3, #-16777216
 5322 2da0 0F36C3E3 		bic	r3, r3, #15728640
 5323 2da4 000053E3 		cmp	r3, #0
 5324 2da8 F9FFFF1A 		bne	.L65
 526:../proyecto.c **** 		break;
 5325              		.loc 1 526 0 is_stmt 1
 5326 2dac 530000EA 		b	.L58
 5327              	.L61:
 527:../proyecto.c **** 	case RIGHT:                                                                         // Al ser un d
 528:../proyecto.c **** 		ZDISRC0  = (0 << 30) | (2 << 28) | (uint32) (origen);   						// datos de 8b, dirección POST-INCR
 5328              		.loc 1 528 0
 5329 2db0 54319FE5 		ldr	r3, .L69
 5330 2db4 14201BE5 		ldr	r2, [fp, #-20]
 5331 2db8 022282E3 		orr	r2, r2, #536870912
 5332 2dbc 002083E5 		str	r2, [r3, #0]
 529:../proyecto.c **** 		ZDIDES0  = (2 << 30) | (2 << 28) | (uint32) (destino);   	  					// recomendada, dirección POST-I
 5333              		.loc 1 529 0
 5334 2dc0 48319FE5 		ldr	r3, .L69+4
 5335 2dc4 18201BE5 		ldr	r2, [fp, #-24]
 5336 2dc8 0A2282E3 		orr	r2, r2, #-1610612736
 5337 2dcc 002083E5 		str	r2, [r3, #0]
 530:../proyecto.c **** 		ZDICNT0  = (2 << 28) | (1 << 26) | (0 << 22) | (0 << 21) | (size);       		// whole service, unit
 5338              		.loc 1 530 0
 5339 2dd0 3C319FE5 		ldr	r3, .L69+8
 5340 2dd4 BA215BE1 		ldrh	r2, [fp, #-26]
 5341 2dd8 092382E3 		orr	r2, r2, #603979776
 5342 2ddc 002083E5 		str	r2, [r3, #0]
 531:../proyecto.c **** 		ZDICNT0 |= (1 << 20);                                                           // enable DMA (se
 5343              		.loc 1 531 0
 5344 2de0 2C319FE5 		ldr	r3, .L69+8
 5345 2de4 28219FE5 		ldr	r2, .L69+8
 5346 2de8 002092E5 		ldr	r2, [r2, #0]
 5347 2dec 012682E3 		orr	r2, r2, #1048576
 5348 2df0 002083E5 		str	r2, [r3, #0]
 532:../proyecto.c **** 		ZDCON0   = 1;                                                                   // start DMA
 5349              		.loc 1 532 0
 5350 2df4 7A37A0E3 		mov	r3, #31981568
 5351 2df8 0120A0E3 		mov	r2, #1
 5352 2dfc 002083E5 		str	r2, [r3, #0]
 533:../proyecto.c **** 		while( ZDCCNT0 & 0xFFFFF );                                                     // Espera a que l
 5353              		.loc 1 533 0
 5354 2e00 0000A0E1 		mov	r0, r0	@ nop
 5355              	.L66:
 5356              		.loc 1 533 0 is_stmt 0 discriminator 1
 5357 2e04 0C319FE5 		ldr	r3, .L69+12
 5358 2e08 003093E5 		ldr	r3, [r3, #0]
 5359 2e0c FF34C3E3 		bic	r3, r3, #-16777216
 5360 2e10 0F36C3E3 		bic	r3, r3, #15728640
 5361 2e14 000053E3 		cmp	r3, #0
 5362 2e18 F9FFFF1A 		bne	.L66
 534:../proyecto.c **** 		break;
 5363              		.loc 1 534 0 is_stmt 1
 5364 2e1c 370000EA 		b	.L58
 5365              	.L62:
 535:../proyecto.c **** 	case UP:                                                                            // Al ser un d
 536:../proyecto.c **** 		ZDISRC0  = (0 << 30) | (1 << 28) | (uint32) (origen);       					// datos de 8b, dirección POST-D
 5366              		.loc 1 536 0
 5367 2e20 E4309FE5 		ldr	r3, .L69
 5368 2e24 14201BE5 		ldr	r2, [fp, #-20]
 5369 2e28 012282E3 		orr	r2, r2, #268435456
 5370 2e2c 002083E5 		str	r2, [r3, #0]
 537:../proyecto.c **** 		ZDIDES0  = (2 << 30) | (1 << 28) | (uint32) (destino);            				// recomendada, dirección P
 5371              		.loc 1 537 0
 5372 2e30 D8309FE5 		ldr	r3, .L69+4
 5373 2e34 18201BE5 		ldr	r2, [fp, #-24]
 5374 2e38 092282E3 		orr	r2, r2, #-1879048192
 5375 2e3c 002083E5 		str	r2, [r3, #0]
 538:../proyecto.c **** 		ZDICNT0  = (2 << 28) | (1 << 26) | (0 << 22) | (0 << 21) | (size); 	    		// whole service, unit 
 5376              		.loc 1 538 0
 5377 2e40 CC309FE5 		ldr	r3, .L69+8
 5378 2e44 BA215BE1 		ldrh	r2, [fp, #-26]
 5379 2e48 092382E3 		orr	r2, r2, #603979776
 5380 2e4c 002083E5 		str	r2, [r3, #0]
 539:../proyecto.c **** 		ZDICNT0 |= (1 << 20);                                                           // enable DMA (se
 5381              		.loc 1 539 0
 5382 2e50 BC309FE5 		ldr	r3, .L69+8
 5383 2e54 B8209FE5 		ldr	r2, .L69+8
 5384 2e58 002092E5 		ldr	r2, [r2, #0]
 5385 2e5c 012682E3 		orr	r2, r2, #1048576
 5386 2e60 002083E5 		str	r2, [r3, #0]
 540:../proyecto.c **** 		ZDCON0   = 1 ;                                                                  // start DMA
 5387              		.loc 1 540 0
 5388 2e64 7A37A0E3 		mov	r3, #31981568
 5389 2e68 0120A0E3 		mov	r2, #1
 5390 2e6c 002083E5 		str	r2, [r3, #0]
 541:../proyecto.c **** 		while(ZDCCNT0 & 0xFFFFF);                                                       // Espera a que l
 5391              		.loc 1 541 0
 5392 2e70 0000A0E1 		mov	r0, r0	@ nop
 5393              	.L67:
 5394              		.loc 1 541 0 is_stmt 0 discriminator 1
 5395 2e74 9C309FE5 		ldr	r3, .L69+12
 5396 2e78 003093E5 		ldr	r3, [r3, #0]
 5397 2e7c FF34C3E3 		bic	r3, r3, #-16777216
 5398 2e80 0F36C3E3 		bic	r3, r3, #15728640
 5399 2e84 000053E3 		cmp	r3, #0
 5400 2e88 F9FFFF1A 		bne	.L67
 542:../proyecto.c **** 		break;
 5401              		.loc 1 542 0 is_stmt 1
 5402 2e8c 1B0000EA 		b	.L58
 5403              	.L63:
 543:../proyecto.c **** 	case DOWN:                                                                          // Al ser un d
 544:../proyecto.c **** 		ZDISRC0  = (0 << 30) | (2 << 28) | (uint32) (origen); 							// datos de 8b, dirección POST-DECRE
 5404              		.loc 1 544 0
 5405 2e90 74309FE5 		ldr	r3, .L69
 5406 2e94 14201BE5 		ldr	r2, [fp, #-20]
 5407 2e98 022282E3 		orr	r2, r2, #536870912
 5408 2e9c 002083E5 		str	r2, [r3, #0]
 545:../proyecto.c **** 		ZDIDES0  = (2 << 30) | (2 << 28) | (uint32)(destino);       					// recomendada, dirección POST-D
 5409              		.loc 1 545 0
 5410 2ea0 68309FE5 		ldr	r3, .L69+4
 5411 2ea4 18201BE5 		ldr	r2, [fp, #-24]
 5412 2ea8 0A2282E3 		orr	r2, r2, #-1610612736
 5413 2eac 002083E5 		str	r2, [r3, #0]
 546:../proyecto.c **** 		ZDICNT0  = (2 << 28) | (1 << 26) | (0 << 22) | (0 << 21) | (size); 	  			// whole service, unit t
 5414              		.loc 1 546 0
 5415 2eb0 5C309FE5 		ldr	r3, .L69+8
 5416 2eb4 BA215BE1 		ldrh	r2, [fp, #-26]
 5417 2eb8 092382E3 		orr	r2, r2, #603979776
 5418 2ebc 002083E5 		str	r2, [r3, #0]
 547:../proyecto.c **** 		ZDICNT0 |= (1 << 20);                                                           // enable DMA (se
 5419              		.loc 1 547 0
 5420 2ec0 4C309FE5 		ldr	r3, .L69+8
 5421 2ec4 48209FE5 		ldr	r2, .L69+8
 5422 2ec8 002092E5 		ldr	r2, [r2, #0]
 5423 2ecc 012682E3 		orr	r2, r2, #1048576
 5424 2ed0 002083E5 		str	r2, [r3, #0]
 548:../proyecto.c **** 		ZDCON0   = 1 ;                                                                  // start DMA
 5425              		.loc 1 548 0
 5426 2ed4 7A37A0E3 		mov	r3, #31981568
 5427 2ed8 0120A0E3 		mov	r2, #1
 5428 2edc 002083E5 		str	r2, [r3, #0]
 549:../proyecto.c **** 		while(ZDCCNT0 & 0xFFFFF);                                                       // Espera a que l
 5429              		.loc 1 549 0
 5430 2ee0 0000A0E1 		mov	r0, r0	@ nop
 5431              	.L68:
 5432              		.loc 1 549 0 is_stmt 0 discriminator 1
 5433 2ee4 2C309FE5 		ldr	r3, .L69+12
 5434 2ee8 003093E5 		ldr	r3, [r3, #0]
 5435 2eec FF34C3E3 		bic	r3, r3, #-16777216
 5436 2ef0 0F36C3E3 		bic	r3, r3, #15728640
 5437 2ef4 000053E3 		cmp	r3, #0
 5438 2ef8 F9FFFF1A 		bne	.L68
 550:../proyecto.c **** 		break;
 5439              		.loc 1 550 0 is_stmt 1
 5440 2efc 0000A0E1 		mov	r0, r0	@ nop
 5441              	.L58:
 551:../proyecto.c **** 	}
 552:../proyecto.c **** }
 5442              		.loc 1 552 0
 5443 2f00 0CD04BE2 		sub	sp, fp, #12
 5444 2f04 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5445 2f08 1EFF2FE1 		bx	lr
 5446              	.L70:
 5447              		.align	2
 5448              	.L69:
 5449 2f0c 0400E801 		.word	31981572
 5450 2f10 0800E801 		.word	31981576
 5451 2f14 0C00E801 		.word	31981580
 5452 2f18 1800E801 		.word	31981592
 5453              		.cfi_endproc
 5454              	.LFE7:
 5456              		.align	2
 5457              		.global	efectoNulo
 5459              	efectoNulo:
 5460              	.LFB8:
 553:../proyecto.c **** 
 554:../proyecto.c **** /*******************************************************************/
 555:../proyecto.c **** 
 556:../proyecto.c **** /*
 557:../proyecto.c ****  ** Efecto nulo: Muestra la foto sin hacer efecto alguno
 558:../proyecto.c ****  **
 559:../proyecto.c ****  ** Incluido por homogeneidad
 560:../proyecto.c ****  */
 561:../proyecto.c **** 
 562:../proyecto.c **** void efectoNulo( uint8 *photo, uint8 sense )
 563:../proyecto.c **** {
 5461              		.loc 1 563 0
 5462              		.cfi_startproc
 5463              		@ Function supports interworking.
 5464              		@ args = 0, pretend = 0, frame = 8
 5465              		@ frame_needed = 1, uses_anonymous_args = 0
 5466 2f1c 0DC0A0E1 		mov	ip, sp
 5467              	.LCFI16:
 5468              		.cfi_def_cfa_register 12
 5469 2f20 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5470 2f24 04B04CE2 		sub	fp, ip, #4
 5471              		.cfi_offset 14, -8
 5472              		.cfi_offset 13, -12
 5473              		.cfi_offset 11, -16
 5474              	.LCFI17:
 5475              		.cfi_def_cfa 11, 4
 5476 2f28 08D04DE2 		sub	sp, sp, #8
 5477 2f2c 10000BE5 		str	r0, [fp, #-16]
 5478 2f30 0130A0E1 		mov	r3, r1
 5479 2f34 11304BE5 		strb	r3, [fp, #-17]
 564:../proyecto.c **** 	switch( sense )
 565:../proyecto.c **** 	{
 566:../proyecto.c **** 	default:
 567:../proyecto.c **** 		lcd_putPhoto( photo );
 5480              		.loc 1 567 0
 5481 2f38 10001BE5 		ldr	r0, [fp, #-16]
 5482 2f3c FEFFFFEB 		bl	lcd_putPhoto
 568:../proyecto.c **** 		break;
 569:../proyecto.c **** 	}
 570:../proyecto.c **** }
 5483              		.loc 1 570 0
 5484 2f40 0CD04BE2 		sub	sp, fp, #12
 5485 2f44 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5486 2f48 1EFF2FE1 		bx	lr
 5487              		.cfi_endproc
 5488              	.LFE8:
 5490              		.align	2
 5491              		.global	efectoEmpuje
 5493              	efectoEmpuje:
 5494              	.LFB9:
 571:../proyecto.c **** 
 572:../proyecto.c **** /*
 573:../proyecto.c ****  ** Efecto empuje: La nueva imagen hace un scroll conjunto con la imagen mostrada
 574:../proyecto.c ****  **
 575:../proyecto.c ****  ** Deberá completarse en el proyecto final
 576:../proyecto.c ****  */
 577:../proyecto.c **** 
 578:../proyecto.c **** void efectoEmpuje( uint8 *photo, uint8 sense )
 579:../proyecto.c **** {
 5495              		.loc 1 579 0
 5496              		.cfi_startproc
 5497              		@ Function supports interworking.
 5498              		@ args = 0, pretend = 0, frame = 16
 5499              		@ frame_needed = 1, uses_anonymous_args = 0
 5500 2f4c 0DC0A0E1 		mov	ip, sp
 5501              	.LCFI18:
 5502              		.cfi_def_cfa_register 12
 5503 2f50 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5504 2f54 04B04CE2 		sub	fp, ip, #4
 5505              		.cfi_offset 14, -8
 5506              		.cfi_offset 13, -12
 5507              		.cfi_offset 11, -16
 5508              	.LCFI19:
 5509              		.cfi_def_cfa 11, 4
 5510 2f58 10D04DE2 		sub	sp, sp, #16
 5511 2f5c 18000BE5 		str	r0, [fp, #-24]
 5512 2f60 0130A0E1 		mov	r3, r1
 5513 2f64 19304BE5 		strb	r3, [fp, #-25]
 580:../proyecto.c **** 	int16 x, y;
 581:../proyecto.c **** 
 582:../proyecto.c **** 	switch( sense )
 5514              		.loc 1 582 0
 5515 2f68 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 5516 2f6c 030053E3 		cmp	r3, #3
 5517 2f70 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 5518 2f74 900000EA 		b	.L72
 5519              	.L78:
 5520 2f78 882F0000 		.word	.L74
 5521 2f7c 3C300000 		.word	.L75
 5522 2f80 FC300000 		.word	.L76
 5523 2f84 5C310000 		.word	.L77
 5524              	.L74:
 583:../proyecto.c **** 	{
 584:../proyecto.c **** 	/* - Recorre la foto por columnas de izquierda a derecha
 585:../proyecto.c **** 	 * - Desplaza toda la pantalla una columna a la izquierda
 586:../proyecto.c **** 	 * 		origen: posición de la segunda columna de la fila correspondiente
 587:../proyecto.c **** 	 * 		destino: posición de la primera columna de la fila correspondiente
 588:../proyecto.c **** 	 * 		tamaño: el de columnas menos una
 589:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la ultima columna de la pantalla
 590:../proyecto.c **** 	 */
 591:../proyecto.c **** 	case LEFT:
 592:../proyecto.c **** 		for( x=0; x<=LCD_COLS-1; x++ )
 5525              		.loc 1 592 0
 5526 2f88 0030A0E3 		mov	r3, #0
 5527 2f8c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5528 2f90 250000EA 		b	.L79
 5529              	.L82:
 593:../proyecto.c **** 		{
 594:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 5530              		.loc 1 594 0
 5531 2f94 0030A0E3 		mov	r3, #0
 5532 2f98 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5533 2f9c 170000EA 		b	.L80
 5534              	.L81:
 595:../proyecto.c **** 				lcd_shift(LEFT, (uint32) lcd_buffer + (y * LCD_COLS) + 1, (uint32) lcd_buffer + (y * LCD_COLS),
 5535              		.loc 1 595 0 discriminator 2
 5536 2fa0 F0215BE1 		ldrsh	r2, [fp, #-16]
 5537 2fa4 0230A0E1 		mov	r3, r2
 5538 2fa8 0331A0E1 		mov	r3, r3, asl #2
 5539 2fac 023083E0 		add	r3, r3, r2
 5540 2fb0 8332A0E1 		mov	r3, r3, asl #5
 5541 2fb4 0320A0E1 		mov	r2, r3
 5542 2fb8 08329FE5 		ldr	r3, .L91
 5543 2fbc 013083E2 		add	r3, r3, #1
 5544 2fc0 031082E0 		add	r1, r2, r3
 5545 2fc4 F0215BE1 		ldrsh	r2, [fp, #-16]
 5546 2fc8 0230A0E1 		mov	r3, r2
 5547 2fcc 0331A0E1 		mov	r3, r3, asl #2
 5548 2fd0 023083E0 		add	r3, r3, r2
 5549 2fd4 8332A0E1 		mov	r3, r3, asl #5
 5550 2fd8 0320A0E1 		mov	r2, r3
 5551 2fdc E4319FE5 		ldr	r3, .L91
 5552 2fe0 033082E0 		add	r3, r2, r3
 5553 2fe4 0000A0E3 		mov	r0, #0
 5554 2fe8 0320A0E1 		mov	r2, r3
 5555 2fec 9F30A0E3 		mov	r3, #159
 5556 2ff0 FEFFFFEB 		bl	lcd_shift
 594:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 5557              		.loc 1 594 0 discriminator 2
 5558 2ff4 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 5559 2ff8 013083E2 		add	r3, r3, #1
 5560 2ffc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5561              	.L80:
 594:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 5562              		.loc 1 594 0 is_stmt 0 discriminator 1
 5563 3000 F0315BE1 		ldrsh	r3, [fp, #-16]
 5564 3004 EF0053E3 		cmp	r3, #239
 5565 3008 E4FFFFDA 		ble	.L81
 596:../proyecto.c **** 			}
 597:../proyecto.c **** 			lcd_putColumn( LCD_COLS-1, photo, x );    //
 5566              		.loc 1 597 0 is_stmt 1
 5567 300c BE305BE1 		ldrh	r3, [fp, #-14]
 5568 3010 9F00A0E3 		mov	r0, #159
 5569 3014 18101BE5 		ldr	r1, [fp, #-24]
 5570 3018 0320A0E1 		mov	r2, r3
 5571 301c FEFFFFEB 		bl	lcd_putColumn
 592:../proyecto.c **** 		for( x=0; x<=LCD_COLS-1; x++ )
 5572              		.loc 1 592 0
 5573 3020 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 5574 3024 013083E2 		add	r3, r3, #1
 5575 3028 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5576              	.L79:
 592:../proyecto.c **** 		for( x=0; x<=LCD_COLS-1; x++ )
 5577              		.loc 1 592 0 is_stmt 0 discriminator 1
 5578 302c FE305BE1 		ldrsh	r3, [fp, #-14]
 5579 3030 9F0053E3 		cmp	r3, #159
 5580 3034 D6FFFFDA 		ble	.L82
 598:../proyecto.c **** 		}
 599:../proyecto.c **** 		break;
 5581              		.loc 1 599 0 is_stmt 1
 5582 3038 5F0000EA 		b	.L72
 5583              	.L75:
 600:../proyecto.c **** 	/* - Recorre la foto por columnas de derecha a izquierda
 601:../proyecto.c **** 	 * - Desplaza toda la pantalla una columna a la derecha
 602:../proyecto.c **** 	 * 		origen: posición de la penultima columna de la fila correspondiente
 603:../proyecto.c **** 	 * 		destino: posición de la ultima columna de la fila correspondiente
 604:../proyecto.c **** 	 * 		tamaño: el de columnas menos una
 605:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la primera columna de la pantalla
 606:../proyecto.c **** 	*/
 607:../proyecto.c **** 	case RIGHT:
 608:../proyecto.c **** 		for( x = LCD_COLS - 1; x >= 0; --x)
 5584              		.loc 1 608 0
 5585 303c 9F30A0E3 		mov	r3, #159
 5586 3040 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5587 3044 280000EA 		b	.L83
 5588              	.L86:
 609:../proyecto.c **** 		{
 610:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 5589              		.loc 1 610 0
 5590 3048 0030A0E3 		mov	r3, #0
 5591 304c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5592 3050 1A0000EA 		b	.L84
 5593              	.L85:
 611:../proyecto.c **** 				lcd_shift( RIGHT, (uint32) lcd_buffer + (y*LCD_COLS) + LCD_COLS - 2,  (uint32) lcd_buffer + (y*
 5594              		.loc 1 611 0 discriminator 2
 5595 3054 F0215BE1 		ldrsh	r2, [fp, #-16]
 5596 3058 0230A0E1 		mov	r3, r2
 5597 305c 0331A0E1 		mov	r3, r3, asl #2
 5598 3060 023083E0 		add	r3, r3, r2
 5599 3064 8332A0E1 		mov	r3, r3, asl #5
 5600 3068 0320A0E1 		mov	r2, r3
 5601 306c 54319FE5 		ldr	r3, .L91
 5602 3070 A03083E2 		add	r3, r3, #160
 5603 3074 023043E2 		sub	r3, r3, #2
 5604 3078 031082E0 		add	r1, r2, r3
 5605 307c F0215BE1 		ldrsh	r2, [fp, #-16]
 5606 3080 0230A0E1 		mov	r3, r2
 5607 3084 0331A0E1 		mov	r3, r3, asl #2
 5608 3088 023083E0 		add	r3, r3, r2
 5609 308c 8332A0E1 		mov	r3, r3, asl #5
 5610 3090 0320A0E1 		mov	r2, r3
 5611 3094 2C319FE5 		ldr	r3, .L91
 5612 3098 A03083E2 		add	r3, r3, #160
 5613 309c 013043E2 		sub	r3, r3, #1
 5614 30a0 033082E0 		add	r3, r2, r3
 5615 30a4 0100A0E3 		mov	r0, #1
 5616 30a8 0320A0E1 		mov	r2, r3
 5617 30ac 9F30A0E3 		mov	r3, #159
 5618 30b0 FEFFFFEB 		bl	lcd_shift
 610:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 5619              		.loc 1 610 0 discriminator 2
 5620 30b4 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 5621 30b8 013083E2 		add	r3, r3, #1
 5622 30bc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5623              	.L84:
 610:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 5624              		.loc 1 610 0 is_stmt 0 discriminator 1
 5625 30c0 F0315BE1 		ldrsh	r3, [fp, #-16]
 5626 30c4 EF0053E3 		cmp	r3, #239
 5627 30c8 E1FFFFDA 		ble	.L85
 612:../proyecto.c **** 			}
 613:../proyecto.c **** 			lcd_putColumn( 0, photo, x);
 5628              		.loc 1 613 0 is_stmt 1
 5629 30cc BE305BE1 		ldrh	r3, [fp, #-14]
 5630 30d0 0000A0E3 		mov	r0, #0
 5631 30d4 18101BE5 		ldr	r1, [fp, #-24]
 5632 30d8 0320A0E1 		mov	r2, r3
 5633 30dc FEFFFFEB 		bl	lcd_putColumn
 608:../proyecto.c **** 		for( x = LCD_COLS - 1; x >= 0; --x)
 5634              		.loc 1 608 0
 5635 30e0 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 5636 30e4 013043E2 		sub	r3, r3, #1
 5637 30e8 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5638              	.L83:
 608:../proyecto.c **** 		for( x = LCD_COLS - 1; x >= 0; --x)
 5639              		.loc 1 608 0 is_stmt 0 discriminator 1
 5640 30ec FE305BE1 		ldrsh	r3, [fp, #-14]
 5641 30f0 000053E3 		cmp	r3, #0
 5642 30f4 D3FFFFAA 		bge	.L86
 614:../proyecto.c **** 		}
 615:../proyecto.c **** 		break;
 5643              		.loc 1 615 0 is_stmt 1
 5644 30f8 2F0000EA 		b	.L72
 5645              	.L76:
 616:../proyecto.c **** 	/* - Recorre la foto por filas de arriba a abajo
 617:../proyecto.c **** 	 * - Desplaza toda la pantalla una fila arriba
 618:../proyecto.c **** 	 * 		origen: posición de la primera columna de la segunda fila
 619:../proyecto.c **** 	 * 		destino: posición de la primera columna de la primera fila
 620:../proyecto.c **** 	 * 		tamaño: el de columnas por filas menos uno
 621:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la ultima fila de la pantalla
 622:../proyecto.c **** 	 */
 623:../proyecto.c **** 	case UP:
 624:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)
 5646              		.loc 1 624 0
 5647 30fc 0030A0E3 		mov	r3, #0
 5648 3100 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5649 3104 100000EA 		b	.L87
 5650              	.L88:
 625:../proyecto.c **** 		{
 626:../proyecto.c **** 			lcd_shift( UP, (uint32) (lcd_buffer + ((0 + 1)*LCD_COLS)), (uint32) (lcd_buffer + (0*LCD_COLS)),
 5651              		.loc 1 626 0 discriminator 2
 5652 3108 BC209FE5 		ldr	r2, .L91+4
 5653 310c B4309FE5 		ldr	r3, .L91
 5654 3110 0200A0E3 		mov	r0, #2
 5655 3114 0210A0E1 		mov	r1, r2
 5656 3118 0320A0E1 		mov	r2, r3
 5657 311c AC309FE5 		ldr	r3, .L91+8
 5658 3120 FEFFFFEB 		bl	lcd_shift
 627:../proyecto.c **** 			lcd_putRow( LCD_ROWS - 1, photo, y );
 5659              		.loc 1 627 0 discriminator 2
 5660 3124 B0315BE1 		ldrh	r3, [fp, #-16]
 5661 3128 EF00A0E3 		mov	r0, #239
 5662 312c 18101BE5 		ldr	r1, [fp, #-24]
 5663 3130 0320A0E1 		mov	r2, r3
 5664 3134 FEFFFFEB 		bl	lcd_putRow
 628:../proyecto.c **** 			sw_delay_ms( 10 );
 5665              		.loc 1 628 0 discriminator 2
 5666 3138 0A00A0E3 		mov	r0, #10
 5667 313c FEFFFFEB 		bl	sw_delay_ms
 624:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)
 5668              		.loc 1 624 0 discriminator 2
 5669 3140 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 5670 3144 013083E2 		add	r3, r3, #1
 5671 3148 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5672              	.L87:
 624:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)
 5673              		.loc 1 624 0 is_stmt 0 discriminator 1
 5674 314c F0315BE1 		ldrsh	r3, [fp, #-16]
 5675 3150 EF0053E3 		cmp	r3, #239
 5676 3154 EBFFFFDA 		ble	.L88
 629:../proyecto.c **** 		}
 630:../proyecto.c **** 		break;
 5677              		.loc 1 630 0 is_stmt 1
 5678 3158 170000EA 		b	.L72
 5679              	.L77:
 631:../proyecto.c **** 	/* - Recorre la foto por filas de abajo a arriba
 632:../proyecto.c **** 	 * - Desplaza toda la pantalla una fila abajo
 633:../proyecto.c **** 	 * 		origen: posición de la primera columna de la penúltima fila
 634:../proyecto.c **** 	 * 		destino: posición de la primera columna de la última fila
 635:../proyecto.c **** 	 * 		tamaño: el de columnas por filas
 636:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la primera fila de la pantalla
 637:../proyecto.c **** 	 */
 638:../proyecto.c **** 	case DOWN:
 639:../proyecto.c **** 		for(y = LCD_ROWS - 1; y >= 0; --y)
 5680              		.loc 1 639 0
 5681 315c EF30A0E3 		mov	r3, #239
 5682 3160 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5683 3164 100000EA 		b	.L89
 5684              	.L90:
 640:../proyecto.c **** 		{
 641:../proyecto.c **** 			lcd_shift( DOWN,  (uint32) (lcd_buffer + ((LCD_ROWS - 1)*LCD_COLS)), (uint32) (lcd_buffer + (LCD
 5685              		.loc 1 641 0 discriminator 2
 5686 3168 64209FE5 		ldr	r2, .L91+12
 5687 316c 64309FE5 		ldr	r3, .L91+16
 5688 3170 0300A0E3 		mov	r0, #3
 5689 3174 0210A0E1 		mov	r1, r2
 5690 3178 0320A0E1 		mov	r2, r3
 5691 317c 963CA0E3 		mov	r3, #38400
 5692 3180 FEFFFFEB 		bl	lcd_shift
 642:../proyecto.c **** 			lcd_putRow( 0, photo, y );
 5693              		.loc 1 642 0 discriminator 2
 5694 3184 B0315BE1 		ldrh	r3, [fp, #-16]
 5695 3188 0000A0E3 		mov	r0, #0
 5696 318c 18101BE5 		ldr	r1, [fp, #-24]
 5697 3190 0320A0E1 		mov	r2, r3
 5698 3194 FEFFFFEB 		bl	lcd_putRow
 643:../proyecto.c **** 			sw_delay_ms( 10 );
 5699              		.loc 1 643 0 discriminator 2
 5700 3198 0A00A0E3 		mov	r0, #10
 5701 319c FEFFFFEB 		bl	sw_delay_ms
 639:../proyecto.c **** 		for(y = LCD_ROWS - 1; y >= 0; --y)
 5702              		.loc 1 639 0 discriminator 2
 5703 31a0 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 5704 31a4 013043E2 		sub	r3, r3, #1
 5705 31a8 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5706              	.L89:
 639:../proyecto.c **** 		for(y = LCD_ROWS - 1; y >= 0; --y)
 5707              		.loc 1 639 0 is_stmt 0 discriminator 1
 5708 31ac F0315BE1 		ldrsh	r3, [fp, #-16]
 5709 31b0 000053E3 		cmp	r3, #0
 5710 31b4 EBFFFFAA 		bge	.L90
 644:../proyecto.c **** 		}
 645:../proyecto.c **** 		break;
 5711              		.loc 1 645 0 is_stmt 1
 5712 31b8 0000A0E1 		mov	r0, r0	@ nop
 5713              	.L72:
 646:../proyecto.c **** 	}
 647:../proyecto.c **** }
 5714              		.loc 1 647 0
 5715 31bc 0CD04BE2 		sub	sp, fp, #12
 5716 31c0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5717 31c4 1EFF2FE1 		bx	lr
 5718              	.L92:
 5719              		.align	2
 5720              	.L91:
 5721 31c8 00000000 		.word	lcd_buffer
 5722 31cc A0000000 		.word	lcd_buffer+160
 5723 31d0 60950000 		.word	38240
 5724 31d4 60950000 		.word	lcd_buffer+38240
 5725 31d8 00960000 		.word	lcd_buffer+38400
 5726              		.cfi_endproc
 5727              	.LFE9:
 5729              		.align	2
 5730              		.global	efectoBarrido
 5732              	efectoBarrido:
 5733              	.LFB10:
 648:../proyecto.c **** 
 649:../proyecto.c **** /*
 650:../proyecto.c ****  ** Efecto barrido: La nueva imagen se superpone progresivamente sobre la imagen mostrada desde un 
 651:../proyecto.c ****  */
 652:../proyecto.c **** 
 653:../proyecto.c **** void efectoBarrido( uint8 *photo, uint8 sense )
 654:../proyecto.c **** {
 5734              		.loc 1 654 0
 5735              		.cfi_startproc
 5736              		@ Function supports interworking.
 5737              		@ args = 0, pretend = 0, frame = 16
 5738              		@ frame_needed = 1, uses_anonymous_args = 0
 5739 31dc 0DC0A0E1 		mov	ip, sp
 5740              	.LCFI20:
 5741              		.cfi_def_cfa_register 12
 5742 31e0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5743 31e4 04B04CE2 		sub	fp, ip, #4
 5744              		.cfi_offset 14, -8
 5745              		.cfi_offset 13, -12
 5746              		.cfi_offset 11, -16
 5747              	.LCFI21:
 5748              		.cfi_def_cfa 11, 4
 5749 31e8 10D04DE2 		sub	sp, sp, #16
 5750 31ec 18000BE5 		str	r0, [fp, #-24]
 5751 31f0 0130A0E1 		mov	r3, r1
 5752 31f4 19304BE5 		strb	r3, [fp, #-25]
 655:../proyecto.c **** 	int16 x, y;
 656:../proyecto.c **** 
 657:../proyecto.c **** 	switch( sense )
 5753              		.loc 1 657 0
 5754 31f8 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 5755 31fc 030053E3 		cmp	r3, #3
 5756 3200 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 5757 3204 4B0000EA 		b	.L93
 5758              	.L99:
 5759 3208 18320000 		.word	.L95
 5760 320c 60320000 		.word	.L96
 5761 3210 A8320000 		.word	.L97
 5762 3214 F0320000 		.word	.L98
 5763              	.L95:
 658:../proyecto.c **** 	{
 659:../proyecto.c **** 	case LEFT:											// NO puede hacerse por DMA porque los pixeles de una columna no ocupan posic
 660:../proyecto.c **** 		for( x=LCD_COLS-1; x >= 0; x-- )                // Recorre la foto por columnas de derecha a izqu
 5764              		.loc 1 660 0
 5765 3218 9F30A0E3 		mov	r3, #159
 5766 321c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5767 3220 0A0000EA 		b	.L100
 5768              	.L101:
 661:../proyecto.c **** 		{
 662:../proyecto.c **** 			lcd_putColumn( x, photo, x);    			// Visualiza la columna de la foto que corresponde en la  col
 5769              		.loc 1 662 0 discriminator 2
 5770 3224 BE205BE1 		ldrh	r2, [fp, #-14]
 5771 3228 BE305BE1 		ldrh	r3, [fp, #-14]
 5772 322c 0200A0E1 		mov	r0, r2
 5773 3230 18101BE5 		ldr	r1, [fp, #-24]
 5774 3234 0320A0E1 		mov	r2, r3
 5775 3238 FEFFFFEB 		bl	lcd_putColumn
 663:../proyecto.c **** 			sw_delay_ms( 10 );    						// Retarda para que se vea con claridad el efecto
 5776              		.loc 1 663 0 discriminator 2
 5777 323c 0A00A0E3 		mov	r0, #10
 5778 3240 FEFFFFEB 		bl	sw_delay_ms
 660:../proyecto.c **** 		for( x=LCD_COLS-1; x >= 0; x-- )                // Recorre la foto por columnas de derecha a izqu
 5779              		.loc 1 660 0 discriminator 2
 5780 3244 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 5781 3248 013043E2 		sub	r3, r3, #1
 5782 324c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5783              	.L100:
 660:../proyecto.c **** 		for( x=LCD_COLS-1; x >= 0; x-- )                // Recorre la foto por columnas de derecha a izqu
 5784              		.loc 1 660 0 is_stmt 0 discriminator 1
 5785 3250 FE305BE1 		ldrsh	r3, [fp, #-14]
 5786 3254 000053E3 		cmp	r3, #0
 5787 3258 F1FFFFAA 		bge	.L101
 664:../proyecto.c **** 		}
 665:../proyecto.c **** 		break;
 5788              		.loc 1 665 0 is_stmt 1
 5789 325c 350000EA 		b	.L93
 5790              	.L96:
 666:../proyecto.c **** 	case RIGHT:											// NO puede hacerse por DMA porque los pixeles de una columna no ocupan posi
 667:../proyecto.c **** 		for( x=0; x<=LCD_COLS-1; x++ )                  // Recorre la foto por columnas de izquierda a de
 5791              		.loc 1 667 0
 5792 3260 0030A0E3 		mov	r3, #0
 5793 3264 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5794 3268 0A0000EA 		b	.L102
 5795              	.L103:
 668:../proyecto.c **** 		{
 669:../proyecto.c **** 			lcd_putColumn( x , photo, x );        		// Visualiza la columna de la foto que corresponde en la
 5796              		.loc 1 669 0 discriminator 2
 5797 326c BE205BE1 		ldrh	r2, [fp, #-14]
 5798 3270 BE305BE1 		ldrh	r3, [fp, #-14]
 5799 3274 0200A0E1 		mov	r0, r2
 5800 3278 18101BE5 		ldr	r1, [fp, #-24]
 5801 327c 0320A0E1 		mov	r2, r3
 5802 3280 FEFFFFEB 		bl	lcd_putColumn
 670:../proyecto.c **** 			sw_delay_ms( 10 );    						// Retarda para que se vea con claridad el efecto
 5803              		.loc 1 670 0 discriminator 2
 5804 3284 0A00A0E3 		mov	r0, #10
 5805 3288 FEFFFFEB 		bl	sw_delay_ms
 667:../proyecto.c **** 		for( x=0; x<=LCD_COLS-1; x++ )                  // Recorre la foto por columnas de izquierda a de
 5806              		.loc 1 667 0 discriminator 2
 5807 328c BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 5808 3290 013083E2 		add	r3, r3, #1
 5809 3294 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5810              	.L102:
 667:../proyecto.c **** 		for( x=0; x<=LCD_COLS-1; x++ )                  // Recorre la foto por columnas de izquierda a de
 5811              		.loc 1 667 0 is_stmt 0 discriminator 1
 5812 3298 FE305BE1 		ldrsh	r3, [fp, #-14]
 5813 329c 9F0053E3 		cmp	r3, #159
 5814 32a0 F1FFFFDA 		ble	.L103
 671:../proyecto.c **** 		}
 672:../proyecto.c **** 		break;
 5815              		.loc 1 672 0 is_stmt 1
 5816 32a4 230000EA 		b	.L93
 5817              	.L97:
 673:../proyecto.c **** 	case UP:											// lcd_putRow es una función que muestra las filas a través de DMA
 674:../proyecto.c **** 		for(y = LCD_ROWS - 1; y >= 0; --y)    			// Recorre la foto por filas de abajo hacia arriba
 5818              		.loc 1 674 0
 5819 32a8 EF30A0E3 		mov	r3, #239
 5820 32ac B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5821 32b0 0A0000EA 		b	.L104
 5822              	.L105:
 675:../proyecto.c **** 		{
 676:../proyecto.c **** 			lcd_putRow( y, photo, y );                  // Visualiza la fila de la foto que corresponde en l
 5823              		.loc 1 676 0 discriminator 2
 5824 32b4 B0215BE1 		ldrh	r2, [fp, #-16]
 5825 32b8 B0315BE1 		ldrh	r3, [fp, #-16]
 5826 32bc 0200A0E1 		mov	r0, r2
 5827 32c0 18101BE5 		ldr	r1, [fp, #-24]
 5828 32c4 0320A0E1 		mov	r2, r3
 5829 32c8 FEFFFFEB 		bl	lcd_putRow
 677:../proyecto.c **** 			sw_delay_ms( 20 );    						// Retarda porque el efecto por DMA es demasiado rápido
 5830              		.loc 1 677 0 discriminator 2
 5831 32cc 1400A0E3 		mov	r0, #20
 5832 32d0 FEFFFFEB 		bl	sw_delay_ms
 674:../proyecto.c **** 		for(y = LCD_ROWS - 1; y >= 0; --y)    			// Recorre la foto por filas de abajo hacia arriba
 5833              		.loc 1 674 0 discriminator 2
 5834 32d4 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 5835 32d8 013043E2 		sub	r3, r3, #1
 5836 32dc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5837              	.L104:
 674:../proyecto.c **** 		for(y = LCD_ROWS - 1; y >= 0; --y)    			// Recorre la foto por filas de abajo hacia arriba
 5838              		.loc 1 674 0 is_stmt 0 discriminator 1
 5839 32e0 F0315BE1 		ldrsh	r3, [fp, #-16]
 5840 32e4 000053E3 		cmp	r3, #0
 5841 32e8 F1FFFFAA 		bge	.L105
 678:../proyecto.c **** 		}
 679:../proyecto.c **** 		break;
 5842              		.loc 1 679 0 is_stmt 1
 5843 32ec 110000EA 		b	.L93
 5844              	.L98:
 680:../proyecto.c **** 	case DOWN:											// lcd_putRow es una función que muestra las filas a través de DMA
 681:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)    			// Recorre la foto por filas de arriba hacia abajo
 5845              		.loc 1 681 0
 5846 32f0 0030A0E3 		mov	r3, #0
 5847 32f4 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5848 32f8 0A0000EA 		b	.L106
 5849              	.L107:
 682:../proyecto.c **** 		{
 683:../proyecto.c **** 			lcd_putRow( y, photo, y );                  // Visualiza la fila de la foto que corresponde en l
 5850              		.loc 1 683 0 discriminator 2
 5851 32fc B0215BE1 		ldrh	r2, [fp, #-16]
 5852 3300 B0315BE1 		ldrh	r3, [fp, #-16]
 5853 3304 0200A0E1 		mov	r0, r2
 5854 3308 18101BE5 		ldr	r1, [fp, #-24]
 5855 330c 0320A0E1 		mov	r2, r3
 5856 3310 FEFFFFEB 		bl	lcd_putRow
 684:../proyecto.c **** 			sw_delay_ms( 20 );    						// Retarda porque el efecto por DMA es demasiado rápido
 5857              		.loc 1 684 0 discriminator 2
 5858 3314 1400A0E3 		mov	r0, #20
 5859 3318 FEFFFFEB 		bl	sw_delay_ms
 681:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)    			// Recorre la foto por filas de arriba hacia abajo
 5860              		.loc 1 681 0 discriminator 2
 5861 331c B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 5862 3320 013083E2 		add	r3, r3, #1
 5863 3324 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5864              	.L106:
 681:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)    			// Recorre la foto por filas de arriba hacia abajo
 5865              		.loc 1 681 0 is_stmt 0 discriminator 1
 5866 3328 F0315BE1 		ldrsh	r3, [fp, #-16]
 5867 332c EF0053E3 		cmp	r3, #239
 5868 3330 F1FFFFDA 		ble	.L107
 685:../proyecto.c **** 		}
 686:../proyecto.c **** 		break;
 5869              		.loc 1 686 0 is_stmt 1
 5870 3334 0000A0E1 		mov	r0, r0	@ nop
 5871              	.L93:
 687:../proyecto.c **** 	}
 688:../proyecto.c **** }
 5872              		.loc 1 688 0
 5873 3338 0CD04BE2 		sub	sp, fp, #12
 5874 333c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5875 3340 1EFF2FE1 		bx	lr
 5876              		.cfi_endproc
 5877              	.LFE10:
 5879              		.align	2
 5880              		.global	efectoRevelado
 5882              	efectoRevelado:
 5883              	.LFB11:
 689:../proyecto.c **** 
 690:../proyecto.c **** /*
 691:../proyecto.c ****  ** Efecto revelado: La nueva imagen aparece conforme la imagen mostrada desaparece haciendo scroll
 692:../proyecto.c ****  */
 693:../proyecto.c **** 
 694:../proyecto.c **** void efectoRevelado( uint8 *photo, uint8 sense )
 695:../proyecto.c **** {
 5884              		.loc 1 695 0
 5885              		.cfi_startproc
 5886              		@ Function supports interworking.
 5887              		@ args = 0, pretend = 0, frame = 16
 5888              		@ frame_needed = 1, uses_anonymous_args = 0
 5889 3344 0DC0A0E1 		mov	ip, sp
 5890              	.LCFI22:
 5891              		.cfi_def_cfa_register 12
 5892 3348 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5893 334c 04B04CE2 		sub	fp, ip, #4
 5894              		.cfi_offset 14, -8
 5895              		.cfi_offset 13, -12
 5896              		.cfi_offset 11, -16
 5897              	.LCFI23:
 5898              		.cfi_def_cfa 11, 4
 5899 3350 10D04DE2 		sub	sp, sp, #16
 5900 3354 18000BE5 		str	r0, [fp, #-24]
 5901 3358 0130A0E1 		mov	r3, r1
 5902 335c 19304BE5 		strb	r3, [fp, #-25]
 696:../proyecto.c **** 	int16 x, y;
 697:../proyecto.c **** 
 698:../proyecto.c **** 	switch( sense )
 5903              		.loc 1 698 0
 5904 3360 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 5905 3364 030053E3 		cmp	r3, #3
 5906 3368 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 5907 336c B80000EA 		b	.L108
 5908              	.L114:
 5909 3370 80330000 		.word	.L110
 5910 3374 58340000 		.word	.L111
 5911 3378 24350000 		.word	.L112
 5912 337c C8350000 		.word	.L113
 5913              	.L110:
 699:../proyecto.c **** 	{
 700:../proyecto.c **** 	/* - Recorre la foto por columnas de izquierda a derecha
 701:../proyecto.c **** 	 * - Desplaza toda la pantalla una columna a la izquierda
 702:../proyecto.c **** 	 * 		origen: posición de la segunda columna de la fila correspondiente
 703:../proyecto.c **** 	 * 		destino: posición de la primera columna de la fila correspondiente
 704:../proyecto.c **** 	 * 		tamaño: el de columnas menos una menos las que ya tienen la nueva imagen
 705:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la columna correspondiente de la pantalla
 706:../proyecto.c **** 	 */
 707:../proyecto.c **** 	case LEFT:
 708:../proyecto.c **** 		for ( x=0; x<=LCD_COLS-1; x++ ){
 5914              		.loc 1 708 0
 5915 3380 0030A0E3 		mov	r3, #0
 5916 3384 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5917 3388 2E0000EA 		b	.L115
 5918              	.L118:
 709:../proyecto.c **** 			for (y = 0; y < LCD_ROWS; ++y){
 5919              		.loc 1 709 0
 5920 338c 0030A0E3 		mov	r3, #0
 5921 3390 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5922 3394 190000EA 		b	.L116
 5923              	.L117:
 710:../proyecto.c **** 				lcd_shift(LEFT, (uint32) lcd_buffer + (y * LCD_COLS) + 1, (uint32) lcd_buffer + (y * LCD_COLS),
 5924              		.loc 1 710 0 discriminator 2
 5925 3398 F0215BE1 		ldrsh	r2, [fp, #-16]
 5926 339c 0230A0E1 		mov	r3, r2
 5927 33a0 0331A0E1 		mov	r3, r3, asl #2
 5928 33a4 023083E0 		add	r3, r3, r2
 5929 33a8 8332A0E1 		mov	r3, r3, asl #5
 5930 33ac 0320A0E1 		mov	r2, r3
 5931 33b0 A8329FE5 		ldr	r3, .L127
 5932 33b4 013083E2 		add	r3, r3, #1
 5933 33b8 031082E0 		add	r1, r2, r3
 5934 33bc F0215BE1 		ldrsh	r2, [fp, #-16]
 5935 33c0 0230A0E1 		mov	r3, r2
 5936 33c4 0331A0E1 		mov	r3, r3, asl #2
 5937 33c8 023083E0 		add	r3, r3, r2
 5938 33cc 8332A0E1 		mov	r3, r3, asl #5
 5939 33d0 0320A0E1 		mov	r2, r3
 5940 33d4 84329FE5 		ldr	r3, .L127
 5941 33d8 032082E0 		add	r2, r2, r3
 5942 33dc BE305BE1 		ldrh	r3, [fp, #-14]
 5943 33e0 9F3063E2 		rsb	r3, r3, #159
 5944 33e4 0338A0E1 		mov	r3, r3, asl #16
 5945 33e8 2338A0E1 		mov	r3, r3, lsr #16
 5946 33ec 0000A0E3 		mov	r0, #0
 5947 33f0 FEFFFFEB 		bl	lcd_shift
 709:../proyecto.c **** 			for (y = 0; y < LCD_ROWS; ++y){
 5948              		.loc 1 709 0 discriminator 2
 5949 33f4 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 5950 33f8 013083E2 		add	r3, r3, #1
 5951 33fc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5952              	.L116:
 709:../proyecto.c **** 			for (y = 0; y < LCD_ROWS; ++y){
 5953              		.loc 1 709 0 is_stmt 0 discriminator 1
 5954 3400 F0315BE1 		ldrsh	r3, [fp, #-16]
 5955 3404 EF0053E3 		cmp	r3, #239
 5956 3408 E2FFFFDA 		ble	.L117
 711:../proyecto.c **** 			}
 712:../proyecto.c **** 			lcd_putColumn(LCD_COLS - 1 - x, photo, LCD_COLS - 1 - x);
 5957              		.loc 1 712 0 is_stmt 1
 5958 340c BE305BE1 		ldrh	r3, [fp, #-14]
 5959 3410 9F3063E2 		rsb	r3, r3, #159
 5960 3414 0338A0E1 		mov	r3, r3, asl #16
 5961 3418 2328A0E1 		mov	r2, r3, lsr #16
 5962 341c BE305BE1 		ldrh	r3, [fp, #-14]
 5963 3420 9F3063E2 		rsb	r3, r3, #159
 5964 3424 0338A0E1 		mov	r3, r3, asl #16
 5965 3428 2338A0E1 		mov	r3, r3, lsr #16
 5966 342c 0200A0E1 		mov	r0, r2
 5967 3430 18101BE5 		ldr	r1, [fp, #-24]
 5968 3434 0320A0E1 		mov	r2, r3
 5969 3438 FEFFFFEB 		bl	lcd_putColumn
 708:../proyecto.c **** 		for ( x=0; x<=LCD_COLS-1; x++ ){
 5970              		.loc 1 708 0
 5971 343c BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 5972 3440 013083E2 		add	r3, r3, #1
 5973 3444 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5974              	.L115:
 708:../proyecto.c **** 		for ( x=0; x<=LCD_COLS-1; x++ ){
 5975              		.loc 1 708 0 is_stmt 0 discriminator 1
 5976 3448 FE305BE1 		ldrsh	r3, [fp, #-14]
 5977 344c 9F0053E3 		cmp	r3, #159
 5978 3450 CDFFFFDA 		ble	.L118
 713:../proyecto.c **** 		}
 714:../proyecto.c **** 		break;
 5979              		.loc 1 714 0 is_stmt 1
 5980 3454 7E0000EA 		b	.L108
 5981              	.L111:
 715:../proyecto.c **** 	/* - Recorre la foto por columnas de izquierda a derecha
 716:../proyecto.c **** 	 * - Desplaza toda la pantalla una columna a la derecha
 717:../proyecto.c **** 	 * 		origen: posición de la penultima columna de la fila correspondiente
 718:../proyecto.c **** 	 * 		destino: posición de la ultima columna de la fila correspondiente
 719:../proyecto.c **** 	 * 		tamaño: el de columnas menos una menos las que ya tienen la nueva imagen
 720:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la columna correspondiente de la pantalla
 721:../proyecto.c **** 	 */
 722:../proyecto.c **** 	case RIGHT:
 723:../proyecto.c **** 		for(x=0; x<=LCD_COLS-1; x++ )
 5982              		.loc 1 723 0
 5983 3458 0030A0E3 		mov	r3, #0
 5984 345c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 5985 3460 2B0000EA 		b	.L119
 5986              	.L122:
 724:../proyecto.c **** 		{
 725:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 5987              		.loc 1 725 0
 5988 3464 0030A0E3 		mov	r3, #0
 5989 3468 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 5990 346c 1C0000EA 		b	.L120
 5991              	.L121:
 726:../proyecto.c **** 				lcd_shift( RIGHT, (uint32) lcd_buffer + (y*LCD_COLS) + LCD_COLS - 2,  (uint32) lcd_buffer + (y*
 5992              		.loc 1 726 0 discriminator 2
 5993 3470 F0215BE1 		ldrsh	r2, [fp, #-16]
 5994 3474 0230A0E1 		mov	r3, r2
 5995 3478 0331A0E1 		mov	r3, r3, asl #2
 5996 347c 023083E0 		add	r3, r3, r2
 5997 3480 8332A0E1 		mov	r3, r3, asl #5
 5998 3484 0320A0E1 		mov	r2, r3
 5999 3488 D0319FE5 		ldr	r3, .L127
 6000 348c A03083E2 		add	r3, r3, #160
 6001 3490 023043E2 		sub	r3, r3, #2
 6002 3494 031082E0 		add	r1, r2, r3
 6003 3498 F0215BE1 		ldrsh	r2, [fp, #-16]
 6004 349c 0230A0E1 		mov	r3, r2
 6005 34a0 0331A0E1 		mov	r3, r3, asl #2
 6006 34a4 023083E0 		add	r3, r3, r2
 6007 34a8 8332A0E1 		mov	r3, r3, asl #5
 6008 34ac 0320A0E1 		mov	r2, r3
 6009 34b0 A8319FE5 		ldr	r3, .L127
 6010 34b4 A03083E2 		add	r3, r3, #160
 6011 34b8 013043E2 		sub	r3, r3, #1
 6012 34bc 032082E0 		add	r2, r2, r3
 6013 34c0 BE305BE1 		ldrh	r3, [fp, #-14]
 6014 34c4 9F3063E2 		rsb	r3, r3, #159
 6015 34c8 0338A0E1 		mov	r3, r3, asl #16
 6016 34cc 2338A0E1 		mov	r3, r3, lsr #16
 6017 34d0 0100A0E3 		mov	r0, #1
 6018 34d4 FEFFFFEB 		bl	lcd_shift
 725:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 6019              		.loc 1 725 0 discriminator 2
 6020 34d8 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6021 34dc 013083E2 		add	r3, r3, #1
 6022 34e0 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6023              	.L120:
 725:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 6024              		.loc 1 725 0 is_stmt 0 discriminator 1
 6025 34e4 F0315BE1 		ldrsh	r3, [fp, #-16]
 6026 34e8 EF0053E3 		cmp	r3, #239
 6027 34ec DFFFFFDA 		ble	.L121
 727:../proyecto.c **** 			}
 728:../proyecto.c **** 			lcd_putColumn( x, photo, x);
 6028              		.loc 1 728 0 is_stmt 1
 6029 34f0 BE205BE1 		ldrh	r2, [fp, #-14]
 6030 34f4 BE305BE1 		ldrh	r3, [fp, #-14]
 6031 34f8 0200A0E1 		mov	r0, r2
 6032 34fc 18101BE5 		ldr	r1, [fp, #-24]
 6033 3500 0320A0E1 		mov	r2, r3
 6034 3504 FEFFFFEB 		bl	lcd_putColumn
 723:../proyecto.c **** 		for(x=0; x<=LCD_COLS-1; x++ )
 6035              		.loc 1 723 0
 6036 3508 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6037 350c 013083E2 		add	r3, r3, #1
 6038 3510 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6039              	.L119:
 723:../proyecto.c **** 		for(x=0; x<=LCD_COLS-1; x++ )
 6040              		.loc 1 723 0 is_stmt 0 discriminator 1
 6041 3514 FE305BE1 		ldrsh	r3, [fp, #-14]
 6042 3518 9F0053E3 		cmp	r3, #159
 6043 351c D0FFFFDA 		ble	.L122
 729:../proyecto.c **** 		}
 730:../proyecto.c **** 		break;
 6044              		.loc 1 730 0 is_stmt 1
 6045 3520 4B0000EA 		b	.L108
 6046              	.L112:
 731:../proyecto.c **** 	/* - Recorre la foto por filas de arriba a abajo
 732:../proyecto.c **** 	 * - Desplaza toda la pantalla una fila arriba
 733:../proyecto.c **** 	 * 		origen: posición de la primera columna de la segunda fila
 734:../proyecto.c **** 	 * 		destino: posición de la primera columna de la primera fila
 735:../proyecto.c **** 	 * 		tamaño: el de columnas por filas menos uno menos las filas que ya tienen la nueva imagen
 736:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la fila correspondiente de la pantalla
 737:../proyecto.c **** 	 */
 738:../proyecto.c **** 	case UP:
 739:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6047              		.loc 1 739 0
 6048 3524 0030A0E3 		mov	r3, #0
 6049 3528 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6050 352c 210000EA 		b	.L123
 6051              	.L124:
 740:../proyecto.c **** 		{
 741:../proyecto.c **** 			lcd_shift( UP, (uint32) (lcd_buffer + ((0 + 1)*LCD_COLS)), (uint32) (lcd_buffer + (0*LCD_COLS)),
 6052              		.loc 1 741 0 discriminator 2
 6053 3530 2C119FE5 		ldr	r1, .L127+4
 6054 3534 24219FE5 		ldr	r2, .L127
 6055 3538 B0315BE1 		ldrh	r3, [fp, #-16]
 6056 353c 0300A0E1 		mov	r0, r3	@ movhi
 6057 3540 8004A0E1 		mov	r0, r0, asl #9
 6058 3544 000063E0 		rsb	r0, r3, r0
 6059 3548 0001A0E1 		mov	r0, r0, asl #2
 6060 354c 003063E0 		rsb	r3, r3, r0
 6061 3550 8332A0E1 		mov	r3, r3, asl #5
 6062 3554 0338A0E1 		mov	r3, r3, asl #16
 6063 3558 2338A0E1 		mov	r3, r3, lsr #16
 6064 355c 6A3C43E2 		sub	r3, r3, #27136
 6065 3560 A03043E2 		sub	r3, r3, #160
 6066 3564 0338A0E1 		mov	r3, r3, asl #16
 6067 3568 2338A0E1 		mov	r3, r3, lsr #16
 6068 356c 0200A0E3 		mov	r0, #2
 6069 3570 FEFFFFEB 		bl	lcd_shift
 742:../proyecto.c **** 			lcd_putRow( LCD_ROWS - y - 1 , photo,  LCD_ROWS - y - 1);
 6070              		.loc 1 742 0 discriminator 2
 6071 3574 B0315BE1 		ldrh	r3, [fp, #-16]
 6072 3578 EF3063E2 		rsb	r3, r3, #239
 6073 357c 0338A0E1 		mov	r3, r3, asl #16
 6074 3580 2328A0E1 		mov	r2, r3, lsr #16
 6075 3584 B0315BE1 		ldrh	r3, [fp, #-16]
 6076 3588 EF3063E2 		rsb	r3, r3, #239
 6077 358c 0338A0E1 		mov	r3, r3, asl #16
 6078 3590 2338A0E1 		mov	r3, r3, lsr #16
 6079 3594 0200A0E1 		mov	r0, r2
 6080 3598 18101BE5 		ldr	r1, [fp, #-24]
 6081 359c 0320A0E1 		mov	r2, r3
 6082 35a0 FEFFFFEB 		bl	lcd_putRow
 743:../proyecto.c **** 			sw_delay_ms( 10 );
 6083              		.loc 1 743 0 discriminator 2
 6084 35a4 0A00A0E3 		mov	r0, #10
 6085 35a8 FEFFFFEB 		bl	sw_delay_ms
 739:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6086              		.loc 1 739 0 discriminator 2
 6087 35ac B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6088 35b0 013083E2 		add	r3, r3, #1
 6089 35b4 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6090              	.L123:
 739:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6091              		.loc 1 739 0 is_stmt 0 discriminator 1
 6092 35b8 F0315BE1 		ldrsh	r3, [fp, #-16]
 6093 35bc EF0053E3 		cmp	r3, #239
 6094 35c0 DAFFFFDA 		ble	.L124
 744:../proyecto.c **** 		}
 745:../proyecto.c **** 		break;
 6095              		.loc 1 745 0 is_stmt 1
 6096 35c4 220000EA 		b	.L108
 6097              	.L113:
 746:../proyecto.c **** 	/* - Recorre la foto por filas de arriba a abajo
 747:../proyecto.c **** 	 * - Desplaza toda la pantalla una fila abajo
 748:../proyecto.c **** 	 * 		origen: posición de la primera columna de la penúltima fila
 749:../proyecto.c **** 	 * 		destino: posición de la primera columna de la última fila
 750:../proyecto.c **** 	 * 		tamaño: el de columnas por filas menos las filas que ya tienen la nueva imagen
 751:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la fila correspondiente de la pantalla
 752:../proyecto.c **** 	 */
 753:../proyecto.c **** 	case DOWN:
 754:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6098              		.loc 1 754 0
 6099 35c8 0030A0E3 		mov	r3, #0
 6100 35cc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6101 35d0 1B0000EA 		b	.L125
 6102              	.L126:
 755:../proyecto.c **** 		{
 756:../proyecto.c **** 			lcd_shift( DOWN,  (uint32) (lcd_buffer + ((LCD_ROWS - 1)*LCD_COLS)), (uint32) (lcd_buffer + ((LC
 6103              		.loc 1 756 0 discriminator 2
 6104 35d4 8C109FE5 		ldr	r1, .L127+8
 6105 35d8 8C309FE5 		ldr	r3, .L127+12
 6106 35dc 0320A0E1 		mov	r2, r3
 6107 35e0 B0315BE1 		ldrh	r3, [fp, #-16]
 6108 35e4 0300A0E1 		mov	r0, r3	@ movhi
 6109 35e8 8004A0E1 		mov	r0, r0, asl #9
 6110 35ec 000063E0 		rsb	r0, r3, r0
 6111 35f0 0001A0E1 		mov	r0, r0, asl #2
 6112 35f4 003063E0 		rsb	r3, r3, r0
 6113 35f8 8332A0E1 		mov	r3, r3, asl #5
 6114 35fc 0338A0E1 		mov	r3, r3, asl #16
 6115 3600 2338A0E1 		mov	r3, r3, lsr #16
 6116 3604 6A3C43E2 		sub	r3, r3, #27136
 6117 3608 0338A0E1 		mov	r3, r3, asl #16
 6118 360c 2338A0E1 		mov	r3, r3, lsr #16
 6119 3610 0300A0E3 		mov	r0, #3
 6120 3614 FEFFFFEB 		bl	lcd_shift
 757:../proyecto.c **** 			lcd_putRow( y, photo, y);
 6121              		.loc 1 757 0 discriminator 2
 6122 3618 B0215BE1 		ldrh	r2, [fp, #-16]
 6123 361c B0315BE1 		ldrh	r3, [fp, #-16]
 6124 3620 0200A0E1 		mov	r0, r2
 6125 3624 18101BE5 		ldr	r1, [fp, #-24]
 6126 3628 0320A0E1 		mov	r2, r3
 6127 362c FEFFFFEB 		bl	lcd_putRow
 758:../proyecto.c **** 			sw_delay_ms( 10 );
 6128              		.loc 1 758 0 discriminator 2
 6129 3630 0A00A0E3 		mov	r0, #10
 6130 3634 FEFFFFEB 		bl	sw_delay_ms
 754:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6131              		.loc 1 754 0 discriminator 2
 6132 3638 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6133 363c 013083E2 		add	r3, r3, #1
 6134 3640 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6135              	.L125:
 754:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6136              		.loc 1 754 0 is_stmt 0 discriminator 1
 6137 3644 F0315BE1 		ldrsh	r3, [fp, #-16]
 6138 3648 EF0053E3 		cmp	r3, #239
 6139 364c E0FFFFDA 		ble	.L126
 759:../proyecto.c **** 		}
 760:../proyecto.c **** 		break;
 6140              		.loc 1 760 0 is_stmt 1
 6141 3650 0000A0E1 		mov	r0, r0	@ nop
 6142              	.L108:
 761:../proyecto.c **** 	}
 762:../proyecto.c **** }
 6143              		.loc 1 762 0
 6144 3654 0CD04BE2 		sub	sp, fp, #12
 6145 3658 00689DE8 		ldmfd	sp, {fp, sp, lr}
 6146 365c 1EFF2FE1 		bx	lr
 6147              	.L128:
 6148              		.align	2
 6149              	.L127:
 6150 3660 00000000 		.word	lcd_buffer
 6151 3664 A0000000 		.word	lcd_buffer+160
 6152 3668 60950000 		.word	lcd_buffer+38240
 6153 366c 00960000 		.word	lcd_buffer+38400
 6154              		.cfi_endproc
 6155              	.LFE11:
 6157              		.align	2
 6158              		.global	efectoCobertura
 6160              	efectoCobertura:
 6161              	.LFB12:
 763:../proyecto.c **** 
 764:../proyecto.c **** /*
 765:../proyecto.c ****  ** Efecto cobertura: La nueva imagen se superpone haciendo scroll sobre la imagen mostrada
 766:../proyecto.c ****  */
 767:../proyecto.c **** 
 768:../proyecto.c **** void efectoCobertura( uint8 *photo, uint8 sense )
 769:../proyecto.c **** {
 6162              		.loc 1 769 0
 6163              		.cfi_startproc
 6164              		@ Function supports interworking.
 6165              		@ args = 0, pretend = 0, frame = 16
 6166              		@ frame_needed = 1, uses_anonymous_args = 0
 6167 3670 0DC0A0E1 		mov	ip, sp
 6168              	.LCFI24:
 6169              		.cfi_def_cfa_register 12
 6170 3674 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 6171 3678 04B04CE2 		sub	fp, ip, #4
 6172              		.cfi_offset 14, -8
 6173              		.cfi_offset 13, -12
 6174              		.cfi_offset 11, -16
 6175              	.LCFI25:
 6176              		.cfi_def_cfa 11, 4
 6177 367c 10D04DE2 		sub	sp, sp, #16
 6178 3680 18000BE5 		str	r0, [fp, #-24]
 6179 3684 0130A0E1 		mov	r3, r1
 6180 3688 19304BE5 		strb	r3, [fp, #-25]
 770:../proyecto.c **** 	int16 x, y;
 771:../proyecto.c **** 
 772:../proyecto.c **** 	switch( sense )
 6181              		.loc 1 772 0
 6182 368c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 6183 3690 030053E3 		cmp	r3, #3
 6184 3694 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 6185 3698 DD0000EA 		b	.L129
 6186              	.L135:
 6187 369c AC360000 		.word	.L131
 6188 36a0 8C370000 		.word	.L132
 6189 36a4 74380000 		.word	.L133
 6190 36a8 50390000 		.word	.L134
 6191              	.L131:
 773:../proyecto.c **** 	{
 774:../proyecto.c **** 	/* - Recorre la foto por columnas de izquierda a derecha
 775:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la ultima columna de la pantalla
 776:../proyecto.c **** 	 * - Desplaza la nueva imagen una columna a la izquierda
 777:../proyecto.c **** 	 * 		origen: posición de la ultima columna de la fila correspondiente donde se encuentre la imagen
 778:../proyecto.c **** 	 * 		destino: posición de la primera columna de la fila correspondiente donde se encuentre la nuev
 779:../proyecto.c **** 	 * 		tamaño: el de las columnas que lleve desplazadas mas uno
 780:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la ultima columna de la pantalla
 781:../proyecto.c **** 	 */
 782:../proyecto.c **** 	case LEFT:
 783:../proyecto.c **** 		for ( x=0; x< LCD_COLS-1; x++ ){
 6192              		.loc 1 783 0
 6193 36ac 0030A0E3 		mov	r3, #0
 6194 36b0 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6195 36b4 2C0000EA 		b	.L136
 6196              	.L139:
 784:../proyecto.c **** 			lcd_putColumn(LCD_COLS - 1, photo, x);
 6197              		.loc 1 784 0
 6198 36b8 BE305BE1 		ldrh	r3, [fp, #-14]
 6199 36bc 9F00A0E3 		mov	r0, #159
 6200 36c0 18101BE5 		ldr	r1, [fp, #-24]
 6201 36c4 0320A0E1 		mov	r2, r3
 6202 36c8 FEFFFFEB 		bl	lcd_putColumn
 785:../proyecto.c **** 			for (y = 0; y < LCD_ROWS; ++y){
 6203              		.loc 1 785 0
 6204 36cc 0030A0E3 		mov	r3, #0
 6205 36d0 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6206 36d4 1E0000EA 		b	.L137
 6207              	.L138:
 786:../proyecto.c **** 				lcd_shift(LEFT, (uint32) lcd_buffer + (y * LCD_COLS) + (LCD_COLS - 1 - x)  , (uint32) lcd_buffe
 6208              		.loc 1 786 0 discriminator 2
 6209 36d8 F0215BE1 		ldrsh	r2, [fp, #-16]
 6210 36dc 0230A0E1 		mov	r3, r2
 6211 36e0 0331A0E1 		mov	r3, r3, asl #2
 6212 36e4 023083E0 		add	r3, r3, r2
 6213 36e8 8332A0E1 		mov	r3, r3, asl #5
 6214 36ec 0320A0E1 		mov	r2, r3
 6215 36f0 FE305BE1 		ldrsh	r3, [fp, #-14]
 6216 36f4 022063E0 		rsb	r2, r3, r2
 6217 36f8 20339FE5 		ldr	r3, .L148
 6218 36fc 9F3083E2 		add	r3, r3, #159
 6219 3700 031082E0 		add	r1, r2, r3
 6220 3704 F0215BE1 		ldrsh	r2, [fp, #-16]
 6221 3708 0230A0E1 		mov	r3, r2
 6222 370c 0331A0E1 		mov	r3, r3, asl #2
 6223 3710 023083E0 		add	r3, r3, r2
 6224 3714 8332A0E1 		mov	r3, r3, asl #5
 6225 3718 0320A0E1 		mov	r2, r3
 6226 371c FE305BE1 		ldrsh	r3, [fp, #-14]
 6227 3720 022063E0 		rsb	r2, r3, r2
 6228 3724 F4329FE5 		ldr	r3, .L148
 6229 3728 9E3083E2 		add	r3, r3, #158
 6230 372c 032082E0 		add	r2, r2, r3
 6231 3730 BE305BE1 		ldrh	r3, [fp, #-14]
 6232 3734 013083E2 		add	r3, r3, #1
 6233 3738 0338A0E1 		mov	r3, r3, asl #16
 6234 373c 2338A0E1 		mov	r3, r3, lsr #16
 6235 3740 0000A0E3 		mov	r0, #0
 6236 3744 FEFFFFEB 		bl	lcd_shift
 785:../proyecto.c **** 			for (y = 0; y < LCD_ROWS; ++y){
 6237              		.loc 1 785 0 discriminator 2
 6238 3748 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6239 374c 013083E2 		add	r3, r3, #1
 6240 3750 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6241              	.L137:
 785:../proyecto.c **** 			for (y = 0; y < LCD_ROWS; ++y){
 6242              		.loc 1 785 0 is_stmt 0 discriminator 1
 6243 3754 F0315BE1 		ldrsh	r3, [fp, #-16]
 6244 3758 EF0053E3 		cmp	r3, #239
 6245 375c DDFFFFDA 		ble	.L138
 783:../proyecto.c **** 		for ( x=0; x< LCD_COLS-1; x++ ){
 6246              		.loc 1 783 0 is_stmt 1
 6247 3760 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6248 3764 013083E2 		add	r3, r3, #1
 6249 3768 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6250              	.L136:
 783:../proyecto.c **** 		for ( x=0; x< LCD_COLS-1; x++ ){
 6251              		.loc 1 783 0 is_stmt 0 discriminator 1
 6252 376c FE305BE1 		ldrsh	r3, [fp, #-14]
 6253 3770 9E0053E3 		cmp	r3, #158
 6254 3774 CFFFFFDA 		ble	.L139
 787:../proyecto.c **** 			}
 788:../proyecto.c **** 		}
 789:../proyecto.c **** 		lcd_putColumn(LCD_COLS - 1, photo, LCD_COLS - 1);
 6255              		.loc 1 789 0 is_stmt 1
 6256 3778 9F00A0E3 		mov	r0, #159
 6257 377c 18101BE5 		ldr	r1, [fp, #-24]
 6258 3780 9F20A0E3 		mov	r2, #159
 6259 3784 FEFFFFEB 		bl	lcd_putColumn
 790:../proyecto.c **** 		break;
 6260              		.loc 1 790 0
 6261 3788 A10000EA 		b	.L129
 6262              	.L132:
 791:../proyecto.c **** 	/* - Recorre la foto por columnas de izquierda a derecha
 792:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la primera columna de la pantalla
 793:../proyecto.c **** 	 * - Desplaza la nueva imagen una columna a la izquierda
 794:../proyecto.c **** 	 * 		origen: posición de la ultima columna de la fila correspondiente donde se encuentre la nueva 
 795:../proyecto.c **** 	 * 		destino: posición de la primera columna de la fila correspondiente donde se encuentre la imag
 796:../proyecto.c **** 	 * 		tamaño: el de las columnas que lleve desplazadas mas uno
 797:../proyecto.c **** 	 */
 798:../proyecto.c **** 	case RIGHT:
 799:../proyecto.c **** 		for(x=0; x < LCD_COLS-1; x++ )
 6263              		.loc 1 799 0
 6264 378c 0030A0E3 		mov	r3, #0
 6265 3790 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6266 3794 320000EA 		b	.L140
 6267              	.L143:
 800:../proyecto.c **** 		{
 801:../proyecto.c **** 			lcd_putColumn( 0, photo, LCD_COLS - 1 - x);
 6268              		.loc 1 801 0
 6269 3798 BE305BE1 		ldrh	r3, [fp, #-14]
 6270 379c 9F3063E2 		rsb	r3, r3, #159
 6271 37a0 0338A0E1 		mov	r3, r3, asl #16
 6272 37a4 2338A0E1 		mov	r3, r3, lsr #16
 6273 37a8 0000A0E3 		mov	r0, #0
 6274 37ac 18101BE5 		ldr	r1, [fp, #-24]
 6275 37b0 0320A0E1 		mov	r2, r3
 6276 37b4 FEFFFFEB 		bl	lcd_putColumn
 802:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 6277              		.loc 1 802 0
 6278 37b8 0030A0E3 		mov	r3, #0
 6279 37bc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6280 37c0 1D0000EA 		b	.L141
 6281              	.L142:
 803:../proyecto.c **** 				lcd_shift( RIGHT, (uint32) lcd_buffer + (y*LCD_COLS) + x,  (uint32) lcd_buffer + (y*LCD_COLS) +
 6282              		.loc 1 803 0 discriminator 2
 6283 37c4 F0215BE1 		ldrsh	r2, [fp, #-16]
 6284 37c8 0230A0E1 		mov	r3, r2
 6285 37cc 0331A0E1 		mov	r3, r3, asl #2
 6286 37d0 023083E0 		add	r3, r3, r2
 6287 37d4 8332A0E1 		mov	r3, r3, asl #5
 6288 37d8 0320A0E1 		mov	r2, r3
 6289 37dc FE305BE1 		ldrsh	r3, [fp, #-14]
 6290 37e0 032082E0 		add	r2, r2, r3
 6291 37e4 34329FE5 		ldr	r3, .L148
 6292 37e8 031082E0 		add	r1, r2, r3
 6293 37ec F0215BE1 		ldrsh	r2, [fp, #-16]
 6294 37f0 0230A0E1 		mov	r3, r2
 6295 37f4 0331A0E1 		mov	r3, r3, asl #2
 6296 37f8 023083E0 		add	r3, r3, r2
 6297 37fc 8332A0E1 		mov	r3, r3, asl #5
 6298 3800 0320A0E1 		mov	r2, r3
 6299 3804 FE305BE1 		ldrsh	r3, [fp, #-14]
 6300 3808 032082E0 		add	r2, r2, r3
 6301 380c 0C329FE5 		ldr	r3, .L148
 6302 3810 013083E2 		add	r3, r3, #1
 6303 3814 032082E0 		add	r2, r2, r3
 6304 3818 BE305BE1 		ldrh	r3, [fp, #-14]
 6305 381c 013083E2 		add	r3, r3, #1
 6306 3820 0338A0E1 		mov	r3, r3, asl #16
 6307 3824 2338A0E1 		mov	r3, r3, lsr #16
 6308 3828 0100A0E3 		mov	r0, #1
 6309 382c FEFFFFEB 		bl	lcd_shift
 802:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 6310              		.loc 1 802 0 discriminator 2
 6311 3830 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6312 3834 013083E2 		add	r3, r3, #1
 6313 3838 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6314              	.L141:
 802:../proyecto.c **** 			for (y=0; y<LCD_ROWS; y++){
 6315              		.loc 1 802 0 is_stmt 0 discriminator 1
 6316 383c F0315BE1 		ldrsh	r3, [fp, #-16]
 6317 3840 EF0053E3 		cmp	r3, #239
 6318 3844 DEFFFFDA 		ble	.L142
 804:../proyecto.c **** 			}
 805:../proyecto.c **** 			lcd_putColumn( 0, photo, 0);
 6319              		.loc 1 805 0 is_stmt 1
 6320 3848 0000A0E3 		mov	r0, #0
 6321 384c 18101BE5 		ldr	r1, [fp, #-24]
 6322 3850 0020A0E3 		mov	r2, #0
 6323 3854 FEFFFFEB 		bl	lcd_putColumn
 799:../proyecto.c **** 		for(x=0; x < LCD_COLS-1; x++ )
 6324              		.loc 1 799 0
 6325 3858 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6326 385c 013083E2 		add	r3, r3, #1
 6327 3860 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6328              	.L140:
 799:../proyecto.c **** 		for(x=0; x < LCD_COLS-1; x++ )
 6329              		.loc 1 799 0 is_stmt 0 discriminator 1
 6330 3864 FE305BE1 		ldrsh	r3, [fp, #-14]
 6331 3868 9E0053E3 		cmp	r3, #158
 6332 386c C9FFFFDA 		ble	.L143
 806:../proyecto.c **** 		}
 807:../proyecto.c **** 		break;
 6333              		.loc 1 807 0 is_stmt 1
 6334 3870 670000EA 		b	.L129
 6335              	.L133:
 808:../proyecto.c **** 	/* - Recorre la foto por filas de arriba a abajo
 809:../proyecto.c **** 	 * - Visualiza la fila de la foto que corresponde en la ultima fila de la pantalla
 810:../proyecto.c **** 	 * - Desplaza la nueva imagen una fila arriba
 811:../proyecto.c **** 	 * 		origen: posición de la primera columna de la primera fila donde se encuentre la imagen antigu
 812:../proyecto.c **** 	 * 		destino: posición de la primera columna de la ultima fila donde se encuentre la nueva imagen
 813:../proyecto.c **** 	 * 		tamaño: el de las columnas por el de las filas que lleve desplazadas
 814:../proyecto.c **** 	 * - Visualiza la fila de la foto que corresponde en la ultima fila de la pantalla
 815:../proyecto.c **** 	 */
 816:../proyecto.c **** 	case UP:
 817:../proyecto.c **** 		for(y = 0; y < LCD_ROWS - 1; ++y)
 6336              		.loc 1 817 0
 6337 3874 0030A0E3 		mov	r3, #0
 6338 3878 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6339 387c 2B0000EA 		b	.L144
 6340              	.L145:
 818:../proyecto.c **** 		{
 819:../proyecto.c **** 			lcd_putRow( LCD_ROWS - 1, photo, y);
 6341              		.loc 1 819 0 discriminator 2
 6342 3880 B0315BE1 		ldrh	r3, [fp, #-16]
 6343 3884 EF00A0E3 		mov	r0, #239
 6344 3888 18101BE5 		ldr	r1, [fp, #-24]
 6345 388c 0320A0E1 		mov	r2, r3
 6346 3890 FEFFFFEB 		bl	lcd_putRow
 820:../proyecto.c **** 			sw_delay_ms( 10 );
 6347              		.loc 1 820 0 discriminator 2
 6348 3894 0A00A0E3 		mov	r0, #10
 6349 3898 FEFFFFEB 		bl	sw_delay_ms
 821:../proyecto.c **** 			lcd_shift( UP, (uint32) (lcd_buffer + ((LCD_ROWS - y) *LCD_COLS)), (uint32) (lcd_buffer + ((LCD_
 6350              		.loc 1 821 0 discriminator 2
 6351 389c F0215BE1 		ldrsh	r2, [fp, #-16]
 6352 38a0 0230A0E1 		mov	r3, r2
 6353 38a4 833CA0E1 		mov	r3, r3, asl #25
 6354 38a8 033062E0 		rsb	r3, r2, r3
 6355 38ac 0331A0E1 		mov	r3, r3, asl #2
 6356 38b0 033062E0 		rsb	r3, r2, r3
 6357 38b4 8332A0E1 		mov	r3, r3, asl #5
 6358 38b8 963C83E2 		add	r3, r3, #38400
 6359 38bc 0320A0E1 		mov	r2, r3
 6360 38c0 58319FE5 		ldr	r3, .L148
 6361 38c4 033082E0 		add	r3, r2, r3
 6362 38c8 0310A0E1 		mov	r1, r3
 6363 38cc F0215BE1 		ldrsh	r2, [fp, #-16]
 6364 38d0 0230A0E1 		mov	r3, r2
 6365 38d4 833CA0E1 		mov	r3, r3, asl #25
 6366 38d8 033062E0 		rsb	r3, r2, r3
 6367 38dc 0331A0E1 		mov	r3, r3, asl #2
 6368 38e0 033062E0 		rsb	r3, r2, r3
 6369 38e4 8332A0E1 		mov	r3, r3, asl #5
 6370 38e8 953C83E2 		add	r3, r3, #38144
 6371 38ec 603083E2 		add	r3, r3, #96
 6372 38f0 0320A0E1 		mov	r2, r3
 6373 38f4 24319FE5 		ldr	r3, .L148
 6374 38f8 033082E0 		add	r3, r2, r3
 6375 38fc 0320A0E1 		mov	r2, r3
 6376 3900 B0315BE1 		ldrh	r3, [fp, #-16]
 6377 3904 0300A0E1 		mov	r0, r3	@ movhi
 6378 3908 0001A0E1 		mov	r0, r0, asl #2
 6379 390c 033080E0 		add	r3, r0, r3
 6380 3910 8332A0E1 		mov	r3, r3, asl #5
 6381 3914 0338A0E1 		mov	r3, r3, asl #16
 6382 3918 2338A0E1 		mov	r3, r3, lsr #16
 6383 391c 0200A0E3 		mov	r0, #2
 6384 3920 FEFFFFEB 		bl	lcd_shift
 817:../proyecto.c **** 		for(y = 0; y < LCD_ROWS - 1; ++y)
 6385              		.loc 1 817 0 discriminator 2
 6386 3924 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6387 3928 013083E2 		add	r3, r3, #1
 6388 392c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6389              	.L144:
 817:../proyecto.c **** 		for(y = 0; y < LCD_ROWS - 1; ++y)
 6390              		.loc 1 817 0 is_stmt 0 discriminator 1
 6391 3930 F0315BE1 		ldrsh	r3, [fp, #-16]
 6392 3934 EE0053E3 		cmp	r3, #238
 6393 3938 D0FFFFDA 		ble	.L145
 822:../proyecto.c **** 		}
 823:../proyecto.c **** 		lcd_putRow( 0 , photo, 0);
 6394              		.loc 1 823 0 is_stmt 1
 6395 393c 0000A0E3 		mov	r0, #0
 6396 3940 18101BE5 		ldr	r1, [fp, #-24]
 6397 3944 0020A0E3 		mov	r2, #0
 6398 3948 FEFFFFEB 		bl	lcd_putRow
 824:../proyecto.c **** 		break;
 6399              		.loc 1 824 0
 6400 394c 300000EA 		b	.L129
 6401              	.L134:
 825:../proyecto.c **** 	/* - Recorre la foto por columnas de izquierda a derecha
 826:../proyecto.c **** 	 * - Visualiza la columna de la foto que corresponde en la primera fila de la pantalla
 827:../proyecto.c **** 	 * - Desplaza la nueva imagen una fila abajo
 828:../proyecto.c **** 	 * 		origen: posición de la primera columna de la ultima fila donde se encuentre la nueva imagen
 829:../proyecto.c **** 	 * 		destino: posición de la primera columna de la primera fila donde se encuentre la imagen antig
 830:../proyecto.c **** 	 * 		tamaño: el de las columnas mas uno por el de las filas que lleve desplazadas
 831:../proyecto.c **** 	 */
 832:../proyecto.c **** 	case DOWN:
 833:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6402              		.loc 1 833 0
 6403 3950 0030A0E3 		mov	r3, #0
 6404 3954 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6405 3958 290000EA 		b	.L146
 6406              	.L147:
 834:../proyecto.c **** 		{
 835:../proyecto.c **** 			lcd_putRow(0 , photo, LCD_ROWS - y);
 6407              		.loc 1 835 0 discriminator 2
 6408 395c B0315BE1 		ldrh	r3, [fp, #-16]
 6409 3960 F03063E2 		rsb	r3, r3, #240
 6410 3964 0338A0E1 		mov	r3, r3, asl #16
 6411 3968 2338A0E1 		mov	r3, r3, lsr #16
 6412 396c 0000A0E3 		mov	r0, #0
 6413 3970 18101BE5 		ldr	r1, [fp, #-24]
 6414 3974 0320A0E1 		mov	r2, r3
 6415 3978 FEFFFFEB 		bl	lcd_putRow
 836:../proyecto.c **** 			sw_delay_ms( 10 );
 6416              		.loc 1 836 0 discriminator 2
 6417 397c 0A00A0E3 		mov	r0, #10
 6418 3980 FEFFFFEB 		bl	sw_delay_ms
 837:../proyecto.c **** 			lcd_shift( DOWN, (uint32) (lcd_buffer + (y*LCD_COLS)), (uint32) (lcd_buffer + ((y + 1)*LCD_COLS)
 6419              		.loc 1 837 0 discriminator 2
 6420 3984 F0215BE1 		ldrsh	r2, [fp, #-16]
 6421 3988 0230A0E1 		mov	r3, r2
 6422 398c 0331A0E1 		mov	r3, r3, asl #2
 6423 3990 023083E0 		add	r3, r3, r2
 6424 3994 8332A0E1 		mov	r3, r3, asl #5
 6425 3998 0320A0E1 		mov	r2, r3
 6426 399c 7C309FE5 		ldr	r3, .L148
 6427 39a0 033082E0 		add	r3, r2, r3
 6428 39a4 0310A0E1 		mov	r1, r3
 6429 39a8 F0315BE1 		ldrsh	r3, [fp, #-16]
 6430 39ac 012083E2 		add	r2, r3, #1
 6431 39b0 0230A0E1 		mov	r3, r2
 6432 39b4 0331A0E1 		mov	r3, r3, asl #2
 6433 39b8 023083E0 		add	r3, r3, r2
 6434 39bc 8332A0E1 		mov	r3, r3, asl #5
 6435 39c0 0320A0E1 		mov	r2, r3
 6436 39c4 54309FE5 		ldr	r3, .L148
 6437 39c8 033082E0 		add	r3, r2, r3
 6438 39cc 0320A0E1 		mov	r2, r3
 6439 39d0 B0315BE1 		ldrh	r3, [fp, #-16]
 6440 39d4 0300A0E1 		mov	r0, r3	@ movhi
 6441 39d8 0001A0E1 		mov	r0, r0, asl #2
 6442 39dc 030080E0 		add	r0, r0, r3
 6443 39e0 8002A0E1 		mov	r0, r0, asl #5
 6444 39e4 033080E0 		add	r3, r0, r3
 6445 39e8 0338A0E1 		mov	r3, r3, asl #16
 6446 39ec 2338A0E1 		mov	r3, r3, lsr #16
 6447 39f0 0300A0E3 		mov	r0, #3
 6448 39f4 FEFFFFEB 		bl	lcd_shift
 833:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6449              		.loc 1 833 0 discriminator 2
 6450 39f8 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6451 39fc 013083E2 		add	r3, r3, #1
 6452 3a00 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6453              	.L146:
 833:../proyecto.c **** 		for(y = 0; y < LCD_ROWS; ++y)
 6454              		.loc 1 833 0 is_stmt 0 discriminator 1
 6455 3a04 F0315BE1 		ldrsh	r3, [fp, #-16]
 6456 3a08 EF0053E3 		cmp	r3, #239
 6457 3a0c D2FFFFDA 		ble	.L147
 838:../proyecto.c **** 		}
 839:../proyecto.c **** 		break;
 6458              		.loc 1 839 0 is_stmt 1
 6459 3a10 0000A0E1 		mov	r0, r0	@ nop
 6460              	.L129:
 840:../proyecto.c **** 	}
 841:../proyecto.c **** }
 6461              		.loc 1 841 0
 6462 3a14 0CD04BE2 		sub	sp, fp, #12
 6463 3a18 00689DE8 		ldmfd	sp, {fp, sp, lr}
 6464 3a1c 1EFF2FE1 		bx	lr
 6465              	.L149:
 6466              		.align	2
 6467              	.L148:
 6468 3a20 00000000 		.word	lcd_buffer
 6469              		.cfi_endproc
 6470              	.LFE12:
 6472              		.align	2
 6473              		.global	efectoDivisionEntrante
 6475              	efectoDivisionEntrante:
 6476              	.LFB13:
 842:../proyecto.c **** 
 843:../proyecto.c **** /*
 844:../proyecto.c ****  ** Efecto division entrante: La nueva imagen se superpone progresivamente sobre la imagen mostrada
 845:../proyecto.c ****  */
 846:../proyecto.c **** void efectoDivisionEntrante( uint8 *photo, uint8 sense ){
 6477              		.loc 1 846 0
 6478              		.cfi_startproc
 6479              		@ Function supports interworking.
 6480              		@ args = 0, pretend = 0, frame = 16
 6481              		@ frame_needed = 1, uses_anonymous_args = 0
 6482 3a24 0DC0A0E1 		mov	ip, sp
 6483              	.LCFI26:
 6484              		.cfi_def_cfa_register 12
 6485 3a28 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 6486 3a2c 04B04CE2 		sub	fp, ip, #4
 6487              		.cfi_offset 14, -8
 6488              		.cfi_offset 13, -12
 6489              		.cfi_offset 11, -16
 6490              	.LCFI27:
 6491              		.cfi_def_cfa 11, 4
 6492 3a30 10D04DE2 		sub	sp, sp, #16
 6493 3a34 18000BE5 		str	r0, [fp, #-24]
 6494 3a38 0130A0E1 		mov	r3, r1
 6495 3a3c 19304BE5 		strb	r3, [fp, #-25]
 847:../proyecto.c **** 	int16 x, y;
 848:../proyecto.c **** 
 849:../proyecto.c **** 	switch( sense )
 6496              		.loc 1 849 0
 6497 3a40 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 6498 3a44 050053E3 		cmp	r3, #5
 6499 3a48 2400000A 		beq	.L152
 6500 3a4c 060053E3 		cmp	r3, #6
 6501 3a50 4500001A 		bne	.L150
 6502              	.L153:
 850:../proyecto.c **** 	{
 851:../proyecto.c **** 	case VERTICAL:																// NO puede hacerse por DMA porque los pixeles de una columna no ocu
 852:../proyecto.c **** 		y = LCD_COLS-1;
 6503              		.loc 1 852 0
 6504 3a54 9F30A0E3 		mov	r3, #159
 6505 3a58 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 853:../proyecto.c **** 		for( x= (LCD_COLS-1) / 2; x >= 0; x-- )									// Recorre la foto por columnas desde la mitad ha
 6506              		.loc 1 853 0
 6507 3a5c 4F30A0E3 		mov	r3, #79
 6508 3a60 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6509 3a64 190000EA 		b	.L154
 6510              	.L155:
 854:../proyecto.c **** 		{
 855:../proyecto.c **** 			lcd_putColumn( y, photo, y);										// Visualiza la columna correspondiente de la parte derech
 6511              		.loc 1 855 0 discriminator 2
 6512 3a68 B0215BE1 		ldrh	r2, [fp, #-16]
 6513 3a6c B0315BE1 		ldrh	r3, [fp, #-16]
 6514 3a70 0200A0E1 		mov	r0, r2
 6515 3a74 18101BE5 		ldr	r1, [fp, #-24]
 6516 3a78 0320A0E1 		mov	r2, r3
 6517 3a7c FEFFFFEB 		bl	lcd_putColumn
 856:../proyecto.c **** 			lcd_putColumn( LCD_COLS-1 - y, photo, LCD_COLS-1 - y);				// Visualiza la columna correspondient
 6518              		.loc 1 856 0 discriminator 2
 6519 3a80 B0315BE1 		ldrh	r3, [fp, #-16]
 6520 3a84 9F3063E2 		rsb	r3, r3, #159
 6521 3a88 0338A0E1 		mov	r3, r3, asl #16
 6522 3a8c 2328A0E1 		mov	r2, r3, lsr #16
 6523 3a90 B0315BE1 		ldrh	r3, [fp, #-16]
 6524 3a94 9F3063E2 		rsb	r3, r3, #159
 6525 3a98 0338A0E1 		mov	r3, r3, asl #16
 6526 3a9c 2338A0E1 		mov	r3, r3, lsr #16
 6527 3aa0 0200A0E1 		mov	r0, r2
 6528 3aa4 18101BE5 		ldr	r1, [fp, #-24]
 6529 3aa8 0320A0E1 		mov	r2, r3
 6530 3aac FEFFFFEB 		bl	lcd_putColumn
 857:../proyecto.c **** 			sw_delay_ms( 10 );
 6531              		.loc 1 857 0 discriminator 2
 6532 3ab0 0A00A0E3 		mov	r0, #10
 6533 3ab4 FEFFFFEB 		bl	sw_delay_ms
 858:../proyecto.c **** 			--y;																// Recorre la foto por columnas desde la derecha hasta la mitad
 6534              		.loc 1 858 0 discriminator 2
 6535 3ab8 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6536 3abc 013043E2 		sub	r3, r3, #1
 6537 3ac0 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 853:../proyecto.c **** 		for( x= (LCD_COLS-1) / 2; x >= 0; x-- )									// Recorre la foto por columnas desde la mitad ha
 6538              		.loc 1 853 0 discriminator 2
 6539 3ac4 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6540 3ac8 013043E2 		sub	r3, r3, #1
 6541 3acc BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6542              	.L154:
 853:../proyecto.c **** 		for( x= (LCD_COLS-1) / 2; x >= 0; x-- )									// Recorre la foto por columnas desde la mitad ha
 6543              		.loc 1 853 0 is_stmt 0 discriminator 1
 6544 3ad0 FE305BE1 		ldrsh	r3, [fp, #-14]
 6545 3ad4 000053E3 		cmp	r3, #0
 6546 3ad8 E2FFFFAA 		bge	.L155
 859:../proyecto.c **** 		}
 860:../proyecto.c **** 		break;
 6547              		.loc 1 860 0 is_stmt 1
 6548 3adc 220000EA 		b	.L150
 6549              	.L152:
 861:../proyecto.c **** 	case HORIZONTAL:
 862:../proyecto.c **** 		x = LCD_ROWS - 1;
 6550              		.loc 1 862 0
 6551 3ae0 EF30A0E3 		mov	r3, #239
 6552 3ae4 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 863:../proyecto.c **** 		for(y = (LCD_ROWS - 1) / 2; y >= 0; --y)								// Recorre la foto por filas desde la mitad hacia
 6553              		.loc 1 863 0
 6554 3ae8 7730A0E3 		mov	r3, #119
 6555 3aec B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6556 3af0 190000EA 		b	.L156
 6557              	.L157:
 864:../proyecto.c **** 		{
 865:../proyecto.c **** 			lcd_putRow( x, photo, x );											// Visualiza la fila correspondiente de la parte abajo
 6558              		.loc 1 865 0 discriminator 2
 6559 3af4 BE205BE1 		ldrh	r2, [fp, #-14]
 6560 3af8 BE305BE1 		ldrh	r3, [fp, #-14]
 6561 3afc 0200A0E1 		mov	r0, r2
 6562 3b00 18101BE5 		ldr	r1, [fp, #-24]
 6563 3b04 0320A0E1 		mov	r2, r3
 6564 3b08 FEFFFFEB 		bl	lcd_putRow
 866:../proyecto.c **** 			lcd_putRow( LCD_ROWS - 1 - x, photo, LCD_ROWS - 1 - x);				// Visualiza la columna correspondien
 6565              		.loc 1 866 0 discriminator 2
 6566 3b0c BE305BE1 		ldrh	r3, [fp, #-14]
 6567 3b10 EF3063E2 		rsb	r3, r3, #239
 6568 3b14 0338A0E1 		mov	r3, r3, asl #16
 6569 3b18 2328A0E1 		mov	r2, r3, lsr #16
 6570 3b1c BE305BE1 		ldrh	r3, [fp, #-14]
 6571 3b20 EF3063E2 		rsb	r3, r3, #239
 6572 3b24 0338A0E1 		mov	r3, r3, asl #16
 6573 3b28 2338A0E1 		mov	r3, r3, lsr #16
 6574 3b2c 0200A0E1 		mov	r0, r2
 6575 3b30 18101BE5 		ldr	r1, [fp, #-24]
 6576 3b34 0320A0E1 		mov	r2, r3
 6577 3b38 FEFFFFEB 		bl	lcd_putRow
 867:../proyecto.c **** 			sw_delay_ms( 10 );
 6578              		.loc 1 867 0 discriminator 2
 6579 3b3c 0A00A0E3 		mov	r0, #10
 6580 3b40 FEFFFFEB 		bl	sw_delay_ms
 868:../proyecto.c **** 			--x;																// Recorre la foto por filas desde abajo hasta la mitad
 6581              		.loc 1 868 0 discriminator 2
 6582 3b44 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6583 3b48 013043E2 		sub	r3, r3, #1
 6584 3b4c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 863:../proyecto.c **** 		for(y = (LCD_ROWS - 1) / 2; y >= 0; --y)								// Recorre la foto por filas desde la mitad hacia
 6585              		.loc 1 863 0 discriminator 2
 6586 3b50 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6587 3b54 013043E2 		sub	r3, r3, #1
 6588 3b58 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6589              	.L156:
 863:../proyecto.c **** 		for(y = (LCD_ROWS - 1) / 2; y >= 0; --y)								// Recorre la foto por filas desde la mitad hacia
 6590              		.loc 1 863 0 is_stmt 0 discriminator 1
 6591 3b5c F0315BE1 		ldrsh	r3, [fp, #-16]
 6592 3b60 000053E3 		cmp	r3, #0
 6593 3b64 E2FFFFAA 		bge	.L157
 869:../proyecto.c **** 		}
 870:../proyecto.c **** 		break;
 6594              		.loc 1 870 0 is_stmt 1
 6595 3b68 0000A0E1 		mov	r0, r0	@ nop
 6596              	.L150:
 871:../proyecto.c **** 	}
 872:../proyecto.c **** }
 6597              		.loc 1 872 0
 6598 3b6c 0CD04BE2 		sub	sp, fp, #12
 6599 3b70 00689DE8 		ldmfd	sp, {fp, sp, lr}
 6600 3b74 1EFF2FE1 		bx	lr
 6601              		.cfi_endproc
 6602              	.LFE13:
 6604              		.align	2
 6605              		.global	efectoDivisionSaliente
 6607              	efectoDivisionSaliente:
 6608              	.LFB14:
 873:../proyecto.c **** 
 874:../proyecto.c **** /*
 875:../proyecto.c ****  ** Efecto division salienta: La nueva imagen se superpone progresivamente sobre la imagen mostrada
 876:../proyecto.c ****  */
 877:../proyecto.c **** void efectoDivisionSaliente( uint8 *photo, uint8 sense ){
 6609              		.loc 1 877 0
 6610              		.cfi_startproc
 6611              		@ Function supports interworking.
 6612              		@ args = 0, pretend = 0, frame = 16
 6613              		@ frame_needed = 1, uses_anonymous_args = 0
 6614 3b78 0DC0A0E1 		mov	ip, sp
 6615              	.LCFI28:
 6616              		.cfi_def_cfa_register 12
 6617 3b7c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 6618 3b80 04B04CE2 		sub	fp, ip, #4
 6619              		.cfi_offset 14, -8
 6620              		.cfi_offset 13, -12
 6621              		.cfi_offset 11, -16
 6622              	.LCFI29:
 6623              		.cfi_def_cfa 11, 4
 6624 3b84 10D04DE2 		sub	sp, sp, #16
 6625 3b88 18000BE5 		str	r0, [fp, #-24]
 6626 3b8c 0130A0E1 		mov	r3, r1
 6627 3b90 19304BE5 		strb	r3, [fp, #-25]
 878:../proyecto.c **** 	int16 x, y;
 879:../proyecto.c **** 
 880:../proyecto.c **** 	switch( sense )
 6628              		.loc 1 880 0
 6629 3b94 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 6630 3b98 050053E3 		cmp	r3, #5
 6631 3b9c 2200000A 		beq	.L160
 6632 3ba0 060053E3 		cmp	r3, #6
 6633 3ba4 4100001A 		bne	.L158
 6634              	.L161:
 881:../proyecto.c **** 	{
 882:../proyecto.c **** 	case VERTICAL:																// NO puede hacerse por DMA porque los pixeles de una columna no ocu
 883:../proyecto.c **** 		y = (LCD_COLS-1) / 2;
 6635              		.loc 1 883 0
 6636 3ba8 4F30A0E3 		mov	r3, #79
 6637 3bac B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 884:../proyecto.c **** 		for( x= (LCD_COLS-1) / 2; x >= 0; x-- )									// Recorre la foto por columnas desde la mitad ha
 6638              		.loc 1 884 0
 6639 3bb0 4F30A0E3 		mov	r3, #79
 6640 3bb4 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6641 3bb8 130000EA 		b	.L162
 6642              	.L163:
 885:../proyecto.c **** 		{
 886:../proyecto.c **** 			lcd_putColumn( x, photo, x);										// Visualiza la columna correspondiente de la parte izquie
 6643              		.loc 1 886 0 discriminator 2
 6644 3bbc BE205BE1 		ldrh	r2, [fp, #-14]
 6645 3bc0 BE305BE1 		ldrh	r3, [fp, #-14]
 6646 3bc4 0200A0E1 		mov	r0, r2
 6647 3bc8 18101BE5 		ldr	r1, [fp, #-24]
 6648 3bcc 0320A0E1 		mov	r2, r3
 6649 3bd0 FEFFFFEB 		bl	lcd_putColumn
 887:../proyecto.c **** 			lcd_putColumn( y, photo, y);										// Visualiza la columna correspondiente de la parte derech
 6650              		.loc 1 887 0 discriminator 2
 6651 3bd4 B0215BE1 		ldrh	r2, [fp, #-16]
 6652 3bd8 B0315BE1 		ldrh	r3, [fp, #-16]
 6653 3bdc 0200A0E1 		mov	r0, r2
 6654 3be0 18101BE5 		ldr	r1, [fp, #-24]
 6655 3be4 0320A0E1 		mov	r2, r3
 6656 3be8 FEFFFFEB 		bl	lcd_putColumn
 888:../proyecto.c **** 			sw_delay_ms( 10 );													// Retarda para que se vea con claridad el efecto
 6657              		.loc 1 888 0 discriminator 2
 6658 3bec 0A00A0E3 		mov	r0, #10
 6659 3bf0 FEFFFFEB 		bl	sw_delay_ms
 889:../proyecto.c **** 			++y;																// Recorre la foto por columnas desde la mitad hacia la derecha
 6660              		.loc 1 889 0 discriminator 2
 6661 3bf4 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6662 3bf8 013083E2 		add	r3, r3, #1
 6663 3bfc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 884:../proyecto.c **** 		for( x= (LCD_COLS-1) / 2; x >= 0; x-- )									// Recorre la foto por columnas desde la mitad ha
 6664              		.loc 1 884 0 discriminator 2
 6665 3c00 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6666 3c04 013043E2 		sub	r3, r3, #1
 6667 3c08 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6668              	.L162:
 884:../proyecto.c **** 		for( x= (LCD_COLS-1) / 2; x >= 0; x-- )									// Recorre la foto por columnas desde la mitad ha
 6669              		.loc 1 884 0 is_stmt 0 discriminator 1
 6670 3c0c FE305BE1 		ldrsh	r3, [fp, #-14]
 6671 3c10 000053E3 		cmp	r3, #0
 6672 3c14 E8FFFFAA 		bge	.L163
 890:../proyecto.c **** 		}
 891:../proyecto.c **** 		lcd_putColumn( LCD_COLS-1, photo, LCD_COLS-1);
 6673              		.loc 1 891 0 is_stmt 1
 6674 3c18 9F00A0E3 		mov	r0, #159
 6675 3c1c 18101BE5 		ldr	r1, [fp, #-24]
 6676 3c20 9F20A0E3 		mov	r2, #159
 6677 3c24 FEFFFFEB 		bl	lcd_putColumn
 892:../proyecto.c **** 		break;
 6678              		.loc 1 892 0
 6679 3c28 200000EA 		b	.L158
 6680              	.L160:
 893:../proyecto.c **** 	case HORIZONTAL:
 894:../proyecto.c **** 		x = (LCD_ROWS - 1) / 2;
 6681              		.loc 1 894 0
 6682 3c2c 7730A0E3 		mov	r3, #119
 6683 3c30 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 895:../proyecto.c **** 		for(y = (LCD_ROWS - 1) / 2; y >= 0; --y)								// Recorre la foto por filas desde la mitad hacia
 6684              		.loc 1 895 0
 6685 3c34 7730A0E3 		mov	r3, #119
 6686 3c38 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6687 3c3c 130000EA 		b	.L164
 6688              	.L165:
 896:../proyecto.c **** 		{
 897:../proyecto.c **** 			lcd_putRow( x, photo, x);											// Visualiza la fila correspondiente de la parte arriba
 6689              		.loc 1 897 0 discriminator 2
 6690 3c40 BE205BE1 		ldrh	r2, [fp, #-14]
 6691 3c44 BE305BE1 		ldrh	r3, [fp, #-14]
 6692 3c48 0200A0E1 		mov	r0, r2
 6693 3c4c 18101BE5 		ldr	r1, [fp, #-24]
 6694 3c50 0320A0E1 		mov	r2, r3
 6695 3c54 FEFFFFEB 		bl	lcd_putRow
 898:../proyecto.c **** 			lcd_putRow( y, photo, y);											// Visualiza la fila correspondiente de la parte abajo
 6696              		.loc 1 898 0 discriminator 2
 6697 3c58 B0215BE1 		ldrh	r2, [fp, #-16]
 6698 3c5c B0315BE1 		ldrh	r3, [fp, #-16]
 6699 3c60 0200A0E1 		mov	r0, r2
 6700 3c64 18101BE5 		ldr	r1, [fp, #-24]
 6701 3c68 0320A0E1 		mov	r2, r3
 6702 3c6c FEFFFFEB 		bl	lcd_putRow
 899:../proyecto.c **** 			sw_delay_ms( 10 );
 6703              		.loc 1 899 0 discriminator 2
 6704 3c70 0A00A0E3 		mov	r0, #10
 6705 3c74 FEFFFFEB 		bl	sw_delay_ms
 900:../proyecto.c **** 			++x;																// Recorre la foto por filas desde la mitad hacia arriba
 6706              		.loc 1 900 0 discriminator 2
 6707 3c78 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6708 3c7c 013083E2 		add	r3, r3, #1
 6709 3c80 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 895:../proyecto.c **** 		for(y = (LCD_ROWS - 1) / 2; y >= 0; --y)								// Recorre la foto por filas desde la mitad hacia
 6710              		.loc 1 895 0 discriminator 2
 6711 3c84 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6712 3c88 013043E2 		sub	r3, r3, #1
 6713 3c8c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6714              	.L164:
 895:../proyecto.c **** 		for(y = (LCD_ROWS - 1) / 2; y >= 0; --y)								// Recorre la foto por filas desde la mitad hacia
 6715              		.loc 1 895 0 is_stmt 0 discriminator 1
 6716 3c90 F0315BE1 		ldrsh	r3, [fp, #-16]
 6717 3c94 000053E3 		cmp	r3, #0
 6718 3c98 E8FFFFAA 		bge	.L165
 901:../proyecto.c **** 		}
 902:../proyecto.c **** 		lcd_putRow( LCD_ROWS - 1, photo, LCD_ROWS - 1);
 6719              		.loc 1 902 0 is_stmt 1
 6720 3c9c EF00A0E3 		mov	r0, #239
 6721 3ca0 18101BE5 		ldr	r1, [fp, #-24]
 6722 3ca4 EF20A0E3 		mov	r2, #239
 6723 3ca8 FEFFFFEB 		bl	lcd_putRow
 903:../proyecto.c **** 		break;
 6724              		.loc 1 903 0
 6725 3cac 0000A0E1 		mov	r0, r0	@ nop
 6726              	.L158:
 904:../proyecto.c **** 	}
 905:../proyecto.c **** }
 6727              		.loc 1 905 0
 6728 3cb0 0CD04BE2 		sub	sp, fp, #12
 6729 3cb4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 6730 3cb8 1EFF2FE1 		bx	lr
 6731              		.cfi_endproc
 6732              	.LFE14:
 6734              		.align	2
 6735              		.global	efectoBarras
 6737              	efectoBarras:
 6738              	.LFB15:
 906:../proyecto.c **** 
 907:../proyecto.c **** /*
 908:../proyecto.c ****  ** Efecto barras: La nueva imagen se superpone progresivamente sobre la imagen rellenando barras a
 909:../proyecto.c ****  */
 910:../proyecto.c **** void efectoBarras( uint8 *photo, uint8 sense ){
 6739              		.loc 1 910 0
 6740              		.cfi_startproc
 6741              		@ Function supports interworking.
 6742              		@ args = 0, pretend = 0, frame = 16
 6743              		@ frame_needed = 1, uses_anonymous_args = 0
 6744 3cbc 0DC0A0E1 		mov	ip, sp
 6745              	.LCFI30:
 6746              		.cfi_def_cfa_register 12
 6747 3cc0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 6748 3cc4 04B04CE2 		sub	fp, ip, #4
 6749              		.cfi_offset 14, -8
 6750              		.cfi_offset 13, -12
 6751              		.cfi_offset 11, -16
 6752              	.LCFI31:
 6753              		.cfi_def_cfa 11, 4
 6754 3cc8 10D04DE2 		sub	sp, sp, #16
 6755 3ccc 18000BE5 		str	r0, [fp, #-24]
 6756 3cd0 0130A0E1 		mov	r3, r1
 6757 3cd4 19304BE5 		strb	r3, [fp, #-25]
 911:../proyecto.c **** 	uint16 x, y;
 912:../proyecto.c **** 
 913:../proyecto.c **** 	switch( sense )
 6758              		.loc 1 913 0
 6759 3cd8 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 6760 3cdc 050053E3 		cmp	r3, #5
 6761 3ce0 0200000A 		beq	.L168
 6762 3ce4 060053E3 		cmp	r3, #6
 6763 3ce8 2E00000A 		beq	.L169
 6764 3cec 3F0000EA 		b	.L166
 6765              	.L168:
 914:../proyecto.c **** 	{
 915:../proyecto.c **** 	case HORIZONTAL:															// NO puede hacerse por DMA porque los pixeles de una columna no oc
 916:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)										// Recorre la foto por filas desde la arriba hasta ab
 6766              		.loc 1 916 0
 6767 3cf0 0030A0E3 		mov	r3, #0
 6768 3cf4 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6769 3cf8 100000EA 		b	.L170
 6770              	.L172:
 917:../proyecto.c **** 		{
 918:../proyecto.c **** 			if (y % 2 == 0){													// Visualiza las filas pares
 6771              		.loc 1 918 0
 6772 3cfc B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6773 3d00 013003E2 		and	r3, r3, #1
 6774 3d04 0338A0E1 		mov	r3, r3, asl #16
 6775 3d08 2338A0E1 		mov	r3, r3, lsr #16
 6776 3d0c 000053E3 		cmp	r3, #0
 6777 3d10 0700001A 		bne	.L171
 919:../proyecto.c **** 				lcd_putRow( y, photo, y );
 6778              		.loc 1 919 0
 6779 3d14 B0215BE1 		ldrh	r2, [fp, #-16]
 6780 3d18 B0315BE1 		ldrh	r3, [fp, #-16]
 6781 3d1c 0200A0E1 		mov	r0, r2
 6782 3d20 18101BE5 		ldr	r1, [fp, #-24]
 6783 3d24 0320A0E1 		mov	r2, r3
 6784 3d28 FEFFFFEB 		bl	lcd_putRow
 920:../proyecto.c **** 				sw_delay_ms( 10 );
 6785              		.loc 1 920 0
 6786 3d2c 0A00A0E3 		mov	r0, #10
 6787 3d30 FEFFFFEB 		bl	sw_delay_ms
 6788              	.L171:
 916:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)										// Recorre la foto por filas desde la arriba hasta ab
 6789              		.loc 1 916 0
 6790 3d34 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6791 3d38 013083E2 		add	r3, r3, #1
 6792 3d3c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6793              	.L170:
 916:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)										// Recorre la foto por filas desde la arriba hasta ab
 6794              		.loc 1 916 0 is_stmt 0 discriminator 1
 6795 3d40 B0315BE1 		ldrh	r3, [fp, #-16]
 6796 3d44 EF0053E3 		cmp	r3, #239
 6797 3d48 EBFFFF9A 		bls	.L172
 921:../proyecto.c **** 			}
 922:../proyecto.c **** 		}
 923:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)										// Recorre la foto por filas desde la arriba hasta ab
 6798              		.loc 1 923 0 is_stmt 1
 6799 3d4c 0030A0E3 		mov	r3, #0
 6800 3d50 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6801 3d54 0F0000EA 		b	.L173
 6802              	.L175:
 924:../proyecto.c **** 		{
 925:../proyecto.c **** 			if (y % 2 != 0){													// Visualiza las filas impares
 6803              		.loc 1 925 0
 6804 3d58 B0315BE1 		ldrh	r3, [fp, #-16]
 6805 3d5c 013003E2 		and	r3, r3, #1
 6806 3d60 FF3003E2 		and	r3, r3, #255
 6807 3d64 000053E3 		cmp	r3, #0
 6808 3d68 0700000A 		beq	.L174
 926:../proyecto.c **** 				lcd_putRow( y, photo, y );
 6809              		.loc 1 926 0
 6810 3d6c B0215BE1 		ldrh	r2, [fp, #-16]
 6811 3d70 B0315BE1 		ldrh	r3, [fp, #-16]
 6812 3d74 0200A0E1 		mov	r0, r2
 6813 3d78 18101BE5 		ldr	r1, [fp, #-24]
 6814 3d7c 0320A0E1 		mov	r2, r3
 6815 3d80 FEFFFFEB 		bl	lcd_putRow
 927:../proyecto.c **** 				sw_delay_ms( 10 );
 6816              		.loc 1 927 0
 6817 3d84 0A00A0E3 		mov	r0, #10
 6818 3d88 FEFFFFEB 		bl	sw_delay_ms
 6819              	.L174:
 923:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)										// Recorre la foto por filas desde la arriba hasta ab
 6820              		.loc 1 923 0
 6821 3d8c B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6822 3d90 013083E2 		add	r3, r3, #1
 6823 3d94 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6824              	.L173:
 923:../proyecto.c **** 		for(y = 0; y <= LCD_ROWS - 1; ++y)										// Recorre la foto por filas desde la arriba hasta ab
 6825              		.loc 1 923 0 is_stmt 0 discriminator 1
 6826 3d98 B0315BE1 		ldrh	r3, [fp, #-16]
 6827 3d9c EF0053E3 		cmp	r3, #239
 6828 3da0 ECFFFF9A 		bls	.L175
 928:../proyecto.c **** 			}
 929:../proyecto.c **** 		}
 930:../proyecto.c **** 		break;
 6829              		.loc 1 930 0 is_stmt 1
 6830 3da4 110000EA 		b	.L166
 6831              	.L169:
 931:../proyecto.c **** 	case VERTICAL:
 932:../proyecto.c **** 		for( x=LCD_COLS-1; x >= 0; x-- )										// Recorre la foto por columnas desde la derecha hacia 
 6832              		.loc 1 932 0
 6833 3da8 9F30A0E3 		mov	r3, #159
 6834 3dac BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6835              	.L177:
 933:../proyecto.c **** 		{
 934:../proyecto.c **** 			if (x % 2 == 0){													// Visualiza las columnas pares
 6836              		.loc 1 934 0
 6837 3db0 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6838 3db4 013003E2 		and	r3, r3, #1
 6839 3db8 0338A0E1 		mov	r3, r3, asl #16
 6840 3dbc 2338A0E1 		mov	r3, r3, lsr #16
 6841 3dc0 000053E3 		cmp	r3, #0
 6842 3dc4 0500001A 		bne	.L176
 935:../proyecto.c **** 				lcd_putColumn( x, photo, x);
 6843              		.loc 1 935 0
 6844 3dc8 BE205BE1 		ldrh	r2, [fp, #-14]
 6845 3dcc BE305BE1 		ldrh	r3, [fp, #-14]
 6846 3dd0 0200A0E1 		mov	r0, r2
 6847 3dd4 18101BE5 		ldr	r1, [fp, #-24]
 6848 3dd8 0320A0E1 		mov	r2, r3
 6849 3ddc FEFFFFEB 		bl	lcd_putColumn
 6850              	.L176:
 932:../proyecto.c **** 		for( x=LCD_COLS-1; x >= 0; x-- )										// Recorre la foto por columnas desde la derecha hacia 
 6851              		.loc 1 932 0
 6852 3de0 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6853 3de4 013043E2 		sub	r3, r3, #1
 6854 3de8 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 936:../proyecto.c **** 			}
 937:../proyecto.c **** 		}
 6855              		.loc 1 937 0
 6856 3dec EFFFFFEA 		b	.L177
 6857              	.L166:
 938:../proyecto.c **** 		for( x=LCD_COLS-1; x >= 0; x-- )										// Recorre la foto por columnas desde la derecha hacia 
 939:../proyecto.c **** 		{
 940:../proyecto.c **** 			if (x % 2 != 0){													// Visualiza las columnas impares
 941:../proyecto.c **** 				lcd_putColumn( x, photo, x);
 942:../proyecto.c **** 			}
 943:../proyecto.c **** 		}
 944:../proyecto.c **** 	}
 945:../proyecto.c **** }
 6858              		.loc 1 945 0
 6859 3df0 0CD04BE2 		sub	sp, fp, #12
 6860 3df4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 6861 3df8 1EFF2FE1 		bx	lr
 6862              		.cfi_endproc
 6863              	.LFE15:
 6865              		.align	2
 6866              		.global	efectoDesvanecer
 6868              	efectoDesvanecer:
 6869              	.LFB16:
 946:../proyecto.c **** 
 947:../proyecto.c **** /*
 948:../proyecto.c ****  ** Efecto desvanecer: La nueva imagen se superpone después de que la pantalla se quede en negro
 949:../proyecto.c ****  */
 950:../proyecto.c **** void efectoDesvanecer( uint8 *photo, uint8 sense ) {
 6870              		.loc 1 950 0
 6871              		.cfi_startproc
 6872              		@ Function supports interworking.
 6873              		@ args = 0, pretend = 0, frame = 16
 6874              		@ frame_needed = 1, uses_anonymous_args = 0
 6875 3dfc 0DC0A0E1 		mov	ip, sp
 6876              	.LCFI32:
 6877              		.cfi_def_cfa_register 12
 6878 3e00 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 6879 3e04 04B04CE2 		sub	fp, ip, #4
 6880              		.cfi_offset 14, -8
 6881              		.cfi_offset 13, -12
 6882              		.cfi_offset 11, -16
 6883              	.LCFI33:
 6884              		.cfi_def_cfa 11, 4
 6885 3e08 10D04DE2 		sub	sp, sp, #16
 6886 3e0c 18000BE5 		str	r0, [fp, #-24]
 6887 3e10 0130A0E1 		mov	r3, r1
 6888 3e14 19304BE5 		strb	r3, [fp, #-25]
 951:../proyecto.c **** 	uint16 x, y;
 952:../proyecto.c **** 
 953:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ ){												// Muestra la pantalla en negro
 6889              		.loc 1 953 0
 6890 3e18 0030A0E3 		mov	r3, #0
 6891 3e1c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6892 3e20 160000EA 		b	.L179
 6893              	.L182:
 954:../proyecto.c **** 		for( x=0; x<LCD_COLS; x++ ){
 6894              		.loc 1 954 0
 6895 3e24 0030A0E3 		mov	r3, #0
 6896 3e28 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6897 3e2c 0D0000EA 		b	.L180
 6898              	.L181:
 955:../proyecto.c **** 			lcd_buffer[(y*LCD_COLS)+x] = BLACK;
 6899              		.loc 1 955 0 discriminator 2
 6900 3e30 B0215BE1 		ldrh	r2, [fp, #-16]
 6901 3e34 0230A0E1 		mov	r3, r2
 6902 3e38 0331A0E1 		mov	r3, r3, asl #2
 6903 3e3c 023083E0 		add	r3, r3, r2
 6904 3e40 8332A0E1 		mov	r3, r3, asl #5
 6905 3e44 0320A0E1 		mov	r2, r3
 6906 3e48 BE305BE1 		ldrh	r3, [fp, #-14]
 6907 3e4c 033082E0 		add	r3, r2, r3
 6908 3e50 50209FE5 		ldr	r2, .L183
 6909 3e54 0F10A0E3 		mov	r1, #15
 6910 3e58 0310C2E7 		strb	r1, [r2, r3]
 954:../proyecto.c **** 		for( x=0; x<LCD_COLS; x++ ){
 6911              		.loc 1 954 0 discriminator 2
 6912 3e5c BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6913 3e60 013083E2 		add	r3, r3, #1
 6914 3e64 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6915              	.L180:
 954:../proyecto.c **** 		for( x=0; x<LCD_COLS; x++ ){
 6916              		.loc 1 954 0 is_stmt 0 discriminator 1
 6917 3e68 BE305BE1 		ldrh	r3, [fp, #-14]
 6918 3e6c 9F0053E3 		cmp	r3, #159
 6919 3e70 EEFFFF9A 		bls	.L181
 953:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ ){												// Muestra la pantalla en negro
 6920              		.loc 1 953 0 is_stmt 1
 6921 3e74 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 6922 3e78 013083E2 		add	r3, r3, #1
 6923 3e7c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6924              	.L179:
 953:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ ){												// Muestra la pantalla en negro
 6925              		.loc 1 953 0 is_stmt 0 discriminator 1
 6926 3e80 B0315BE1 		ldrh	r3, [fp, #-16]
 6927 3e84 EF0053E3 		cmp	r3, #239
 6928 3e88 E5FFFF9A 		bls	.L182
 956:../proyecto.c **** 		}
 957:../proyecto.c **** 	}
 958:../proyecto.c **** 	sw_delay_ms( 1000 );
 6929              		.loc 1 958 0 is_stmt 1
 6930 3e8c FA0FA0E3 		mov	r0, #1000
 6931 3e90 FEFFFFEB 		bl	sw_delay_ms
 959:../proyecto.c **** 
 960:../proyecto.c **** 	lcd_putPhoto( photo );														// Visualiza la foto a traves de DMA
 6932              		.loc 1 960 0
 6933 3e94 18001BE5 		ldr	r0, [fp, #-24]
 6934 3e98 FEFFFFEB 		bl	lcd_putPhoto
 961:../proyecto.c **** }
 6935              		.loc 1 961 0
 6936 3e9c 0CD04BE2 		sub	sp, fp, #12
 6937 3ea0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 6938 3ea4 1EFF2FE1 		bx	lr
 6939              	.L184:
 6940              		.align	2
 6941              	.L183:
 6942 3ea8 00000000 		.word	lcd_buffer
 6943              		.cfi_endproc
 6944              	.LFE16:
 6946              		.align	2
 6947              		.global	efectoFlash
 6949              	efectoFlash:
 6950              	.LFB17:
 962:../proyecto.c **** 
 963:../proyecto.c **** /*
 964:../proyecto.c ****  ** Efecto desvanecer: La nueva imagen se superpone después de que la pantalla se quede en blanco
 965:../proyecto.c ****  */
 966:../proyecto.c **** void efectoFlash( uint8 *photo, uint8 sense ) {
 6951              		.loc 1 966 0
 6952              		.cfi_startproc
 6953              		@ Function supports interworking.
 6954              		@ args = 0, pretend = 0, frame = 16
 6955              		@ frame_needed = 1, uses_anonymous_args = 0
 6956 3eac 0DC0A0E1 		mov	ip, sp
 6957              	.LCFI34:
 6958              		.cfi_def_cfa_register 12
 6959 3eb0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 6960 3eb4 04B04CE2 		sub	fp, ip, #4
 6961              		.cfi_offset 14, -8
 6962              		.cfi_offset 13, -12
 6963              		.cfi_offset 11, -16
 6964              	.LCFI35:
 6965              		.cfi_def_cfa 11, 4
 6966 3eb8 10D04DE2 		sub	sp, sp, #16
 6967 3ebc 18000BE5 		str	r0, [fp, #-24]
 6968 3ec0 0130A0E1 		mov	r3, r1
 6969 3ec4 19304BE5 		strb	r3, [fp, #-25]
 967:../proyecto.c **** 	uint16 x, y;
 968:../proyecto.c **** 
 969:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ ){
 6970              		.loc 1 969 0
 6971 3ec8 0030A0E3 		mov	r3, #0
 6972 3ecc B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 6973 3ed0 160000EA 		b	.L186
 6974              	.L189:
 970:../proyecto.c **** 		for( x=0; x<LCD_COLS; x++ ){
 6975              		.loc 1 970 0
 6976 3ed4 0030A0E3 		mov	r3, #0
 6977 3ed8 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6978 3edc 0D0000EA 		b	.L187
 6979              	.L188:
 971:../proyecto.c **** 			lcd_buffer[(y*LCD_COLS)+x] = WHITE;									// Muestra la pantalla en blanco
 6980              		.loc 1 971 0 discriminator 2
 6981 3ee0 B0215BE1 		ldrh	r2, [fp, #-16]
 6982 3ee4 0230A0E1 		mov	r3, r2
 6983 3ee8 0331A0E1 		mov	r3, r3, asl #2
 6984 3eec 023083E0 		add	r3, r3, r2
 6985 3ef0 8332A0E1 		mov	r3, r3, asl #5
 6986 3ef4 0320A0E1 		mov	r2, r3
 6987 3ef8 BE305BE1 		ldrh	r3, [fp, #-14]
 6988 3efc 033082E0 		add	r3, r2, r3
 6989 3f00 50209FE5 		ldr	r2, .L190
 6990 3f04 0010A0E3 		mov	r1, #0
 6991 3f08 0310C2E7 		strb	r1, [r2, r3]
 970:../proyecto.c **** 		for( x=0; x<LCD_COLS; x++ ){
 6992              		.loc 1 970 0 discriminator 2
 6993 3f0c BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 6994 3f10 013083E2 		add	r3, r3, #1
 6995 3f14 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 6996              	.L187:
 970:../proyecto.c **** 		for( x=0; x<LCD_COLS; x++ ){
 6997              		.loc 1 970 0 is_stmt 0 discriminator 1
 6998 3f18 BE305BE1 		ldrh	r3, [fp, #-14]
 6999 3f1c 9F0053E3 		cmp	r3, #159
 7000 3f20 EEFFFF9A 		bls	.L188
 969:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ ){
 7001              		.loc 1 969 0 is_stmt 1
 7002 3f24 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7003 3f28 013083E2 		add	r3, r3, #1
 7004 3f2c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 7005              	.L186:
 969:../proyecto.c **** 	for( y=0; y<LCD_ROWS; y++ ){
 7006              		.loc 1 969 0 is_stmt 0 discriminator 1
 7007 3f30 B0315BE1 		ldrh	r3, [fp, #-16]
 7008 3f34 EF0053E3 		cmp	r3, #239
 7009 3f38 E5FFFF9A 		bls	.L189
 972:../proyecto.c **** 		}
 973:../proyecto.c **** 	}
 974:../proyecto.c **** 	sw_delay_ms( 1000 );
 7010              		.loc 1 974 0 is_stmt 1
 7011 3f3c FA0FA0E3 		mov	r0, #1000
 7012 3f40 FEFFFFEB 		bl	sw_delay_ms
 975:../proyecto.c **** 
 976:../proyecto.c **** 	lcd_putPhoto( photo );														// Visualiza la foto a traves de DMA
 7013              		.loc 1 976 0
 7014 3f44 18001BE5 		ldr	r0, [fp, #-24]
 7015 3f48 FEFFFFEB 		bl	lcd_putPhoto
 977:../proyecto.c **** }
 7016              		.loc 1 977 0
 7017 3f4c 0CD04BE2 		sub	sp, fp, #12
 7018 3f50 00689DE8 		ldmfd	sp, {fp, sp, lr}
 7019 3f54 1EFF2FE1 		bx	lr
 7020              	.L191:
 7021              		.align	2
 7022              	.L190:
 7023 3f58 00000000 		.word	lcd_buffer
 7024              		.cfi_endproc
 7025              	.LFE17:
 7027              		.align	2
 7028              		.global	lcd_putPixelColumn
 7030              	lcd_putPixelColumn:
 7031              	.LFB18:
 978:../proyecto.c **** 
 979:../proyecto.c **** 
 980:../proyecto.c **** /* Funciones y efectos que no funcionan bien*/
 981:../proyecto.c **** 
 982:../proyecto.c **** /*
 983:../proyecto.c ****  ** lcd_putPixelColumn: Función que muestra los pixeles y filas recibidas por parámetro de entrada 
 984:../proyecto.c ****  */
 985:../proyecto.c **** void lcd_putPixelColumn( uint16 xLcd, uint8 *photo, uint16 xPhoto, uint16 init, uint16 fin)
 986:../proyecto.c **** {
 7032              		.loc 1 986 0
 7033              		.cfi_startproc
 7034              		@ Function supports interworking.
 7035              		@ args = 4, pretend = 0, frame = 24
 7036              		@ frame_needed = 1, uses_anonymous_args = 0
 7037 3f5c 0DC0A0E1 		mov	ip, sp
 7038              	.LCFI36:
 7039              		.cfi_def_cfa_register 12
 7040 3f60 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 7041 3f64 04B04CE2 		sub	fp, ip, #4
 7042              		.cfi_offset 14, -8
 7043              		.cfi_offset 13, -12
 7044              		.cfi_offset 11, -16
 7045              	.LCFI37:
 7046              		.cfi_def_cfa 11, 4
 7047 3f68 18D04DE2 		sub	sp, sp, #24
 7048 3f6c 1C100BE5 		str	r1, [fp, #-28]
 7049 3f70 B6014BE1 		strh	r0, [fp, #-22]	@ movhi
 7050 3f74 BE214BE1 		strh	r2, [fp, #-30]	@ movhi
 7051 3f78 B0324BE1 		strh	r3, [fp, #-32]	@ movhi
 987:../proyecto.c **** 	int16 y;
 988:../proyecto.c **** 
 989:../proyecto.c **** 	for( y=init; y<fin; y++ )
 7052              		.loc 1 989 0
 7053 3f7c B0325BE1 		ldrh	r3, [fp, #-32]	@ movhi
 7054 3f80 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 7055 3f84 170000EA 		b	.L193
 7056              	.L194:
 990:../proyecto.c **** 		lcd_buffer[(y*LCD_COLS)+xLcd] = photo[(y*LCD_COLS)+xPhoto];
 7057              		.loc 1 990 0 discriminator 2
 7058 3f88 FE205BE1 		ldrsh	r2, [fp, #-14]
 7059 3f8c 0230A0E1 		mov	r3, r2
 7060 3f90 0331A0E1 		mov	r3, r3, asl #2
 7061 3f94 023083E0 		add	r3, r3, r2
 7062 3f98 8332A0E1 		mov	r3, r3, asl #5
 7063 3f9c 0320A0E1 		mov	r2, r3
 7064 3fa0 B6315BE1 		ldrh	r3, [fp, #-22]
 7065 3fa4 031082E0 		add	r1, r2, r3
 7066 3fa8 FE205BE1 		ldrsh	r2, [fp, #-14]
 7067 3fac 0230A0E1 		mov	r3, r2
 7068 3fb0 0331A0E1 		mov	r3, r3, asl #2
 7069 3fb4 023083E0 		add	r3, r3, r2
 7070 3fb8 8332A0E1 		mov	r3, r3, asl #5
 7071 3fbc 0320A0E1 		mov	r2, r3
 7072 3fc0 BE315BE1 		ldrh	r3, [fp, #-30]
 7073 3fc4 033082E0 		add	r3, r2, r3
 7074 3fc8 1C201BE5 		ldr	r2, [fp, #-28]
 7075 3fcc 033082E0 		add	r3, r2, r3
 7076 3fd0 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 7077 3fd4 28309FE5 		ldr	r3, .L195
 7078 3fd8 0120C3E7 		strb	r2, [r3, r1]
 989:../proyecto.c **** 	for( y=init; y<fin; y++ )
 7079              		.loc 1 989 0 discriminator 2
 7080 3fdc BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7081 3fe0 013083E2 		add	r3, r3, #1
 7082 3fe4 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 7083              	.L193:
 989:../proyecto.c **** 	for( y=init; y<fin; y++ )
 7084              		.loc 1 989 0 is_stmt 0 discriminator 1
 7085 3fe8 FE205BE1 		ldrsh	r2, [fp, #-14]
 7086 3fec B430DBE1 		ldrh	r3, [fp, #4]
 7087 3ff0 030052E1 		cmp	r2, r3
 7088 3ff4 E3FFFFBA 		blt	.L194
 991:../proyecto.c **** }
 7089              		.loc 1 991 0 is_stmt 1
 7090 3ff8 0CD04BE2 		sub	sp, fp, #12
 7091 3ffc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 7092 4000 1EFF2FE1 		bx	lr
 7093              	.L196:
 7094              		.align	2
 7095              	.L195:
 7096 4004 00000000 		.word	lcd_buffer
 7097              		.cfi_endproc
 7098              	.LFE18:
 7100              		.align	2
 7101              		.global	efectoCuadradoEntrante
 7103              	efectoCuadradoEntrante:
 7104              	.LFB19:
 992:../proyecto.c **** 
 993:../proyecto.c **** 
 994:../proyecto.c **** /*
 995:../proyecto.c ****  ** Efecto cuadrado entrante: La nueva imagen se superpone progresivamente rellenando los laterales
 996:../proyecto.c ****  */
 997:../proyecto.c **** void efectoCuadradoEntrante( uint8 *photo, uint8 sense ){
 7105              		.loc 1 997 0
 7106              		.cfi_startproc
 7107              		@ Function supports interworking.
 7108              		@ args = 0, pretend = 0, frame = 16
 7109              		@ frame_needed = 1, uses_anonymous_args = 0
 7110 4008 0DC0A0E1 		mov	ip, sp
 7111              	.LCFI38:
 7112              		.cfi_def_cfa_register 12
 7113 400c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 7114 4010 04B04CE2 		sub	fp, ip, #4
 7115              		.cfi_offset 14, -8
 7116              		.cfi_offset 13, -12
 7117              		.cfi_offset 11, -16
 7118              	.LCFI39:
 7119              		.cfi_def_cfa 11, 4
 7120 4014 10D04DE2 		sub	sp, sp, #16
 7121 4018 18000BE5 		str	r0, [fp, #-24]
 7122 401c 0130A0E1 		mov	r3, r1
 7123 4020 19304BE5 		strb	r3, [fp, #-25]
 998:../proyecto.c **** 	uint16 x, y, k;
 999:../proyecto.c **** 	y = LCD_ROWS - 1;
 7124              		.loc 1 999 0
 7125 4024 EF30A0E3 		mov	r3, #239
 7126 4028 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
1000:../proyecto.c **** 	k = LCD_COLS-1;
 7127              		.loc 1 1000 0
 7128 402c 9F30A0E3 		mov	r3, #159
 7129 4030 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1001:../proyecto.c **** 	for (x = (LCD_ROWS - LCD_COLS); x >= 0; --x){
 7130              		.loc 1 1001 0
 7131 4034 5030A0E3 		mov	r3, #80
 7132 4038 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 7133              	.L198:
1002:../proyecto.c **** 		lcd_putRow( y, photo, y);
 7134              		.loc 1 1002 0 discriminator 1
 7135 403c B0215BE1 		ldrh	r2, [fp, #-16]
 7136 4040 B0315BE1 		ldrh	r3, [fp, #-16]
 7137 4044 0200A0E1 		mov	r0, r2
 7138 4048 18101BE5 		ldr	r1, [fp, #-24]
 7139 404c 0320A0E1 		mov	r2, r3
 7140 4050 FEFFFFEB 		bl	lcd_putRow
1003:../proyecto.c **** 		lcd_putRow( LCD_ROWS - 1 - y, photo, LCD_ROWS - 1 - y);
 7141              		.loc 1 1003 0 discriminator 1
 7142 4054 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7143 4058 EF3063E2 		rsb	r3, r3, #239
 7144 405c 0338A0E1 		mov	r3, r3, asl #16
 7145 4060 2328A0E1 		mov	r2, r3, lsr #16
 7146 4064 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7147 4068 EF3063E2 		rsb	r3, r3, #239
 7148 406c 0338A0E1 		mov	r3, r3, asl #16
 7149 4070 2338A0E1 		mov	r3, r3, lsr #16
 7150 4074 0200A0E1 		mov	r0, r2
 7151 4078 18101BE5 		ldr	r1, [fp, #-24]
 7152 407c 0320A0E1 		mov	r2, r3
 7153 4080 FEFFFFEB 		bl	lcd_putRow
1004:../proyecto.c **** 		--y;
 7154              		.loc 1 1004 0 discriminator 1
 7155 4084 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7156 4088 013043E2 		sub	r3, r3, #1
 7157 408c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
1005:../proyecto.c **** 		lcd_putColumn( k, photo, k);
 7158              		.loc 1 1005 0 discriminator 1
 7159 4090 B2215BE1 		ldrh	r2, [fp, #-18]
 7160 4094 B2315BE1 		ldrh	r3, [fp, #-18]
 7161 4098 0200A0E1 		mov	r0, r2
 7162 409c 18101BE5 		ldr	r1, [fp, #-24]
 7163 40a0 0320A0E1 		mov	r2, r3
 7164 40a4 FEFFFFEB 		bl	lcd_putColumn
1006:../proyecto.c **** 		lcd_putColumn( LCD_COLS-1 - k, photo, LCD_COLS-1 - k);
 7165              		.loc 1 1006 0 discriminator 1
 7166 40a8 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 7167 40ac 9F3063E2 		rsb	r3, r3, #159
 7168 40b0 0338A0E1 		mov	r3, r3, asl #16
 7169 40b4 2328A0E1 		mov	r2, r3, lsr #16
 7170 40b8 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 7171 40bc 9F3063E2 		rsb	r3, r3, #159
 7172 40c0 0338A0E1 		mov	r3, r3, asl #16
 7173 40c4 2338A0E1 		mov	r3, r3, lsr #16
 7174 40c8 0200A0E1 		mov	r0, r2
 7175 40cc 18101BE5 		ldr	r1, [fp, #-24]
 7176 40d0 0320A0E1 		mov	r2, r3
 7177 40d4 FEFFFFEB 		bl	lcd_putColumn
1007:../proyecto.c **** 		--k;
 7178              		.loc 1 1007 0 discriminator 1
 7179 40d8 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 7180 40dc 013043E2 		sub	r3, r3, #1
 7181 40e0 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1008:../proyecto.c **** 		sw_delay_ms( 10 );
 7182              		.loc 1 1008 0 discriminator 1
 7183 40e4 0A00A0E3 		mov	r0, #10
 7184 40e8 FEFFFFEB 		bl	sw_delay_ms
1001:../proyecto.c **** 	for (x = (LCD_ROWS - LCD_COLS); x >= 0; --x){
 7185              		.loc 1 1001 0 discriminator 1
 7186 40ec BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7187 40f0 013043E2 		sub	r3, r3, #1
 7188 40f4 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
1009:../proyecto.c **** 	}
 7189              		.loc 1 1009 0 discriminator 1
 7190 40f8 CFFFFFEA 		b	.L198
 7191              		.cfi_endproc
 7192              	.LFE19:
 7194              		.align	2
 7195              		.global	efectoCuadradoSaliente
 7197              	efectoCuadradoSaliente:
 7198              	.LFB20:
1010:../proyecto.c **** }
1011:../proyecto.c **** 
1012:../proyecto.c **** /*
1013:../proyecto.c ****  ** Efecto cuadrado entrante: La nueva imagen se superpone progresivamente rellenando el centro has
1014:../proyecto.c ****  */
1015:../proyecto.c **** void efectoCuadradoSaliente( uint8 *photo, uint8 sense ){
 7199              		.loc 1 1015 0
 7200              		.cfi_startproc
 7201              		@ Function supports interworking.
 7202              		@ args = 0, pretend = 0, frame = 16
 7203              		@ frame_needed = 1, uses_anonymous_args = 0
 7204 40fc 0DC0A0E1 		mov	ip, sp
 7205              	.LCFI40:
 7206              		.cfi_def_cfa_register 12
 7207 4100 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 7208 4104 04B04CE2 		sub	fp, ip, #4
 7209              		.cfi_offset 14, -8
 7210              		.cfi_offset 13, -12
 7211              		.cfi_offset 11, -16
 7212              	.LCFI41:
 7213              		.cfi_def_cfa 11, 4
 7214 4108 10D04DE2 		sub	sp, sp, #16
 7215 410c 18000BE5 		str	r0, [fp, #-24]
 7216 4110 0130A0E1 		mov	r3, r1
 7217 4114 19304BE5 		strb	r3, [fp, #-25]
1016:../proyecto.c **** 	uint16 x, y, k;
1017:../proyecto.c **** 	y = (LCD_ROWS - 1) / 2;
 7218              		.loc 1 1017 0
 7219 4118 7730A0E3 		mov	r3, #119
 7220 411c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
1018:../proyecto.c **** 	k = (LCD_COLS-1) / 2;
 7221              		.loc 1 1018 0
 7222 4120 4F30A0E3 		mov	r3, #79
 7223 4124 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1019:../proyecto.c **** 	for (x = ((LCD_ROWS - 1) * (LCD_COLS-1)) / 2; x >= 0; --x){
 7224              		.loc 1 1019 0
 7225 4128 C8309FE5 		ldr	r3, .L201
 7226 412c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 7227              	.L200:
1020:../proyecto.c **** 		lcd_putRow( y, photo, y);
 7228              		.loc 1 1020 0 discriminator 1
 7229 4130 B0215BE1 		ldrh	r2, [fp, #-16]
 7230 4134 B0315BE1 		ldrh	r3, [fp, #-16]
 7231 4138 0200A0E1 		mov	r0, r2
 7232 413c 18101BE5 		ldr	r1, [fp, #-24]
 7233 4140 0320A0E1 		mov	r2, r3
 7234 4144 FEFFFFEB 		bl	lcd_putRow
1021:../proyecto.c **** 		lcd_putRow( LCD_ROWS - 1 - y, photo, LCD_ROWS - 1 - y);
 7235              		.loc 1 1021 0 discriminator 1
 7236 4148 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7237 414c EF3063E2 		rsb	r3, r3, #239
 7238 4150 0338A0E1 		mov	r3, r3, asl #16
 7239 4154 2328A0E1 		mov	r2, r3, lsr #16
 7240 4158 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7241 415c EF3063E2 		rsb	r3, r3, #239
 7242 4160 0338A0E1 		mov	r3, r3, asl #16
 7243 4164 2338A0E1 		mov	r3, r3, lsr #16
 7244 4168 0200A0E1 		mov	r0, r2
 7245 416c 18101BE5 		ldr	r1, [fp, #-24]
 7246 4170 0320A0E1 		mov	r2, r3
 7247 4174 FEFFFFEB 		bl	lcd_putRow
1022:../proyecto.c **** 		sw_delay_ms( 10 );
 7248              		.loc 1 1022 0 discriminator 1
 7249 4178 0A00A0E3 		mov	r0, #10
 7250 417c FEFFFFEB 		bl	sw_delay_ms
1023:../proyecto.c **** 		++y;
 7251              		.loc 1 1023 0 discriminator 1
 7252 4180 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7253 4184 013083E2 		add	r3, r3, #1
 7254 4188 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
1024:../proyecto.c **** 		lcd_putColumn( k, photo, k);
 7255              		.loc 1 1024 0 discriminator 1
 7256 418c B2215BE1 		ldrh	r2, [fp, #-18]
 7257 4190 B2315BE1 		ldrh	r3, [fp, #-18]
 7258 4194 0200A0E1 		mov	r0, r2
 7259 4198 18101BE5 		ldr	r1, [fp, #-24]
 7260 419c 0320A0E1 		mov	r2, r3
 7261 41a0 FEFFFFEB 		bl	lcd_putColumn
1025:../proyecto.c **** 		lcd_putColumn( LCD_COLS-1 - k, photo, LCD_COLS-1 - k);
 7262              		.loc 1 1025 0 discriminator 1
 7263 41a4 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 7264 41a8 9F3063E2 		rsb	r3, r3, #159
 7265 41ac 0338A0E1 		mov	r3, r3, asl #16
 7266 41b0 2328A0E1 		mov	r2, r3, lsr #16
 7267 41b4 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 7268 41b8 9F3063E2 		rsb	r3, r3, #159
 7269 41bc 0338A0E1 		mov	r3, r3, asl #16
 7270 41c0 2338A0E1 		mov	r3, r3, lsr #16
 7271 41c4 0200A0E1 		mov	r0, r2
 7272 41c8 18101BE5 		ldr	r1, [fp, #-24]
 7273 41cc 0320A0E1 		mov	r2, r3
 7274 41d0 FEFFFFEB 		bl	lcd_putColumn
1026:../proyecto.c **** 		sw_delay_ms( 10 );
 7275              		.loc 1 1026 0 discriminator 1
 7276 41d4 0A00A0E3 		mov	r0, #10
 7277 41d8 FEFFFFEB 		bl	sw_delay_ms
1027:../proyecto.c **** 		++k;
 7278              		.loc 1 1027 0 discriminator 1
 7279 41dc B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 7280 41e0 013083E2 		add	r3, r3, #1
 7281 41e4 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1019:../proyecto.c **** 	for (x = ((LCD_ROWS - 1) * (LCD_COLS-1)) / 2; x >= 0; --x){
 7282              		.loc 1 1019 0 discriminator 1
 7283 41e8 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7284 41ec 013043E2 		sub	r3, r3, #1
 7285 41f0 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
1028:../proyecto.c **** 	}
 7286              		.loc 1 1028 0 discriminator 1
 7287 41f4 CDFFFFEA 		b	.L200
 7288              	.L202:
 7289              		.align	2
 7290              	.L201:
 7291 41f8 384A0000 		.word	19000
 7292              		.cfi_endproc
 7293              	.LFE20:
 7295              		.align	2
 7296              		.global	efectoPeine
 7298              	efectoPeine:
 7299              	.LFB21:
1029:../proyecto.c **** }
1030:../proyecto.c **** 
1031:../proyecto.c **** /*
1032:../proyecto.c ****  ** Efecto peine: La nueva imagen aparece conforme la imagen mostrada desaparece haciendo scroll in
1033:../proyecto.c ****  */
1034:../proyecto.c **** void efectoPeine( uint8 *photo, uint8 sense ){
 7300              		.loc 1 1034 0
 7301              		.cfi_startproc
 7302              		@ Function supports interworking.
 7303              		@ args = 0, pretend = 0, frame = 16
 7304              		@ frame_needed = 1, uses_anonymous_args = 0
 7305 41fc 0DC0A0E1 		mov	ip, sp
 7306              	.LCFI42:
 7307              		.cfi_def_cfa_register 12
 7308 4200 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 7309 4204 04B04CE2 		sub	fp, ip, #4
 7310              		.cfi_offset 14, -8
 7311              		.cfi_offset 13, -12
 7312              		.cfi_offset 11, -16
 7313              	.LCFI43:
 7314              		.cfi_def_cfa 11, 4
 7315 4208 18D04DE2 		sub	sp, sp, #24
 7316 420c 18000BE5 		str	r0, [fp, #-24]
 7317 4210 0130A0E1 		mov	r3, r1
 7318 4214 19304BE5 		strb	r3, [fp, #-25]
1035:../proyecto.c **** 	uint16 x, y, cont, init;
1036:../proyecto.c **** 	for ( x=0; x<=LCD_COLS-1; x++ ){
 7319              		.loc 1 1036 0
 7320 4218 0030A0E3 		mov	r3, #0
 7321 421c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 7322 4220 790000EA 		b	.L204
 7323              	.L212:
1037:../proyecto.c **** 		cont = 0;
 7324              		.loc 1 1037 0
 7325 4224 0030A0E3 		mov	r3, #0
 7326 4228 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1038:../proyecto.c **** 		init = 0;
 7327              		.loc 1 1038 0
 7328 422c 0030A0E3 		mov	r3, #0
 7329 4230 B4314BE1 		strh	r3, [fp, #-20]	@ movhi
1039:../proyecto.c **** 		for (y = 0; y < LCD_ROWS; ++y){
 7330              		.loc 1 1039 0
 7331 4234 0030A0E3 		mov	r3, #0
 7332 4238 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 7333 423c 6A0000EA 		b	.L205
 7334              	.L211:
1040:../proyecto.c **** 			if (cont == 119 && sense == LEFT){
 7335              		.loc 1 1040 0
 7336 4240 B2315BE1 		ldrh	r3, [fp, #-18]
 7337 4244 770053E3 		cmp	r3, #119
 7338 4248 1700001A 		bne	.L206
 7339              		.loc 1 1040 0 is_stmt 0 discriminator 1
 7340 424c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 7341 4250 000053E3 		cmp	r3, #0
 7342 4254 1400001A 		bne	.L206
1041:../proyecto.c **** 				lcd_putPixelColumn(LCD_COLS - 1 - x, photo, LCD_COLS - 1 - x, init, (y));
 7343              		.loc 1 1041 0 is_stmt 1
 7344 4258 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7345 425c 9F3063E2 		rsb	r3, r3, #159
 7346 4260 0338A0E1 		mov	r3, r3, asl #16
 7347 4264 2318A0E1 		mov	r1, r3, lsr #16
 7348 4268 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7349 426c 9F3063E2 		rsb	r3, r3, #159
 7350 4270 0338A0E1 		mov	r3, r3, asl #16
 7351 4274 2328A0E1 		mov	r2, r3, lsr #16
 7352 4278 B4315BE1 		ldrh	r3, [fp, #-20]
 7353 427c B0015BE1 		ldrh	r0, [fp, #-16]
 7354 4280 00008DE5 		str	r0, [sp, #0]
 7355 4284 0100A0E1 		mov	r0, r1
 7356 4288 18101BE5 		ldr	r1, [fp, #-24]
 7357 428c FEFFFFEB 		bl	lcd_putPixelColumn
1042:../proyecto.c **** 				init = y;
 7358              		.loc 1 1042 0
 7359 4290 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7360 4294 B4314BE1 		strh	r3, [fp, #-20]	@ movhi
1043:../proyecto.c **** 				cont = 0;
 7361              		.loc 1 1043 0
 7362 4298 0030A0E3 		mov	r3, #0
 7363 429c B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1044:../proyecto.c **** 				sense = RIGHT;
 7364              		.loc 1 1044 0
 7365 42a0 0130A0E3 		mov	r3, #1
 7366 42a4 19304BE5 		strb	r3, [fp, #-25]
 7367 42a8 100000EA 		b	.L207
 7368              	.L206:
1045:../proyecto.c **** 			}
1046:../proyecto.c **** 			else if (cont == 119){
 7369              		.loc 1 1046 0
 7370 42ac B2315BE1 		ldrh	r3, [fp, #-18]
 7371 42b0 770053E3 		cmp	r3, #119
 7372 42b4 0D00001A 		bne	.L207
1047:../proyecto.c **** 				lcd_putPixelColumn(x, photo, x, init, (y));
 7373              		.loc 1 1047 0
 7374 42b8 BE105BE1 		ldrh	r1, [fp, #-14]
 7375 42bc BE205BE1 		ldrh	r2, [fp, #-14]
 7376 42c0 B4315BE1 		ldrh	r3, [fp, #-20]
 7377 42c4 B0015BE1 		ldrh	r0, [fp, #-16]
 7378 42c8 00008DE5 		str	r0, [sp, #0]
 7379 42cc 0100A0E1 		mov	r0, r1
 7380 42d0 18101BE5 		ldr	r1, [fp, #-24]
 7381 42d4 FEFFFFEB 		bl	lcd_putPixelColumn
1048:../proyecto.c **** 				init = y;
 7382              		.loc 1 1048 0
 7383 42d8 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7384 42dc B4314BE1 		strh	r3, [fp, #-20]	@ movhi
1049:../proyecto.c **** 				cont = 0;
 7385              		.loc 1 1049 0
 7386 42e0 0030A0E3 		mov	r3, #0
 7387 42e4 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1050:../proyecto.c **** 				sense = RIGHT;
 7388              		.loc 1 1050 0
 7389 42e8 0130A0E3 		mov	r3, #1
 7390 42ec 19304BE5 		strb	r3, [fp, #-25]
 7391              	.L207:
1051:../proyecto.c **** 			}
1052:../proyecto.c **** 
1053:../proyecto.c **** 			switch(sense){
 7392              		.loc 1 1053 0
 7393 42f0 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 7394 42f4 000053E3 		cmp	r3, #0
 7395 42f8 0200000A 		beq	.L209
 7396 42fc 010053E3 		cmp	r3, #1
 7397 4300 1800000A 		beq	.L210
 7398 4304 320000EA 		b	.L208
 7399              	.L209:
1054:../proyecto.c **** 			case LEFT:
1055:../proyecto.c **** 				lcd_shift(LEFT, (uint32) lcd_buffer + (y * LCD_COLS) + 1, (uint32) lcd_buffer + (y * LCD_COLS),
 7400              		.loc 1 1055 0
 7401 4308 B0215BE1 		ldrh	r2, [fp, #-16]
 7402 430c 0230A0E1 		mov	r3, r2
 7403 4310 0331A0E1 		mov	r3, r3, asl #2
 7404 4314 023083E0 		add	r3, r3, r2
 7405 4318 8332A0E1 		mov	r3, r3, asl #5
 7406 431c 0320A0E1 		mov	r2, r3
 7407 4320 FC309FE5 		ldr	r3, .L213
 7408 4324 013083E2 		add	r3, r3, #1
 7409 4328 031082E0 		add	r1, r2, r3
 7410 432c B0215BE1 		ldrh	r2, [fp, #-16]
 7411 4330 0230A0E1 		mov	r3, r2
 7412 4334 0331A0E1 		mov	r3, r3, asl #2
 7413 4338 023083E0 		add	r3, r3, r2
 7414 433c 8332A0E1 		mov	r3, r3, asl #5
 7415 4340 0320A0E1 		mov	r2, r3
 7416 4344 D8309FE5 		ldr	r3, .L213
 7417 4348 032082E0 		add	r2, r2, r3
 7418 434c BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7419 4350 9F3063E2 		rsb	r3, r3, #159
 7420 4354 0338A0E1 		mov	r3, r3, asl #16
 7421 4358 2338A0E1 		mov	r3, r3, lsr #16
 7422 435c 0000A0E3 		mov	r0, #0
 7423 4360 FEFFFFEB 		bl	lcd_shift
1056:../proyecto.c **** 				break;
 7424              		.loc 1 1056 0
 7425 4364 1A0000EA 		b	.L208
 7426              	.L210:
1057:../proyecto.c **** 			case RIGHT:
1058:../proyecto.c **** 				lcd_shift( RIGHT, (uint32) lcd_buffer + (y*LCD_COLS) + LCD_COLS - 2,  (uint32) lcd_buffer + (y*
 7427              		.loc 1 1058 0
 7428 4368 B0215BE1 		ldrh	r2, [fp, #-16]
 7429 436c 0230A0E1 		mov	r3, r2
 7430 4370 0331A0E1 		mov	r3, r3, asl #2
 7431 4374 023083E0 		add	r3, r3, r2
 7432 4378 8332A0E1 		mov	r3, r3, asl #5
 7433 437c 0320A0E1 		mov	r2, r3
 7434 4380 9C309FE5 		ldr	r3, .L213
 7435 4384 A03083E2 		add	r3, r3, #160
 7436 4388 023043E2 		sub	r3, r3, #2
 7437 438c 031082E0 		add	r1, r2, r3
 7438 4390 B0215BE1 		ldrh	r2, [fp, #-16]
 7439 4394 0230A0E1 		mov	r3, r2
 7440 4398 0331A0E1 		mov	r3, r3, asl #2
 7441 439c 023083E0 		add	r3, r3, r2
 7442 43a0 8332A0E1 		mov	r3, r3, asl #5
 7443 43a4 0320A0E1 		mov	r2, r3
 7444 43a8 74309FE5 		ldr	r3, .L213
 7445 43ac A03083E2 		add	r3, r3, #160
 7446 43b0 013043E2 		sub	r3, r3, #1
 7447 43b4 032082E0 		add	r2, r2, r3
 7448 43b8 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7449 43bc 9F3063E2 		rsb	r3, r3, #159
 7450 43c0 0338A0E1 		mov	r3, r3, asl #16
 7451 43c4 2338A0E1 		mov	r3, r3, lsr #16
 7452 43c8 0100A0E3 		mov	r0, #1
 7453 43cc FEFFFFEB 		bl	lcd_shift
1059:../proyecto.c **** 				break;
 7454              		.loc 1 1059 0
 7455 43d0 0000A0E1 		mov	r0, r0	@ nop
 7456              	.L208:
1060:../proyecto.c **** 			}
1061:../proyecto.c **** 			++cont;
 7457              		.loc 1 1061 0
 7458 43d4 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 7459 43d8 013083E2 		add	r3, r3, #1
 7460 43dc B2314BE1 		strh	r3, [fp, #-18]	@ movhi
1039:../proyecto.c **** 		for (y = 0; y < LCD_ROWS; ++y){
 7461              		.loc 1 1039 0
 7462 43e0 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 7463 43e4 013083E2 		add	r3, r3, #1
 7464 43e8 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 7465              	.L205:
1039:../proyecto.c **** 		for (y = 0; y < LCD_ROWS; ++y){
 7466              		.loc 1 1039 0 is_stmt 0 discriminator 1
 7467 43ec B0315BE1 		ldrh	r3, [fp, #-16]
 7468 43f0 EF0053E3 		cmp	r3, #239
 7469 43f4 91FFFF9A 		bls	.L211
1062:../proyecto.c **** 		}
1063:../proyecto.c **** 		//lcd_putPixelColumn(LCD_COLS - 1 - x, photo, LCD_COLS - 1 - x, init, LCD_ROWS);
1064:../proyecto.c **** 		sw_delay_ms(10);
 7470              		.loc 1 1064 0 is_stmt 1
 7471 43f8 0A00A0E3 		mov	r0, #10
 7472 43fc FEFFFFEB 		bl	sw_delay_ms
1036:../proyecto.c **** 	for ( x=0; x<=LCD_COLS-1; x++ ){
 7473              		.loc 1 1036 0
 7474 4400 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 7475 4404 013083E2 		add	r3, r3, #1
 7476 4408 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 7477              	.L204:
1036:../proyecto.c **** 	for ( x=0; x<=LCD_COLS-1; x++ ){
 7478              		.loc 1 1036 0 is_stmt 0 discriminator 1
 7479 440c BE305BE1 		ldrh	r3, [fp, #-14]
 7480 4410 9F0053E3 		cmp	r3, #159
 7481 4414 82FFFF9A 		bls	.L212
1065:../proyecto.c **** 	}
1066:../proyecto.c **** }
 7482              		.loc 1 1066 0 is_stmt 1
 7483 4418 0CD04BE2 		sub	sp, fp, #12
 7484 441c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 7485 4420 1EFF2FE1 		bx	lr
 7486              	.L214:
 7487              		.align	2
 7488              	.L213:
 7489 4424 00000000 		.word	lcd_buffer
 7490              		.cfi_endproc
 7491              	.LFE21:
 7493              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 proyecto.c
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:1894   .rodata:00000000 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:1916   .text:00000000 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:1919   .text:00000000 main
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:4666   .text:00002704 lcd_putBmp
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:2054   .text:00000158 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5493   .text:00002f4c efectoEmpuje
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5732   .text:000031dc efectoBarrido
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5882   .text:00003344 efectoRevelado
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5459   .text:00002f1c efectoNulo
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:2070   .text:00000194 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:4808   .text:000028a0 lcd_bmp2photo
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:4176   .text:00002050 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6160   .text:00003670 efectoCobertura
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6475   .text:00003a24 efectoDivisionEntrante
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6607   .text:00003b78 efectoDivisionSaliente
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6737   .text:00003cbc efectoBarras
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6868   .text:00003dfc efectoDesvanecer
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6949   .text:00003eac efectoFlash
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:4190   .text:00002084 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:4801   .text:0000289c $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:4805   .text:000028a0 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:4932   .text:00002a00 test
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5017   .text:00002ad0 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5021   .text:00002ad4 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5024   .text:00002ad4 lcd_putColumn
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5089   .text:00002b78 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5093   .text:00002b7c $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5096   .text:00002b7c lcd_putRow
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5172   .text:00002c44 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5181   .text:00002c5c $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5184   .text:00002c5c lcd_putPhoto
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5244   .text:00002ce4 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5253   .text:00002cfc $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5256   .text:00002cfc lcd_shift
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5285   .text:00002d30 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5291   .text:00002d40 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5449   .text:00002f0c $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5456   .text:00002f1c $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5520   .text:00002f78 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5526   .text:00002f88 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5721   .text:000031c8 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5729   .text:000031dc $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5759   .text:00003208 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5765   .text:00003218 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5909   .text:00003370 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:5915   .text:00003380 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6150   .text:00003660 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6157   .text:00003670 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6187   .text:0000369c $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6193   .text:000036ac $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6468   .text:00003a20 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6472   .text:00003a24 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6942   .text:00003ea8 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:6946   .text:00003eac $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7023   .text:00003f58 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7027   .text:00003f5c $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7030   .text:00003f5c lcd_putPixelColumn
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7096   .text:00004004 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7100   .text:00004008 $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7103   .text:00004008 efectoCuadradoEntrante
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7197   .text:000040fc efectoCuadradoSaliente
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7291   .text:000041f8 $d
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7295   .text:000041fc $a
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7298   .text:000041fc efectoPeine
C:\Users\DOSTATIC\AppData\Local\Temp\ccaEUWFj.s:7489   .text:00004424 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
segs_init
timers_init
keypad_init
lcd_init
lcd_clear
lcd_on
lcd_puts
keypad_pressed
keypad_getchar
sw_delay_s
lcd_buffer
segs_putchar
sw_delay_ms
